{"version":3,"sources":["constants.ts","css/Color.ts","css/CSSToken.ts","parsing/Parser.ts","parsing/Tokenizer.ts","css/CSSTokenizer.ts","css/Property.ts","css/PropertyMap.ts","model/Anchor.ts","css/Style.ts","css/Rule.ts","css/Selector.ts","css/index.ts","css/CSSParser.ts","serializer/FileSerializer.ts","renderer/anchors.ts","model/AbstractElement.ts","model/Shape.ts","model/LinePattern.ts","model/Classifier.ts","model/Diagram.ts","model/Tip.ts","model/Relationship.ts","model/Separator.ts","model/Stereotype.ts","model/Text.ts","model/Title.ts","serializer/Serializer.ts","uml/Aggregation.ts","uml/Anchor.ts","uml/Association.ts","uml/Class.ts","uml/Component.ts","uml/Composition.ts","uml/DataType.ts","uml/Dependency.ts","uml/DirectedAssociation.ts","uml/Enumeration.ts","uml/Generalization.ts","uml/Implementation.ts","uml/Interface.ts","uml/Note.ts","uml/Package.ts","uml/Primitive.ts","serializer/index.ts","serializer/UMLSerializer.ts","encoding/base64.ts","encoding/utf8.ts","encoding/index.ts","hooks/useDocumentTitle.ts","hooks/useId.ts","hooks/useShortcut.ts","components/blocks/ContainerFluid.tsx","components/blocks/DropdownDivider.tsx","components/blocks/Shortcut.tsx","components/blocks/DropdownItem.tsx","components/blocks/DropdownMenu.tsx","components/blocks/DropdownToggle.tsx","components/blocks/Editor.tsx","components/blocks/ExternalLink.tsx","components/blocks/Flag.tsx","components/blocks/Icon.tsx","components/blocks/logo.png","components/blocks/MenuBar.tsx","components/blocks/NavItem.tsx","components/blocks/Menu.tsx","components/widgets/DeleteElement.tsx","components/widgets/DuplicateElement.tsx","components/widgets/FileNew.tsx","utils.ts","components/widgets/FileOpen.tsx","components/widgets/FileRename.tsx","components/widgets/FileSave.tsx","components/widgets/LocaleItem.tsx","renderer/ShapeRenderer.ts","renderer/CanvasClassifierRenderer.ts","renderer/bresenhamAlgorithm.ts","renderer/CanvasRelationshipRenderer.ts","renderer/Handle.ts","renderer/HTML5Canvas.ts","renderer/RenderContext.ts","renderer/CanvasRenderer.ts","renderer/SVGCanvas.ts","renderer/SVGRenderer.ts","components/widgets/PNGExport.tsx","components/widgets/SVGExport.tsx","components/widgets/ToggleGrid.tsx","components/widgets/AppMenu.tsx","components/widgets/Canvas.tsx","components/widgets/CSSEditor.tsx","components/widgets/LocaleSwitch.tsx","components/schemas/xmlSchema.ts","components/widgets/XMLEditor.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GRID","PADDING","MARGIN","HANDLE_RADIUS","INITIAL_XML","INITIAL_CSS","Color","red","green","blue","this","sanitizeComponent","intToHex","other","percentage","otherFactor","clamp","thisFactor","hexString","parseInt","slice","min","max","value","clamped","Math","round","toString","padStart","BLUE","fromHexString","INDIGO","PURPLE","PINK","RED","ORANGE","YELLOW","GREEN","TEAL","CYAN","WHITE","GRAY","GRAY_DARK","PRIMARY","SECONDARY","SUCCESS","INFO","WARNING","DANGER","LIGHT","DARK","CSSToken","Parser","tokenizer","tokens","index","string","tokenize","parse","kind","token","Error","parsers","parser","parseOptional","undefined","result","Set","oldIndex","add","call","err","Tokenizer","subject","length","next","newIndex","push","search","match","startsWith","CSSTokenizer","matches","COLOR","NUMBER","LBRACE","RBRACE","COLON","SEMI","DOT","HASH","IDENTIFIER","ERROR","Property","key","Symbol","iterator","Anchor","PropertyMap","properties","map","Map","property","entries","set","fallback","get","Style","rules","context","head","tail","hasTail","rule","selector","tag","addAll","getProperties","Rule","Selector","classes","id","parseRuleSet","parseSet","parseRule","parseSelector","consume","parsePropertySet","parseClassSet","parseOptionalId","parseProperty","parseIdentifier","parseOneOf","parseColor","parseNumber","parseIdentifierValue","parseClass","parseId","color","number","parseFloat","identifier","FileSerializer","file","header","title","model","xml","style","css","joinSections","content","splitSections","headerString","parseHeader","sections","str","trim","join","expectedNumber","split","isSide","side","anchor","qsin","CENTER","NNW","SSW","N","S","NNE","SSE","qcos","ENE","WNW","E","W","ESE","WSW","Shape","AbstractElement","children","hovered","selected","child","delete","reverse","LinePattern","Classifier","x","y","width","height","shape","RECTANGLE","getLeft","getTop","left","top","renderer","renderClassifier","constructor","Object","getPrototypeOf","Diagram","renderDiagram","predicate","findElement","element","getChildren","getRight","getBottom","reduceClassifiers","acc","classifier","Infinity","bottom","right","reducer","seed","Tip","Relationship","from","fromAnchor","to","toAnchor","fromTip","NONE","toTip","linePattern","SOLID","renderRelationship","Separator","renderSeparator","Stereotype","renderStereotype","Text","text","renderText","Title","renderTitle","Serializer","serializer","elementMap","DOMParser","XMLSerializer","clear","document","parseFromString","diagram","parseElement","documentElement","Model","hasElement","root","getElement","serializeToString","xmlElement","setElement","has","parsed","parseElementSwitch","setDiagram","setClassifier","setText","tagName","parseDiagram","parseClassifier","parseRelationship","parseTitle","parseText","parseChildren","updateChildren","parseAnchorAttribute","parseIntAttribute","parseEnumAttribute","setAnchorAttribute","setIntAttribute","getX","getY","getWidth","getHeight","relationship","parseClassifierAttribute","parseTipAttribute","parseLinePatternAttribute","textContent","target","addChild","console","error","visitedChildren","childElement","getOrCreateElement","remove","cleanupWhiteSpace","createElement","attribute","hasAttribute","getAttribute","elementById","ownerDocument","getElementById","setEnumAttribute","enumClass","item","Reflect","toUpperCase","enumValue","removeAttribute","toLowerCase","setAttribute","Number","isNaN","String","values","parent","newElement","getTagName","generateId","appendChild","prefix","i","level","getLevel","originalChildren","childNodes","removeChild","first","originalChild","extraNewLine","addText","getIndent","repeat","offset","parentElement","data","createTextNode","Aggregation","DIAMOND","DOTS","Association","Class","Component","COMPONENT","Composition","FILLED_DIAMOND","DataType","Dependency","ARROW","TIGHT_DASHES","DirectedAssociation","Enumeration","Generalization","TRIANGLE","Implementation","Interface","Note","NOTE","Package","FOLDER","Primitive","UML","fileSerializer","byteToASCII","byte","asciiToByte","ascii","threeToFourBytes","input1","input2","input3","encodeString","output","fromCharCode","enc","TextEncoder","dec","TextDecoder","encode","saveToString","utf8","input","Base64","Pako","decode","hash","deflated","encoded","input4","endsWith2Eq","endsWith1Eq","Array","fill","_","charCodeAt","Uint8Array","UTF8","loadFromString","useDocumentTitle","useEffect","useId","useRef","random","substring","current","useShortcut","shortcut","handler","ref","keypressHandler","event","elements","ctrlKey","shiftKey","altKey","matchesShortcut","preventDefault","addEventListener","removeEventListener","ContainerFluid","className","DropdownDivider","Shortcut","intl","useIntl","parts","formatMessage","defaultMessage","part","DropdownItem","onClick","active","classNames","DropdownMenu","placement","labelledBy","aria-labelledby","DropdownToggle","dropdown","dispose","Dropdown","aria-expanded","data-bs-toggle","completeAfter","cm","pred","setTimeout","state","completionActive","showHint","completeSingle","CodeMirror","Pass","completeIfAfterLt","cur","getCursor","getRange","Pos","line","ch","completeIfInTag","tok","getTokenAt","type","test","charAt","innerMode","getMode","Editor","language","schema","onChange","onChangeRef","editor","mode","hintOptions","schemaInfo","codeMirror","fromTextArea","lineNumbers","theme","matchTags","autocorrect","tabSize","extraKeys","toTextArea","handleChange","newValue","getValue","setValue","on","off","defaultValue","ExternalLink","href","rel","Flag","country","Icon","name","size","toHexString","xlinkHref","iconUrl","MenuBar","gridArea","alt","src","logo","NavItem","Menu","DeleteElement","onDeleteElement","isSelected","DuplicateElement","onAddElement","elementsToDuplicate","setSelected","clone","childClone","FileNew","onFileChange","untitled","message","window","prompt","getMouseCoordinates","clientX","clientY","boundingClientRect","currentTarget","getBoundingClientRect","sanitizeFilename","replace","downloadFile","filename","dataURL","downloadLink","download","click","FileOpen","pattern","Promise","resolve","uploadInput","files","once","accept","multiple","then","FileRename","onTitleChange","newTitle","FileSave","btoa","url","URL","LocaleItem","locale","onLocaleChange","ShapeRenderer","canvas","rectangle","drawRectangleShape","ELLIPSE","drawEllipseShape","drawFolderShape","drawNoteShape","BOX","drawBoxShape","FILE","drawFileShape","drawComponentShape","rect","ellipse","NOTE_SIZE","moveTo","lineTo","closePath","BOX_DEPTH","FILE_SIZE","COMPONENT_WIDTH","COMPONENT_HEIGHT","COMPONENT_Y","CanvasClassifierRenderer","shapeRenderer","save","applyStyle","drawShape","stroke","clip","translate","render","restore","pop","domPoint","getTransform","transformPoint","isPointInPath","getStyleProperties","lineWidth","getFloat","strokeColor","getColor","isHovered","mix","fillColor","beginPath","renderShape","getRectangle","bresenhamAlgorithm","lx1","lx2","ly1","ly2","ox","oy","cl1","cl2","x1","getAnchorX","y1","getAnchorY","x2","y2","dx","abs","dy","sx","sy","p1Hit","p2Hit","e","isPointInClassifier","e2","CanvasRelationshipRenderer","angle","atan2","applyRelationshipStyle","drawFromTip","drawToTip","setLineDash","SMALL_DASHES","LARGE_DASHES","drawTip","PI","tip","rotate","drawTipPath","drawArrow","drawTriangle","FILLED_TRIANGLE","drawDiamond","CIRCLE","drawCircle","FILLED_CIRCLE","Handle","HTML5Canvas","ctx","dash","radiusX","radiusY","metrics","measureText","anchorY","fontBoundingBoxAscent","anchorX","fillText","font","attrs","fillStyle","strokeStyle","getFontAttribute","fontStyle","updateFontAttribute","fontWeight","fontSize","fontFamily","RenderContext","canvasWidth","canvasHeight","unshift","shift","CanvasRenderer","options","classifierRenderer","relationshipRenderer","translateX","translateY","getContext","html5Canvas","clearRect","minX","floor","maxX","minY","maxY","renderHandles","drawText","separator","stereotype","contextName","getName","align","weight","getString","family","getHandles","renderHandleAtPoint","getClassifierHandles","handle","isPointInHandle","NW","getCenterX","NE","getCenterY","SW","SE","SVGCanvas","container","stack","paths","saved","matrix","DOMMatrix","path","getContainer","currentMatrix","splice","indexOf","svg","createSVG","append","radiansToDegrees","appendPaths","textEl","encodeUTF8","createElementNS","SVGRenderer","baseVal","PNGExport","toDataURL","SVGExport","viewBox","ToggleGrid","viewOptions","onViewOptionsChange","grid","icon","AppMenu","createRenderer","Canvas","div","mouseDownCoords","mouseDownRectangle","mouseDownObject","setCursor","cursor","handleLeftMouseButtonMove","coord","by","vec1","vec2","find","el","deltaX","deltaY","setLeft","setTop","setWidth","setHeight","handleHandleUpdate","onResize","trunc","renderGrid","backgroundColor","onMouseMove","buttons","setHovered","findHandleForPoint","onMouseDown","selectedElement","renderMouseDown","onMouseUp","CSSEditor","position","getMessagesForLocale","DE_MESSAGES","EN_MESSAGES","LocaleSwitch","useState","navigator","setLocale","messages","defaultLocale","anchorSchema","keys","filter","it","shapeSchema","tipSchema","classifierSchema","relationshipSchema","classifiers","relationships","class","XMLEditor","xmlSchema","App","untitledMsg","titleMsg","setViewOptions","setStyle","setTitle","setXml","setCss","forceRerender","handleCanvasChange","updateElement","serialize","docXml","docCss","location","deserialize","deleteChild","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e3d27cc1.chunk.js","sourcesContent":["export const GRID = 20;\nexport const PADDING = 10;\nexport const MARGIN = 10;\nexport const HANDLE_RADIUS = 4.5;\nexport const INITIAL_XML = `\\\n<Diagram>\n  <Interface id=\"i1\" anchor=\"s\" y=\"-60\">\n    <Stereotype/>\n    <Title>Visitor</Title>\n  </Interface>\n\n  <Class id=\"c1\" anchor=\"n\" y=\"60\" width=\"400\">\n    <Stereotype/>\n    <Title>Concrete Visitor</Title>\n    <Separator/>\n    <Text>visitSomething(something: Something)</Text>\n  </Class>\n\n  <Implementation from=\"c1\" to=\"i1\" fromAnchor=\"n\" toAnchor=\"s\"/>\n</Diagram>\n`;\nexport const INITIAL_CSS = `\\\nInterface {\n  Title {\n    font-style: italic;\n  }\n}\n\nClass {\n  Title {\n    font-weight: bold;\n  }\n}\n`;\n","class Color {\n  readonly red: number;\n  readonly green: number;\n  readonly blue: number;\n\n  static readonly BLUE = Color.fromHexString(\"#0d6efd\");\n  static readonly INDIGO = Color.fromHexString(\"#6610f2\");\n  static readonly PURPLE = Color.fromHexString(\"#6f42c1\");\n  static readonly PINK = Color.fromHexString(\"#d63384\");\n  static readonly RED = Color.fromHexString(\"#dc3545\");\n  static readonly ORANGE = Color.fromHexString(\"#fd7e14\");\n  static readonly YELLOW = Color.fromHexString(\"#ffc107\");\n  static readonly GREEN = Color.fromHexString(\"#198754\");\n  static readonly TEAL = Color.fromHexString(\"#20c997\");\n  static readonly CYAN = Color.fromHexString(\"#0dcaf0\");\n  static readonly WHITE = Color.fromHexString(\"#ffffff\");\n  static readonly GRAY = Color.fromHexString(\"#6c757d\");\n  static readonly GRAY_DARK = Color.fromHexString(\"#343a40\");\n  static readonly PRIMARY = Color.fromHexString(\"#0d6efd\");\n  static readonly SECONDARY = Color.fromHexString(\"#6c757d\");\n  static readonly SUCCESS = Color.fromHexString(\"#198754\");\n  static readonly INFO = Color.CYAN;\n  static readonly WARNING = Color.YELLOW;\n  static readonly DANGER = Color.RED;\n  static readonly LIGHT = Color.fromHexString(\"#f8f9fa\");\n  static readonly DARK = Color.fromHexString(\"#212529\");\n\n  constructor(red: number, green: number, blue: number) {\n    this.red = Color.sanitizeComponent(red);\n    this.green = Color.sanitizeComponent(green);\n    this.blue = Color.sanitizeComponent(blue);\n  }\n\n  static fromHexString(hexString: string): Color {\n    const red = parseInt(hexString.slice(1, 3), 16);\n    const green = parseInt(hexString.slice(3, 5), 16);\n    const blue = parseInt(hexString.slice(5, 7), 16);\n    return new Color(red, green, blue);\n  }\n\n  private static clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n  }\n\n  private static sanitizeComponent(value: number): number {\n    const clamped = Color.clamp(0, 255, value);\n    return Math.round(clamped);\n  }\n\n  private static intToHex(value: number): string {\n    return value.toString(16).padStart(2, \"0\");\n  }\n\n  toHexString(): string {\n    return `#${Color.intToHex(this.red)}${Color.intToHex(this.green)}${Color.intToHex(this.blue)}`;\n  }\n\n  mix(other: Color, percentage: number): Color {\n    const otherFactor = Color.clamp(0, 1, percentage);\n    const thisFactor = 1 - otherFactor;\n    const red = thisFactor * this.red + otherFactor * other.red;\n    const green = thisFactor * this.green + otherFactor * other.green;\n    const blue = thisFactor * this.blue + otherFactor * other.blue;\n    return new Color(red, green, blue);\n  }\n}\n\nexport default Color;\n","enum CSSToken {\n  LBRACE,\n  RBRACE,\n  COLON,\n  SEMI,\n  DOT,\n  HASH,\n  COLOR,\n  NUMBER,\n  IDENTIFIER,\n  ERROR,\n}\n\nexport default CSSToken;\n","import Token from \"./Token\";\nimport Tokenizer from \"./Tokenizer\";\n\nabstract class Parser<T, D> {\n  private readonly tokenizer: Tokenizer<T>;\n  private tokens: Token<T>[] = [];\n  private index = 0;\n\n  constructor(tokenizer: Tokenizer<T>) {\n    this.tokenizer = tokenizer;\n  }\n\n  parseFromString(string: string): D {\n    this.index = 0;\n    this.tokens = this.tokenizer.tokenize(string);\n    return this.parse();\n  }\n\n  protected abstract parse(): D;\n\n  protected consume(kind: T): Token<T> {\n    const token = this.tokens[this.index];\n    if (token.kind === kind) {\n      this.index += 1;\n      return token;\n    } else {\n      throw new Error(`Expected ${kind}, but was ${token.kind}`);\n    }\n  }\n\n  protected parseOneOf<U1, U2, U3>(\n    parser1: () => U1,\n    parser2: () => U2,\n    parser3: () => U3,\n  ): U1 | U2 | U3;\n  protected parseOneOf<U1, U2>(parser1: () => U1, parser2: () => U2): U1 | U2;\n  protected parseOneOf<U1>(parser1: () => U1): U1;\n  protected parseOneOf(...parsers: Array<() => unknown>): unknown {\n    for (const parser of parsers) {\n      const value = this.parseOptional(parser);\n      if (value !== undefined) {\n        return value;\n      }\n    }\n\n    throw new Error(\"None of the one ofs matched\");\n  }\n\n  protected parseSet<U>(parser: () => U): Set<U> {\n    const result = new Set<U>();\n    while (true) {\n      const oldIndex = this.index;\n      try {\n        result.add(parser.call(this));\n      } catch (err) {\n        this.index = oldIndex;\n        return result;\n      }\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any tokens\");\n      }\n    }\n  }\n\n  protected parseOptional<U>(parser: () => U): U | undefined {\n    const oldIndex = this.index;\n    let result;\n    try {\n      result = parser.call(this);\n    } catch (err) {\n      this.index = oldIndex;\n      return undefined;\n    }\n\n    const newIndex = this.index;\n    if (newIndex <= oldIndex) {\n      throw new Error(\"Did not consume any tokens\");\n    }\n\n    return result;\n  }\n}\n\nexport default Parser;\n","import Token from \"./Token\";\n\nabstract class Tokenizer<T> {\n  private subject = \"\";\n  private index = 0;\n\n  tokenize(subject: string): Token<T>[] {\n    this.subject = subject;\n    this.index = 0;\n    const tokens = [];\n    while (this.index < this.subject.length) {\n      const oldIndex = this.index;\n      const kind = this.next();\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any characters\");\n      }\n\n      if (kind === null) {\n        continue;\n      }\n\n      const value = this.subject.slice(oldIndex, newIndex);\n      tokens.push({ kind, value });\n    }\n\n    return tokens;\n  }\n\n  protected abstract next(): T | null;\n\n  protected matches(search: RegExp): boolean {\n    const match = this.subject.slice(this.index).match(search);\n    if (match === null) {\n      return false;\n    }\n\n    this.index += match[0].length;\n    return true;\n  }\n\n  protected startsWith(search: string): boolean {\n    if (this.subject.startsWith(search, this.index)) {\n      this.index += search.length;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default Tokenizer;\n","import { Tokenizer } from \"../parsing\";\nimport CSSToken from \"./CSSToken\";\n\nclass CSSTokenizer extends Tokenizer<CSSToken> {\n  protected next(): CSSToken | null {\n    // Whitespace\n    if (this.matches(/^\\s+/)) return null;\n\n    // Comments\n    if (this.matches(/^\\/\\/[^\\r\\n]*/)) return null;\n    if (this.matches(/^\\/\\*.*?\\*\\//)) return null;\n\n    // Literals\n    if (this.matches(/^#[0-9a-fA-F]{6}|^#[0-9a-fA-F]{3}/)) return CSSToken.COLOR;\n    if (this.matches(/^\\d+(\\.\\d*)?|^\\.\\d+/)) return CSSToken.NUMBER;\n\n    // Operators\n    if (this.startsWith(\"{\")) return CSSToken.LBRACE;\n    if (this.startsWith(\"}\")) return CSSToken.RBRACE;\n    if (this.startsWith(\":\")) return CSSToken.COLON;\n    if (this.startsWith(\";\")) return CSSToken.SEMI;\n    if (this.startsWith(\".\")) return CSSToken.DOT;\n    if (this.startsWith(\"#\")) return CSSToken.HASH;\n\n    if (this.matches(/^[a-zA-Z]+(-[a-zA-Z]+)*/)) return CSSToken.IDENTIFIER;\n\n    // Fallback\n    this.matches(/^./);\n    return CSSToken.ERROR;\n  }\n}\n\nexport default CSSTokenizer;\n","class Property {\n  readonly key: string;\n  readonly value: unknown;\n\n  constructor(key: string, value: unknown) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport default Property;\n","import Color from \"./Color\";\nimport Property from \"./Property\";\n\nclass PropertyMap implements Iterable<[string, unknown]> {\n  protected readonly map: Map<string, unknown>;\n\n  constructor(properties = new Set<Property>()) {\n    this.map = new Map<string, unknown>(\n      [...properties].map((property) => [property.key, property.value] as const),\n    );\n  }\n\n  [Symbol.iterator](): Iterator<[string, unknown]> {\n    return this.map.entries();\n  }\n\n  addAll(map: PropertyMap): this {\n    for (const [key, value] of map) {\n      this.map.set(key, value);\n    }\n    return this;\n  }\n\n  getString(key: string, fallback: string): string {\n    const value = this.map.get(key);\n    if (typeof value === \"string\") {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getColor(key: string, fallback: Color): Color {\n    const value = this.map.get(key);\n    if (value instanceof Color) {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getFloat(key: string, fallback: number): number {\n    const value = this.map.get(key);\n    if (typeof value === \"number\") {\n      return value;\n    }\n\n    return fallback;\n  }\n}\n\nexport default PropertyMap;\n","enum Anchor {\n  N,\n  NNE,\n  NE,\n  ENE,\n  E,\n  ESE,\n  SE,\n  SSE,\n  S,\n  SSW,\n  SW,\n  WSW,\n  W,\n  WNW,\n  NW,\n  NNW,\n  CENTER,\n}\n\nexport default Anchor;\n","import PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\n\nclass Style {\n  readonly rules: Set<Rule>;\n\n  constructor(rules = new Set<Rule>()) {\n    this.rules = rules;\n  }\n\n  getProperties(context: string[]): PropertyMap {\n    const result = new PropertyMap();\n    const [head, ...tail] = context;\n    const hasTail = tail.length > 0;\n    for (const rule of this.rules) {\n      if (rule.selector.tag === head) {\n        const properties = new PropertyMap(rule.properties);\n        if (hasTail) {\n          properties.addAll(this.getProperties(tail));\n          properties.addAll(rule.getProperties(tail));\n        }\n        result.addAll(properties);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default Style;\n","import Style from \"./Style\";\nimport Property from \"./Property\";\nimport Selector from \"./Selector\";\n\nclass Rule extends Style {\n  readonly selector: Selector;\n  readonly properties: Set<Property>;\n\n  constructor(selector: Selector, properties: Set<Property>, rules: Set<Rule>) {\n    super(rules);\n    this.selector = selector;\n    this.properties = properties;\n  }\n}\n\nexport default Rule;\n","class Selector {\n  readonly tag: string;\n  readonly classes: Set<string>;\n  readonly id?: string;\n\n  constructor(tag: string, classes: Set<string>, id?: string) {\n    this.tag = tag;\n    this.classes = classes;\n    this.id = id;\n  }\n}\n\nexport default Selector;\n","import Color from \"./Color\";\nimport CSSParser from \"./CSSParser\";\nimport Property from \"./Property\";\nimport PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nexport { Color, CSSParser, Property, PropertyMap, Rule, Selector, Style };\n\nexport const parser = new CSSParser();\n","import { Parser } from \"../parsing\";\nimport Color from \"./Color\";\nimport CSSToken from \"./CSSToken\";\nimport CSSTokenizer from \"./CSSTokenizer\";\nimport Property from \"./Property\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nclass CSSParser extends Parser<CSSToken, Style> {\n  constructor() {\n    super(new CSSTokenizer());\n  }\n\n  protected parse(): Style {\n    return new Style(this.parseRuleSet());\n  }\n\n  private parseRuleSet(): Set<Rule> {\n    return this.parseSet(this.parseRule);\n  }\n\n  protected parseRule(): Rule {\n    const selector = this.parseSelector();\n    this.consume(CSSToken.LBRACE);\n    const properties = this.parsePropertySet();\n    const rules = this.parseRuleSet();\n    this.consume(CSSToken.RBRACE);\n\n    return new Rule(selector, properties, rules);\n  }\n\n  private parseSelector(): Selector {\n    const tag = this.consume(CSSToken.IDENTIFIER);\n    const classes = this.parseClassSet();\n    const id = this.parseOptionalId();\n\n    return new Selector(tag.value, classes, id);\n  }\n\n  private parsePropertySet(): Set<Property> {\n    return this.parseSet(this.parseProperty);\n  }\n\n  private parseProperty(): Property {\n    const key = this.parseIdentifier();\n    this.consume(CSSToken.COLON);\n\n    const value = this.parseOneOf(this.parseColor, this.parseNumber, this.parseIdentifierValue);\n    this.consume(CSSToken.SEMI);\n\n    return new Property(key, value);\n  }\n\n  private parseClassSet(): Set<string> {\n    return this.parseSet(this.parseClass);\n  }\n\n  private parseClass(): string {\n    this.consume(CSSToken.DOT);\n    const className = this.consume(CSSToken.IDENTIFIER);\n    return className.value;\n  }\n\n  private parseOptionalId(): string | undefined {\n    return this.parseOptional(this.parseId);\n  }\n\n  private parseId(): string {\n    this.consume(CSSToken.HASH);\n    const id = this.consume(CSSToken.IDENTIFIER);\n    return id.value;\n  }\n\n  private parseColor(): Color {\n    const color = this.consume(CSSToken.COLOR);\n    return Color.fromHexString(color.value);\n  }\n\n  private parseNumber(): number {\n    const number = this.consume(CSSToken.NUMBER);\n    return parseFloat(number.value);\n  }\n\n  private parseIdentifierValue(): string | Color {\n    const identifier = this.parseIdentifier();\n    switch (identifier) {\n      case \"blue\":\n        return Color.BLUE;\n      case \"indigo\":\n        return Color.INDIGO;\n      case \"purple\":\n        return Color.PURPLE;\n      case \"pink\":\n        return Color.PINK;\n      case \"red\":\n        return Color.RED;\n      case \"orange\":\n        return Color.ORANGE;\n      case \"yellow\":\n        return Color.YELLOW;\n      case \"green\":\n        return Color.GREEN;\n      case \"teal\":\n        return Color.TEAL;\n      case \"cyan\":\n        return Color.CYAN;\n      case \"white\":\n        return Color.WHITE;\n      case \"gray\":\n        return Color.GRAY;\n      case \"gray-dark\":\n        return Color.GRAY_DARK;\n      case \"primary\":\n        return Color.PRIMARY;\n      case \"secondary\":\n        return Color.SECONDARY;\n      case \"success\":\n        return Color.SUCCESS;\n      case \"info\":\n        return Color.INFO;\n      case \"warning\":\n        return Color.WARNING;\n      case \"danger\":\n        return Color.DANGER;\n      case \"light\":\n        return Color.LIGHT;\n      case \"dark\":\n        return Color.DARK;\n      default:\n        return identifier;\n    }\n  }\n\n  private parseIdentifier(): string {\n    const identifier = this.consume(CSSToken.IDENTIFIER);\n    return identifier.value;\n  }\n}\n\nexport default CSSParser;\n","import { SerializableFile } from \"../utils\";\n\nclass FileSerializer {\n  saveToString(file: SerializableFile): string {\n    const header = `title: ${file.title}`;\n    const model = file.xml;\n    const style = file.css;\n    return this.joinSections(header, model, style);\n  }\n\n  loadFromString(content: string): SerializableFile {\n    const [headerString, model, style] = this.splitSections(content, 3);\n    const header = this.parseHeader(headerString);\n    return {\n      title: header.title ?? \"Untitled\",\n      xml: model,\n      css: style,\n    };\n  }\n\n  private joinSections(...sections: string[]): string {\n    return sections.map((str) => str.trim()).join(\"\\n---\\n\") + \"\\n\";\n  }\n\n  private splitSections(content: string, expectedNumber: number): string[] {\n    const sections = content.split(\"\\n---\\n\");\n    if (sections.length !== expectedNumber) {\n      throw new Error(`Expected ${expectedNumber} sections`);\n    }\n\n    return sections;\n  }\n\n  private parseHeader(headerString: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    for (const line of headerString.split(/\\r\\n|[\\r\\n]/)) {\n      const [key, value] = line.split(/:\\s*/, 2);\n      result[key] = value;\n    }\n\n    return result;\n  }\n}\n\nexport default FileSerializer;\n","import { Anchor } from \"../model\";\n\nconst EAST = 2;\nconst SOUTH = 6;\nconst WEST = 10;\nconst NORTH = 14;\n\nconst NUM_SIDE = 5;\nconst NUM_OUTER = 16;\n\nfunction isSide(side: number, anchor: Anchor): boolean {\n  return (anchor + side) % NUM_OUTER < NUM_SIDE;\n}\n\nexport function qsin(anchor: Anchor): number {\n  if (anchor === Anchor.CENTER) {\n    return 1 / 2;\n  }\n\n  if (isSide(SOUTH, anchor)) {\n    return 0;\n  }\n\n  if (isSide(NORTH, anchor)) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.NNW:\n    case Anchor.SSW:\n      return 1 / 4;\n    case Anchor.N:\n    case Anchor.S:\n      return 1 / 2;\n    case Anchor.NNE:\n    case Anchor.SSE:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n\nexport function qcos(anchor: Anchor): number {\n  if (anchor === Anchor.CENTER) {\n    return 1 / 2;\n  }\n\n  if (isSide(EAST, anchor)) {\n    return 0;\n  }\n\n  if (isSide(WEST, anchor)) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.ENE:\n    case Anchor.WNW:\n      return 1 / 4;\n    case Anchor.E:\n    case Anchor.W:\n      return 1 / 2;\n    case Anchor.ESE:\n    case Anchor.WSW:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n","import Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nabstract class AbstractElement implements Element {\n  private readonly children = new Set<Element>();\n  private hovered = false;\n  private selected = false;\n\n  abstract render(renderer: Renderer): void;\n\n  abstract getTagName(): string;\n\n  abstract clone(): Element;\n\n  getChildren(): readonly Element[] {\n    return [...this.children];\n  }\n\n  addChild(child: Element): this {\n    this.children.add(child);\n    return this;\n  }\n\n  deleteChild(child: Element): boolean {\n    return this.children.delete(child);\n  }\n\n  *[Symbol.iterator](): Iterator<Element> {\n    for (const child of [...this.children].reverse()) {\n      yield* child;\n    }\n    yield this;\n  }\n\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.hovered = hovered;\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n\n  setSelected(selected: boolean): void {\n    this.selected = selected;\n  }\n}\n\nexport default AbstractElement;\n","enum Shape {\n  RECTANGLE,\n  ELLIPSE,\n  NOTE,\n  FOLDER,\n  BOX,\n  FILE,\n  COMPONENT,\n}\n\nexport default Shape;\n","enum LinePattern {\n  SOLID,\n  DOTS,\n  SMALL_DASHES,\n  LARGE_DASHES,\n  TIGHT_DASHES,\n}\n\nexport default LinePattern;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Rectangle from \"./Rectangle\";\nimport Renderer from \"./Renderer\";\nimport Shape from \"./Shape\";\n\nclass Classifier extends AbstractElement {\n  readonly anchor: Anchor;\n  x: number;\n  y: number;\n  private width: number;\n  private height: number;\n  shape: Shape = Shape.RECTANGLE;\n\n  constructor(anchor: Anchor, x: number, y: number, width: number, height: number) {\n    super();\n    this.anchor = anchor;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getTagName(): string {\n    return \"Classifier\";\n  }\n\n  getRectangle(): Rectangle {\n    return {\n      x: this.getLeft(),\n      y: this.getTop(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getAnchorX(anchor: Anchor): number {\n    return this.getLeft() + qsin(anchor) * this.width;\n  }\n\n  getAnchorY(anchor: Anchor): number {\n    return this.getTop() + qcos(anchor) * this.height;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setHeight(height: number): void {\n    this.height = height;\n  }\n\n  getLeft(): number {\n    return this.x - this.width * qsin(this.anchor);\n  }\n\n  setLeft(left: number): void {\n    this.x = left + this.width * qsin(this.anchor);\n  }\n\n  getCenterX(): number {\n    return this.getLeft() + this.width / 2;\n  }\n\n  getRight(): number {\n    return this.getLeft() + this.width;\n  }\n\n  getTop(): number {\n    return this.y - this.height * qcos(this.anchor);\n  }\n\n  setTop(top: number): void {\n    this.y = top + this.height * qcos(this.anchor);\n  }\n\n  getCenterY(): number {\n    return this.getTop() + this.height / 2;\n  }\n\n  getBottom(): number {\n    return this.getTop() + this.height;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderClassifier(this);\n  }\n\n  clone(): Classifier {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.anchor, this.x + 20, this.y + 20, this.width, this.height);\n  }\n}\n\nexport default Classifier;\n","import { Predicate } from \"../utils\";\nimport AbstractElement from \"./AbstractElement\";\nimport Classifier from \"./Classifier\";\nimport Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nclass Diagram extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderDiagram(this);\n  }\n\n  getTagName(): string {\n    return \"Diagram\";\n  }\n\n  clone(): Diagram {\n    return new Diagram();\n  }\n\n  find(predicate: Predicate<Element>): Element | undefined {\n    return this.findElement(this, predicate);\n  }\n\n  private findElement(element: Element, predicate: Predicate<Element>): Element | undefined {\n    const result = predicate(element);\n    if (result) {\n      return element;\n    }\n\n    for (const child of element.getChildren()) {\n      const result = this.findElement(child, predicate);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    return undefined;\n  }\n\n  getWidth(): number {\n    return this.getRight() - this.getLeft();\n  }\n\n  getHeight(): number {\n    return this.getBottom() - this.getTop();\n  }\n\n  getTop(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const top = classifier.getTop();\n      return acc > top ? top : acc;\n    }, Infinity);\n  }\n\n  getBottom(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const bottom = classifier.getBottom();\n      return acc < bottom ? bottom : acc;\n    }, -Infinity);\n  }\n\n  getLeft(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const left = classifier.getLeft();\n      return acc > left ? left : acc;\n    }, Infinity);\n  }\n\n  getRight(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const right = classifier.getRight();\n      return acc < right ? right : acc;\n    }, -Infinity);\n  }\n\n  private reduceClassifiers(\n    reducer: (acc: number, classifier: Classifier) => number,\n    seed: number,\n  ): number {\n    let acc = seed;\n    for (const classifier of this.getChildren()) {\n      if (classifier instanceof Classifier) {\n        acc = reducer(acc, classifier);\n      }\n    }\n\n    if (acc === seed) {\n      return 0;\n    }\n\n    return acc;\n  }\n}\n\nexport default Diagram;\n","enum Tip {\n  NONE,\n  ARROW,\n  TRIANGLE,\n  FILLED_TRIANGLE,\n  DIAMOND,\n  FILLED_DIAMOND,\n  CIRCLE,\n  FILLED_CIRCLE,\n}\n\nexport default Tip;\n","import AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Classifier from \"./Classifier\";\nimport LinePattern from \"./LinePattern\";\nimport Renderer from \"./Renderer\";\nimport Tip from \"./Tip\";\n\nclass Relationship extends AbstractElement {\n  from: Classifier;\n  fromAnchor: Anchor;\n  fromTip: Tip = Tip.NONE;\n  to: Classifier;\n  toAnchor: Anchor;\n  toTip: Tip = Tip.NONE;\n  linePattern: LinePattern = LinePattern.SOLID;\n\n  constructor(from: Classifier, fromAnchor: Anchor, to: Classifier, toAnchor: Anchor) {\n    super();\n    this.from = from;\n    this.fromAnchor = fromAnchor;\n    this.to = to;\n    this.toAnchor = toAnchor;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderRelationship(this);\n  }\n\n  getTagName(): string {\n    return \"Relationship\";\n  }\n\n  clone(): Relationship {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.from, this.fromAnchor, this.to, this.toAnchor);\n  }\n}\n\nexport default Relationship;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Separator extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderSeparator(this);\n  }\n\n  getTagName(): string {\n    return \"Separator\";\n  }\n\n  clone(): Separator {\n    return new Separator();\n  }\n}\n\nexport default Separator;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Stereotype extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderStereotype(this);\n  }\n\n  getTagName(): string {\n    return \"Stereotype\";\n  }\n\n  clone(): Stereotype {\n    return new Stereotype();\n  }\n}\n\nexport default Stereotype;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Text extends AbstractElement {\n  readonly text: string;\n\n  constructor(text: string) {\n    super();\n    this.text = text;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderText(this);\n  }\n\n  getTagName(): string {\n    return \"Text\";\n  }\n\n  clone(): Text {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.text);\n  }\n}\n\nexport default Text;\n","import Text from \"./Text\";\nimport Renderer from \"./Renderer\";\n\nclass Title extends Text {\n  render(renderer: Renderer): void {\n    renderer.renderTitle(this);\n  }\n\n  getTagName(): string {\n    return \"Title\";\n  }\n}\n\nexport default Title;\n","import * as Model from \"../model\";\n\ninterface Class<T> {\n  new (...args: any[]): T;\n}\n\nclass Serializer {\n  private readonly parser: DOMParser;\n  private readonly serializer: XMLSerializer;\n  private readonly elementMap = new Map<Element, Model.Element>();\n\n  constructor() {\n    this.parser = new DOMParser();\n    this.serializer = new XMLSerializer();\n  }\n\n  deserialize(xml: string): Model.Diagram {\n    this.elementMap.clear();\n    const document = this.parser.parseFromString(xml, \"text/xml\");\n    const diagram = this.parseElement(document.documentElement);\n    if (!(diagram instanceof Model.Diagram)) {\n      return new Model.Diagram();\n    }\n\n    return diagram;\n  }\n\n  serialize(diagram: Model.Diagram): string {\n    if (this.hasElement(diagram)) {\n      const root = this.getElement(diagram)!;\n      return this.serializer.serializeToString(root);\n    }\n\n    return \"\";\n  }\n\n  updateElement(element: Model.Element): void {\n    if (this.hasElement(element)) {\n      const xmlElement = this.getElement(element)!;\n      this.setElement(xmlElement, element);\n    }\n  }\n\n  private parseElement(element: Element): Model.Element {\n    if (this.elementMap.has(element)) {\n      return this.elementMap.get(element)!;\n    }\n\n    const parsed = this.parseElementSwitch(element);\n    this.elementMap.set(element, parsed);\n    return parsed;\n  }\n\n  private setElement(xmlElement: Element, element: Model.Element) {\n    if (element instanceof Model.Diagram) {\n      this.setDiagram(xmlElement, element);\n    } else if (element instanceof Model.Classifier) {\n      this.setClassifier(xmlElement, element);\n    } else if (element instanceof Model.Text) {\n      this.setText(xmlElement, element);\n    }\n  }\n\n  protected parseElementSwitch(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Diagram\":\n        return this.parseDiagram(element);\n      case \"Classifier\":\n        return this.parseClassifier(Model.Classifier, element);\n      case \"Relationship\":\n        return this.parseRelationship(Model.Relationship, element);\n      case \"Title\":\n        return this.parseTitle(element);\n      case \"Text\":\n        return this.parseText(element);\n      case \"Separator\":\n        return new Model.Separator();\n      case \"Stereotype\":\n        return new Model.Stereotype();\n    }\n\n    throw new Error(`Unknown tag: ${element.tagName}`);\n  }\n\n  private parseDiagram(element: Element): Model.Diagram {\n    const diagram = new Model.Diagram();\n    this.parseChildren(element, diagram);\n    return diagram;\n  }\n\n  private setDiagram(element: Element, diagram: Model.Diagram): void {\n    this.updateChildren(element, diagram);\n  }\n\n  protected parseClassifier<C extends Model.Classifier>(\n    constructor: Class<C>,\n    element: Element,\n  ): C {\n    const anchor = this.parseAnchorAttribute(element, \"anchor\");\n    const x = this.parseIntAttribute(element, \"x\", 0);\n    const y = this.parseIntAttribute(element, \"y\", 0);\n    const width = this.parseIntAttribute(element, \"width\", 200);\n    const height = this.parseIntAttribute(element, \"height\", 120);\n    const classifier = new constructor(anchor, x, y, width, height);\n    classifier.shape = this.parseEnumAttribute(Model.Shape, element, \"shape\", classifier.shape);\n    this.parseChildren(element, classifier);\n    return classifier;\n  }\n\n  protected setClassifier(element: Element, classifier: Model.Classifier): void {\n    this.setAnchorAttribute(element, \"anchor\", classifier.anchor);\n    this.setIntAttribute(element, \"x\", 0, classifier.getX());\n    this.setIntAttribute(element, \"y\", 0, classifier.getY());\n    this.setIntAttribute(element, \"width\", 200, classifier.getWidth());\n    this.setIntAttribute(element, \"height\", 120, classifier.getHeight());\n    this.updateChildren(element, classifier);\n  }\n\n  protected parseRelationship<R extends Model.Relationship>(\n    constructor: Class<R>,\n    element: Element,\n  ): R {\n    const from = this.parseClassifierAttribute(element, \"from\");\n    const fromAnchor = this.parseAnchorAttribute(element, \"fromAnchor\");\n    const to = this.parseClassifierAttribute(element, \"to\");\n    const toAnchor = this.parseAnchorAttribute(element, \"toAnchor\");\n    const relationship = new constructor(from, fromAnchor, to, toAnchor);\n    relationship.fromTip = this.parseTipAttribute(element, \"fromTip\", relationship.fromTip);\n    relationship.toTip = this.parseTipAttribute(element, \"toTip\", relationship.toTip);\n    relationship.linePattern = this.parseLinePatternAttribute(\n      element,\n      \"linePattern\",\n      relationship.linePattern,\n    );\n    return relationship;\n  }\n\n  private parseTitle(element: Element): Model.Title {\n    const text = element.textContent ?? \"\";\n    return new Model.Title(text);\n  }\n\n  private parseText(element: Element): Model.Text {\n    const text = element.textContent ?? \"\";\n    return new Model.Text(text);\n  }\n\n  private setText(element: Element, text: Model.Text) {\n    element.textContent = text.text;\n  }\n\n  private parseChildren(element: Element, target: Model.Element) {\n    for (const child of element.children) {\n      try {\n        target.addChild(this.parseElement(child));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  private updateChildren(element: Element, target: Model.Element) {\n    const visitedChildren = new Set<Element>();\n    for (const child of target.getChildren()) {\n      const childElement = this.getOrCreateElement(element, child);\n      this.setElement(childElement, child);\n      visitedChildren.add(childElement);\n    }\n\n    for (const child of element.children) {\n      if (!visitedChildren.has(child)) {\n        child.remove();\n        this.elementMap.delete(child);\n      }\n    }\n\n    this.cleanupWhiteSpace(element);\n  }\n\n  private getOrCreateElement(element: Element, child: Model.Element): Element {\n    if (this.hasElement(child)) {\n      return this.getElement(child)!;\n    } else {\n      return this.createElement(element, child);\n    }\n  }\n\n  private parseClassifierAttribute(element: Element, attribute: string): Model.Classifier {\n    if (element.hasAttribute(attribute)) {\n      const id = element.getAttribute(attribute)!;\n      const elementById = element.ownerDocument.getElementById(id);\n      if (elementById !== null) {\n        const classifier = this.parseElement(elementById);\n        if (classifier instanceof Model.Classifier) {\n          return classifier;\n        }\n      }\n    }\n\n    throw new Error(\n      `Invalid classifier: <${element.tagName} ${attribute}=\"${element.getAttribute(\n        attribute,\n      )}\" />`,\n    );\n  }\n\n  private parseAnchorAttribute(element: Element, attribute: string): Model.Anchor {\n    return this.parseEnumAttribute(Model.Anchor, element, attribute, Model.Anchor.CENTER);\n  }\n\n  private setAnchorAttribute(element: Element, attribute: string, anchor: Model.Anchor) {\n    this.setEnumAttribute(Model.Anchor, element, attribute, anchor, Model.Anchor.CENTER);\n  }\n\n  private parseTipAttribute(element: Element, attribute: string, fallback: Model.Tip): Model.Tip {\n    return this.parseEnumAttribute(Model.Tip, element, attribute, fallback);\n  }\n\n  private parseLinePatternAttribute(\n    element: Element,\n    attribute: string,\n    fallback: Model.LinePattern,\n  ): Model.LinePattern {\n    return this.parseEnumAttribute(Model.LinePattern, element, attribute, fallback);\n  }\n\n  private parseEnumAttribute<E>(\n    enumClass: Record<string, unknown>,\n    element: Element,\n    attribute: string,\n    fallback: E,\n  ): E {\n    if (element.hasAttribute(attribute)) {\n      const value = element.getAttribute(attribute)!;\n      const item = Reflect.get(enumClass, value.toUpperCase());\n      if (item !== undefined) {\n        return item;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setEnumAttribute(\n    enumClass: Record<number, string>,\n    element: Element,\n    attribute: string,\n    enumValue: number,\n    fallback: number,\n  ): void {\n    if (enumValue === fallback) {\n      element.removeAttribute(attribute);\n    } else {\n      const value = enumClass[enumValue].toLowerCase();\n      element.setAttribute(attribute, value);\n    }\n  }\n\n  private parseIntAttribute(element: Element, attribute: string, fallback: number): number {\n    if (element.hasAttribute(attribute)) {\n      const value = parseInt(element.getAttribute(attribute)!, 10);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setIntAttribute(\n    element: Element,\n    attribute: string,\n    fallback: number,\n    value: number,\n  ): void {\n    if (value !== fallback) {\n      element.setAttribute(attribute, String(value));\n    } else {\n      element.removeAttribute(attribute);\n    }\n  }\n\n  private hasElement(element: Model.Element): boolean {\n    for (const value of this.elementMap.values()) {\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getElement(element: Model.Element): Element | undefined {\n    for (const [xmlElement, el] of this.elementMap) {\n      if (el === element) {\n        return xmlElement;\n      }\n    }\n    return undefined;\n  }\n\n  private createElement(parent: Element, element: Model.Element): Element {\n    const newElement = parent.ownerDocument.createElement(element.getTagName());\n    const id = this.generateId(parent.ownerDocument, element);\n    newElement.setAttribute(\"id\", id);\n    this.elementMap.set(newElement, element);\n\n    parent.appendChild(newElement);\n\n    return newElement;\n  }\n\n  private generateId(document: Document, element: Model.Element): string {\n    let prefix = element.getTagName().toLowerCase();\n    if (prefix === \"interface\") {\n      prefix = \"i\";\n    } else if (prefix === \"class\") {\n      prefix = \"c\";\n    }\n\n    let i = 1;\n    while (document.getElementById(prefix + i) !== null) {\n      i += 1;\n    }\n    return prefix + i;\n  }\n\n  private cleanupWhiteSpace(element: Element): void {\n    const level = this.getLevel(0, element);\n    const originalChildren = [...element.children];\n    while (element.childNodes.length > 0) {\n      element.removeChild(element.childNodes.item(0));\n    }\n\n    let first = true;\n    for (const originalChild of originalChildren) {\n      let extraNewLine = \"\";\n      if (level === 0 && !first) {\n        extraNewLine = \"\\n\";\n      }\n      this.addText(element, extraNewLine + this.getIndent(level + 1));\n      element.appendChild(originalChild);\n      first = false;\n    }\n    this.addText(element, this.getIndent(level));\n  }\n\n  private getIndent(level: number): string {\n    return \"\\n\" + \"  \".repeat(level);\n  }\n\n  private getLevel(offset: number, parent: Element): number {\n    if (parent.parentElement === null) {\n      return offset;\n    } else {\n      return this.getLevel(offset + 1, parent.parentElement);\n    }\n  }\n\n  private addText(parent: Element, data: string): void {\n    parent.appendChild(parent.ownerDocument.createTextNode(data));\n  }\n}\n\nexport default Serializer;\n","import { Relationship, Tip } from \"../model\";\n\nclass Aggregation extends Relationship {\n  toTip: Tip = Tip.DIAMOND;\n\n  getTagName(): string {\n    return \"Aggregation\";\n  }\n}\n\nexport default Aggregation;\n","import { LinePattern, Relationship } from \"../model\";\n\nclass Anchor extends Relationship {\n  linePattern: LinePattern = LinePattern.DOTS;\n\n  getTagName(): string {\n    return \"Anchor\";\n  }\n}\n\nexport default Anchor;\n","import { Relationship } from \"../model\";\n\nclass Association extends Relationship {\n  getTagName(): string {\n    return \"Association\";\n  }\n}\n\nexport default Association;\n","import { Classifier } from \"../model\";\n\nclass Class extends Classifier {\n  getTagName(): string {\n    return \"Class\";\n  }\n}\n\nexport default Class;\n","import { Classifier, Shape } from \"../model\";\n\nclass Component extends Classifier {\n  shape: Shape = Shape.COMPONENT;\n\n  getTagName(): string {\n    return \"Component\";\n  }\n}\n\nexport default Component;\n","import { Relationship, Tip } from \"../model\";\n\nclass Composition extends Relationship {\n  toTip: Tip = Tip.FILLED_DIAMOND;\n\n  getTagName(): string {\n    return \"Composition\";\n  }\n}\n\nexport default Composition;\n","import { Classifier } from \"../model\";\n\nclass DataType extends Classifier {\n  getTagName(): string {\n    return \"DataType\";\n  }\n}\n\nexport default DataType;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Dependency extends Relationship {\n  toTip: Tip = Tip.ARROW;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n\n  getTagName(): string {\n    return \"Dependency\";\n  }\n}\n\nexport default Dependency;\n","import { Relationship, Tip } from \"../model\";\n\nclass DirectedAssociation extends Relationship {\n  toTip: Tip = Tip.ARROW;\n\n  getTagName(): string {\n    return \"DirectedAssociation\";\n  }\n}\n\nexport default DirectedAssociation;\n","import { Classifier } from \"../model\";\n\nclass Enumeration extends Classifier {\n  getTagName(): string {\n    return \"Enumeration\";\n  }\n}\n\nexport default Enumeration;\n","import { Relationship, Tip } from \"../model\";\n\nclass Generalization extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n\n  getTagName(): string {\n    return \"Generalization\";\n  }\n}\n\nexport default Generalization;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Implementation extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n\n  getTagName(): string {\n    return \"Implementation\";\n  }\n}\n\nexport default Implementation;\n","import { Classifier } from \"../model\";\n\nclass Interface extends Classifier {\n  getTagName(): string {\n    return \"Interface\";\n  }\n}\n\nexport default Interface;\n","import { Classifier, Shape } from \"../model\";\n\nclass Note extends Classifier {\n  shape: Shape = Shape.NOTE;\n\n  getTagName(): string {\n    return \"Note\";\n  }\n}\n\nexport default Note;\n","import { Classifier, Shape } from \"../model\";\n\nclass Package extends Classifier {\n  shape: Shape = Shape.FOLDER;\n\n  getTagName(): string {\n    return \"Package\";\n  }\n}\n\nexport default Package;\n","import { Classifier } from \"../model\";\n\nclass Primitive extends Classifier {\n  getTagName(): string {\n    return \"Primitive\";\n  }\n}\n\nexport default Primitive;\n","import FileSerializer from \"./FileSerializer\";\nimport UMLSerializer from \"./UMLSerializer\";\n\nexport const serializer = new UMLSerializer();\nexport const fileSerializer = new FileSerializer();\n","import Serializer from \"./Serializer\";\nimport * as Model from \"../model\";\nimport * as UML from \"../uml\";\n\nclass UMLSerializer extends Serializer {\n  protected parseElementSwitch(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Aggregation\":\n        return this.parseRelationship(UML.Aggregation, element);\n      case \"Anchor\":\n        return this.parseRelationship(UML.Anchor, element);\n      case \"Association\":\n        return this.parseRelationship(UML.Association, element);\n      case \"Class\":\n        return this.parseClassifier(UML.Class, element);\n      case \"Component\":\n        return this.parseClassifier(UML.Component, element);\n      case \"Composition\":\n        return this.parseRelationship(UML.Composition, element);\n      case \"DataType\":\n        return this.parseClassifier(UML.DataType, element);\n      case \"Dependency\":\n        return this.parseRelationship(UML.Dependency, element);\n      case \"DirectedAssociation\":\n        return this.parseRelationship(UML.DirectedAssociation, element);\n      case \"Enumeration\":\n        return this.parseClassifier(UML.Enumeration, element);\n      case \"Generalization\":\n        return this.parseRelationship(UML.Generalization, element);\n      case \"Implementation\":\n        return this.parseRelationship(UML.Implementation, element);\n      case \"Interface\":\n        return this.parseClassifier(UML.Interface, element);\n      case \"Note\":\n        return this.parseClassifier(UML.Note, element);\n      case \"Package\":\n        return this.parseClassifier(UML.Package, element);\n      case \"Primitive\":\n        return this.parseClassifier(UML.Primitive, element);\n      default:\n        return super.parseElementSwitch(element);\n    }\n  }\n}\n\nexport default UMLSerializer;\n","const ASCII_LOWER_A = 97;\nconst ASCII_CAPITAL_A = 65;\nconst ASCII_EQ = 61;\nconst ASCII_ZERO = 48;\nconst ASCII_SLASH = 47;\nconst ASCII_PLUS = 43;\n\nconst BASE64_EQ = 0;\nconst BASE64_LOWER_A = 26;\nconst BASE64_ZERO = 52;\nconst BASE64_PLUS = 62;\nconst BASE64_SLASH = 63;\n\nfunction byteToASCII(byte: number): number {\n  const isUpperCaseLetter = byte < BASE64_LOWER_A;\n  if (isUpperCaseLetter) {\n    return byte + ASCII_CAPITAL_A;\n  }\n  const isLowerCaseLetter = byte < BASE64_ZERO;\n  if (isLowerCaseLetter) {\n    return byte - BASE64_LOWER_A + ASCII_LOWER_A;\n  }\n  const isNumber = byte < BASE64_PLUS;\n  if (isNumber) {\n    return byte - BASE64_ZERO + ASCII_ZERO;\n  }\n  if (byte === BASE64_PLUS) {\n    return ASCII_PLUS;\n  } else {\n    return ASCII_SLASH;\n  }\n}\n\nfunction asciiToByte(ascii: number): number {\n  const isLowerCaseLetter = ascii >= ASCII_LOWER_A;\n  if (isLowerCaseLetter) {\n    return ascii - ASCII_LOWER_A + BASE64_LOWER_A;\n  }\n  const isUpperCaseLetter = ascii >= ASCII_CAPITAL_A;\n  if (isUpperCaseLetter) {\n    return ascii - ASCII_CAPITAL_A;\n  }\n  if (ascii === ASCII_EQ) {\n    return BASE64_EQ;\n  }\n  const isNumber = ascii >= ASCII_ZERO;\n  if (isNumber) {\n    return ascii - ASCII_ZERO + BASE64_ZERO;\n  }\n  if (ascii === ASCII_PLUS) {\n    return BASE64_PLUS;\n  } else {\n    return BASE64_SLASH;\n  }\n}\n\nfunction threeToFourBytes(input1: number, input2: number, input3: number): number[] {\n  const output1 = input1 >>> 2;\n  const output2 = ((input1 & 0b11) << 4) | (input2 >>> 4);\n  const output3 = ((input2 & 0b1111) << 2) | (input3 >>> 6);\n  const output4 = input3 & 0b111111;\n  return [output1, output2, output3, output4];\n}\n\nfunction fourToThreeBytes(\n  input1: number,\n  input2: number,\n  input3: number,\n  input4: number,\n): number[] {\n  const output1 = (input1 << 2) | (input2 >>> 4);\n  const output2 = ((input2 & 0b1111) << 4) | (input3 >>> 2);\n  const output3 = ((input3 & 0b11) << 6) | input4;\n  return [output1, output2, output3];\n}\n\nfunction encodeString(output: number[]): string {\n  return String.fromCharCode(...output.map(byteToASCII));\n}\n\nexport function encode(input: Uint8Array): string {\n  const output = [];\n  let i;\n  for (i = 0; i < input.length - 2; i += 3) {\n    output.push(...threeToFourBytes(input[i], input[i + 1], input[i + 2]));\n  }\n\n  if (i === input.length - 2) {\n    output.push(...threeToFourBytes(input[i], input[i + 1], 0));\n    return encodeString(output).slice(0, -1) + \"=\";\n  }\n  if (i === input.length - 1) {\n    output.push(...threeToFourBytes(input[i], 0, 0));\n    return encodeString(output).slice(0, -2) + \"==\";\n  }\n\n  return encodeString(output);\n}\n\nexport function decode(encoded: string): Uint8Array {\n  if (encoded.length % 4 !== 0) {\n    throw new Error(\"Base64 has incorrect length.\");\n  }\n\n  const endsWith2Eq = encoded.slice(-2) === \"==\";\n  const endsWith1Eq = !endsWith2Eq && encoded.slice(-1) === \"=\";\n  const input = new Array(encoded.length)\n    .fill(0)\n    .map((_, i) => encoded.charCodeAt(i))\n    .map(asciiToByte);\n  const output = [];\n  for (let i = 0; i < input.length - 3; i += 4) {\n    output.push(...fourToThreeBytes(input[i], input[i + 1], input[i + 2], input[i + 3]));\n  }\n  if (endsWith2Eq) {\n    return new Uint8Array(output.slice(0, -2));\n  } else if (endsWith1Eq) {\n    return new Uint8Array(output.slice(0, -1));\n  } else {\n    return new Uint8Array(output);\n  }\n}\n","const enc = new TextEncoder();\nconst dec = new TextDecoder();\n\nexport function encode(str: string): Uint8Array {\n  return enc.encode(str);\n}\n\nexport function decode(utf8: Uint8Array): string {\n  return dec.decode(utf8);\n}\n","import { fileSerializer } from \"../serializer\";\nimport { SerializableFile } from \"../utils\";\nimport * as Base64 from \"./base64\";\nimport * as Pako from \"pako\";\nimport * as UTF8 from \"./utf8\";\n\nexport function encode(file: SerializableFile): string {\n  const string = fileSerializer.saveToString(file);\n  const utf8 = UTF8.encode(string);\n  const deflated = Pako.deflate(utf8);\n  return Base64.encode(deflated);\n}\n\nexport function decode(hash: string): SerializableFile {\n  const deflated = Base64.decode(hash);\n  const utf8 = Pako.inflate(deflated);\n  const string = UTF8.decode(utf8);\n  return fileSerializer.loadFromString(string);\n}\n","import { useEffect } from \"react\";\n\nfunction useDocumentTitle(title: string): void {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import { useRef } from \"react\";\n\nfunction useId(prefix: string): string {\n  const ref = useRef(`${prefix}-${Math.random().toString(36).substring(2)}`);\n\n  return ref.current!;\n}\n\nexport default useId;\n","import { useEffect, useRef } from \"react\";\n\nfunction useShortcut(shortcut: string | undefined, handler: () => void): void {\n  const ref = useRef(handler);\n\n  useEffect(() => {\n    function keypressHandler(event: KeyboardEvent) {\n      if (shortcut !== undefined && matchesShortcut(shortcut, event)) {\n        event.preventDefault();\n        ref.current();\n      }\n    }\n\n    document.addEventListener(\"keydown\", keypressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keypressHandler);\n    };\n  }, [shortcut]);\n\n  useEffect(() => {\n    ref.current = handler;\n  });\n}\n\nfunction matchesShortcut(shortcut: string, event: KeyboardEvent) {\n  let result = true;\n\n  const elements = shortcut.split(\"-\");\n  for (const element of elements) {\n    if (element === \"Ctrl\") {\n      result = result && event.ctrlKey;\n    } else if (element === \"Shift\") {\n      result = result && event.shiftKey;\n    } else if (element === \"Alt\") {\n      result = result && event.altKey;\n    } else {\n      result = result && event.key.toLowerCase() === element.toLowerCase();\n    }\n  }\n\n  return result;\n}\n\nexport default useShortcut;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction ContainerFluid({ children }: Props) {\n  return <div className=\"container-fluid\">{children}</div>;\n}\n\nexport default ContainerFluid;\n","function DropdownDivider() {\n  return (\n    <li>\n      <hr className=\"dropdown-divider\" />\n    </li>\n  );\n}\n\nexport default DropdownDivider;\n","import { useIntl } from \"react-intl\";\n\ninterface Props {\n  shortcut: string;\n}\n\nfunction Shortcut({ shortcut }: Props) {\n  const intl = useIntl();\n  const parts = new Map([\n    [\"Alt\", intl.formatMessage({ id: \"shortcut.alt\", defaultMessage: \"Alt\" })],\n    [\"Ctrl\", intl.formatMessage({ id: \"shortcut.ctrl\", defaultMessage: \"Ctrl\" })],\n    [\"Delete\", intl.formatMessage({ id: \"shortcut.delete\", defaultMessage: \"Delete\" })],\n    [\"Shift\", intl.formatMessage({ id: \"shortcut.shift\", defaultMessage: \"Shift\" })],\n  ]);\n\n  const text = shortcut\n    .split(\"-\")\n    .map((part) => parts.get(part) ?? part)\n    .join(\" \");\n\n  return <span className=\"text-muted float-end\">{text}</span>;\n}\n\nexport default Shortcut;\n","import classNames from \"classnames\";\nimport { MouseEvent, ReactNode } from \"react\";\nimport { useShortcut } from \"../../hooks\";\nimport Shortcut from \"./Shortcut\";\n\ninterface Props {\n  onClick?: () => void;\n  shortcut?: string;\n  active?: boolean;\n  children?: ReactNode;\n}\n\nfunction DropdownItem({ onClick, shortcut, active, children }: Props) {\n  function handleClick(event: MouseEvent) {\n    event.preventDefault();\n    onClick?.();\n  }\n\n  useShortcut(shortcut, () => {\n    onClick?.();\n  });\n\n  return (\n    <li>\n      <button\n        onClick={handleClick}\n        className={classNames(\"btn btn-link dropdown-item\", { active })}\n      >\n        {children}\n        {shortcut && <Shortcut shortcut={shortcut} />}\n      </button>\n    </li>\n  );\n}\n\nexport default DropdownItem;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface Props {\n  placement?: string;\n  labelledBy: string;\n  children?: ReactNode;\n}\n\nfunction DropdownMenu({ placement = \"start\", labelledBy, children }: Props) {\n  return (\n    <ul\n      className={classNames(\"dropdown-menu\", `dropdown-menu-${placement}`)}\n      aria-labelledby={labelledBy}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport default DropdownMenu;\n","import { Dropdown } from \"bootstrap\";\nimport classNames from \"classnames\";\nimport { ReactNode, useRef } from \"react\";\n\ninterface Props {\n  id?: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownToggle({ id, className, children }: Props) {\n  const dropdown = useRef<Dropdown | null>(null);\n\n  function handleRef(element: HTMLButtonElement | null): void {\n    if (element === null) {\n      dropdown.current?.dispose();\n      dropdown.current = null;\n    } else {\n      dropdown.current = new Dropdown(element);\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      ref={handleRef}\n      aria-expanded=\"false\"\n      data-bs-toggle=\"dropdown\"\n      className={classNames(\"btn\", \"btn-link\", \"dropdown-toggle\", className)}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default DropdownToggle;\n","import CodeMirror from \"codemirror\";\nimport { MutableRefObject, useEffect, useRef } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/xml-hint\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchtags\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/theme/nord.css\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"./Editor.css\";\n\ninterface Props {\n  language: \"css\" | \"xml\";\n  value: string;\n  schema?: any;\n  onChange?: (value: string) => void;\n}\n\nfunction completeAfter(cm: CodeMirror.Editor, pred?: () => boolean) {\n  if (pred?.())\n    setTimeout(() => {\n      if (!cm.state.completionActive) cm.showHint({ completeSingle: false });\n    }, 100);\n  return CodeMirror.Pass;\n}\n\nfunction completeIfAfterLt(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const cur = cm.getCursor();\n    return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === \"<\";\n  });\n}\n\nfunction completeIfInTag(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const tok = cm.getTokenAt(cm.getCursor());\n    if (\n      tok.type === \"string\" &&\n      (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)\n    )\n      return false;\n    const inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n    return inner.tagName;\n  });\n}\n\nfunction Editor({ language, value, schema, onChange }: Props) {\n  const onChangeRef = useRef(onChange);\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const editor = useRef<CodeMirror.Editor>(null) as MutableRefObject<CodeMirror.Editor>;\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    const mode = language === \"xml\" ? \"xml\" : \"text/x-scss\";\n    const hintOptions = { schemaInfo: schema } as any;\n    const codeMirror = CodeMirror.fromTextArea(ref.current!, {\n      mode,\n      lineNumbers: true,\n      theme: \"nord\",\n      matchTags: true,\n      autocorrect: true,\n      tabSize: 2,\n      extraKeys: {\n        \"'<'\": completeAfter,\n        \"'/'\": completeIfAfterLt,\n        \"' '\": completeIfInTag,\n        \"'='\": completeIfInTag,\n        \"Ctrl-Space\": \"autocomplete\",\n        \"Ctrl-/\": \"toggleComment\",\n      },\n      hintOptions,\n    });\n    editor.current = codeMirror;\n\n    return () => {\n      codeMirror.toTextArea();\n    };\n  }, [language, schema]);\n\n  useEffect(() => {\n    if (editor.current!.getValue() !== value) {\n      editor.current!.setValue(value);\n    }\n\n    function handleChange() {\n      const newValue = editor.current!.getValue();\n      if (newValue !== value) {\n        onChangeRef.current?.(newValue);\n      }\n    }\n\n    editor.current!.on(\"change\", handleChange);\n    return () => {\n      editor.current!.off(\"change\", handleChange);\n    };\n  }, [value]);\n\n  return <textarea ref={ref} defaultValue={value} />;\n}\n\nexport default Editor;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  href: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction ExternalLink({ href, className, children }: Props) {\n  return (\n    <a href={href} className={className} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  );\n}\n\nexport default ExternalLink;\n","import classNames from \"classnames\";\nimport \"./Flag.css\";\n\ninterface Props {\n  country: string;\n}\n\nfunction Flag({ country }: Props) {\n  return <span className={classNames(\"Flag me-2\", country)} />;\n}\n\nexport default Flag;\n","import iconUrl from \"bootstrap-icons/bootstrap-icons.svg\";\nimport { Color } from \"../../css\";\nimport \"./Icon.css\";\n\ninterface Props {\n  name: string;\n  color?: Color;\n  size?: number;\n}\n\nfunction Icon({ name, color = Color.DARK, size = 20 }: Props) {\n  return (\n    <svg className=\"Icon me-2\" width={size} height={size} fill={color.toHexString()}>\n      <use xlinkHref={`${iconUrl}#${name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/logo.4da087a9.png\";","import { ReactNode } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport ContainerFluid from \"./ContainerFluid\";\nimport logo from \"./logo.png\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction MenuBar({ children }: Props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ gridArea: \"menu\" }}>\n      <ContainerFluid>\n        <span className=\"navbar-brand\">\n          <img alt=\"Logo\" src={logo} height={32} width={32} className=\"d-inline-block align-top\" />{\" \"}\n          <FormattedMessage id=\"title\" defaultMessage=\"UML Editor\" />\n        </span>\n        <ul className=\"navbar-nav me-auto d-flex flex-grow-1\">{children}</ul>\n      </ContainerFluid>\n    </nav>\n  );\n}\n\nexport default MenuBar;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface Props {\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction NavItem({ className, children }: Props) {\n  return <li className={classNames(\"nav-item\", className)}>{children}</li>;\n}\n\nexport default NavItem;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { useId } from \"../../hooks\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport DropdownToggle from \"./DropdownToggle\";\nimport NavItem from \"./NavItem\";\n\ninterface Props {\n  active?: boolean;\n  placement?: string;\n  title: ReactNode;\n  children?: ReactNode;\n}\n\nfunction Menu({ active = false, placement, title, children }: Props) {\n  const id = useId(\"Menu\");\n\n  return (\n    <NavItem className=\"dropdown\">\n      <DropdownToggle id={id} className={classNames(\"nav-link\", { active })}>\n        {title}\n      </DropdownToggle>\n      <DropdownMenu placement={placement} labelledBy={id}>\n        {children}\n      </DropdownMenu>\n    </NavItem>\n  );\n}\n\nexport default Menu;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Element, Relationship } from \"../../model\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onDeleteElement: Dispatch<Element>;\n}\n\nfunction DeleteElement({ file, onDeleteElement }: Props) {\n  function handleClick(): void {\n    for (const element of file.model) {\n      if (element.isSelected()) {\n        onDeleteElement(element);\n      } else if (element instanceof Relationship) {\n        if (element.to.isSelected() || element.from.isSelected()) {\n          onDeleteElement(element);\n        }\n      }\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Delete\">\n      <Icon name=\"file-x\" /> <FormattedMessage id=\"edit.delete\" defaultMessage=\"Delete\" />\n    </DropdownItem>\n  );\n}\n\nexport default DeleteElement;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Element } from \"../../model\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onAddElement: Dispatch<Element>;\n}\n\nfunction DuplicateElement({ file, onAddElement }: Props) {\n  function handleClick(): void {\n    const elementsToDuplicate = new Set<Element>();\n    for (const element of file.model) {\n      if (element.isSelected()) {\n        elementsToDuplicate.add(element);\n        element.setSelected(false);\n      }\n    }\n\n    for (const element of elementsToDuplicate) {\n      const clone = element.clone();\n      clone.setSelected(true);\n      for (const child of element.getChildren()) {\n        const childClone = child.clone();\n        clone.addChild(childClone);\n      }\n      onAddElement(clone);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-D\">\n      <Icon name=\"files\" /> <FormattedMessage id=\"edit.duplicate\" defaultMessage=\"Duplicate\" />\n    </DropdownItem>\n  );\n}\n\nexport default DuplicateElement;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../../constants\";\nimport { SerializableFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileNew({ onFileChange }: Props) {\n  const intl = useIntl();\n\n  function handleClick() {\n    const untitled = intl.formatMessage({ id: \"untitled\", defaultMessage: \"Untitled\" });\n    const message = intl.formatMessage({\n      id: \"file.new.message\",\n      defaultMessage: \"Choose a title for the new document\",\n    });\n    const title = window.prompt(message, untitled);\n    if (title !== null) {\n      onFileChange({\n        title,\n        css: INITIAL_CSS,\n        xml: INITIAL_XML,\n      });\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"file-earmark-plus\" /> <FormattedMessage id=\"file.new\" defaultMessage=\"New ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileNew;\n","import { MouseEvent } from \"react\";\nimport { Style } from \"./css\";\nimport { Diagram } from \"./model\";\n\nexport interface Coordinates {\n  readonly x: number;\n  readonly y: number;\n}\n\nexport interface Consumer<T> {\n  (item: T): void;\n}\n\nexport interface Predicate<T> {\n  (item: T): boolean;\n}\n\nexport interface SerializableFile {\n  title: string;\n  xml: string;\n  css: string;\n}\n\nexport interface File extends SerializableFile {\n  model: Diagram;\n  style: Style;\n}\n\nexport interface ViewOptions {\n  grid: boolean;\n}\n\nexport function getMouseCoordinates(event: MouseEvent<HTMLCanvasElement>): Coordinates {\n  const { clientX, clientY } = event;\n  const boundingClientRect = event.currentTarget.getBoundingClientRect();\n\n  const x = clientX - boundingClientRect.x - boundingClientRect.width / 2;\n  const y = clientY - boundingClientRect.y - boundingClientRect.height / 2;\n\n  return { x, y };\n}\n\nexport function subtractCoords(vec1: Coordinates, vec2: Coordinates): Coordinates {\n  const x = vec1.x - vec2.x;\n  const y = vec1.y - vec2.y;\n  return { x, y };\n}\n\nexport function roundCoordsBy(coord: Coordinates, by: number): Coordinates {\n  return {\n    x: Math.round(coord.x / by) * by,\n    y: Math.round(coord.y / by) * by,\n  };\n}\n\nexport function sanitizeFilename(element: string): string {\n  return element.replace(/[^a-zA-Z_-]+/g, \"-\");\n}\n\nexport function downloadFile(filename: string, dataURL: string): void {\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename;\n  downloadLink.href = dataURL;\n  downloadLink.click();\n}\n\nexport function uploadFile(pattern: string): Promise<string> {\n  return new Promise<string>((resolve) => {\n    const uploadInput = document.createElement(\"input\");\n\n    uploadInput.addEventListener(\n      \"change\",\n      () => {\n        if (uploadInput.files!.length > 0) {\n          resolve(uploadInput.files!.item(0)!.text());\n        }\n      },\n      { once: true },\n    );\n\n    uploadInput.type = \"file\";\n    uploadInput.accept = pattern;\n    uploadInput.multiple = false;\n    uploadInput.click();\n  });\n}\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { fileSerializer } from \"../../serializer\";\nimport { SerializableFile, uploadFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileOpen({ onFileChange }: Props) {\n  function handleClick() {\n    uploadFile(\".uml\").then((content) => {\n      const file = fileSerializer.loadFromString(content);\n      onFileChange(file);\n    });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-O\">\n      <Icon name=\"folder\" /> <FormattedMessage id=\"file.open\" defaultMessage=\"Open ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileOpen;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onTitleChange: Dispatch<string>;\n}\n\nfunction FileRename({ file, onTitleChange }: Props) {\n  const intl = useIntl();\n\n  function handleClick(): void {\n    const message = intl.formatMessage({\n      id: \"file.rename.message\",\n      defaultMessage: \"New document title\",\n    });\n    const newTitle = window.prompt(message, file.title);\n    if (newTitle !== null) {\n      onTitleChange(newTitle);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"pencil\" />{\" \"}\n      <FormattedMessage\n        id=\"file.rename\"\n        defaultMessage='Rename \"{title}\" ...'\n        values={{ title: file.title }}\n      />\n    </DropdownItem>\n  );\n}\n\nexport default FileRename;\n","import { FormattedMessage } from \"react-intl\";\nimport { fileSerializer } from \"../../serializer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction FileSave({ file }: Props) {\n  function handleClick() {\n    const content = btoa(fileSerializer.saveToString(file));\n    const url = new URL(`data:text/x-uml;base64,${content}`);\n\n    downloadFile(`${sanitizeFilename(file.title)}.uml`, url.toString());\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-S\">\n      <Icon name=\"cloud-download\" /> <FormattedMessage id=\"file.save\" defaultMessage=\"Save ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileSave;\n","import { Dispatch } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { DropdownItem, Flag } from \"../blocks\";\n\ninterface Props {\n  locale: string;\n  name: string;\n  country?: string;\n  onLocaleChange: Dispatch<string>;\n}\n\nfunction LocaleItem({ locale, name, country = locale, onLocaleChange }: Props) {\n  const intl = useIntl();\n\n  return (\n    <DropdownItem active={intl.locale === locale} onClick={() => onLocaleChange(locale)}>\n      <Flag country={country} /> {name}\n    </DropdownItem>\n  );\n}\n\nexport default LocaleItem;\n","import { Rectangle, Shape } from \"../model\";\nimport Canvas from \"./Canvas\";\n\nclass ShapeRenderer {\n  private readonly canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  renderShape(shape: Shape, rectangle: Rectangle): void {\n    switch (shape) {\n      case Shape.RECTANGLE:\n        this.drawRectangleShape(rectangle);\n        return;\n      case Shape.ELLIPSE:\n        this.drawEllipseShape(rectangle);\n        return;\n      case Shape.FOLDER:\n        this.drawFolderShape(rectangle);\n        return;\n      case Shape.NOTE:\n        this.drawNoteShape(rectangle);\n        return;\n      case Shape.BOX:\n        this.drawBoxShape(rectangle);\n        return;\n      case Shape.FILE:\n        this.drawFileShape(rectangle);\n        return;\n      case Shape.COMPONENT:\n        this.drawComponentShape(rectangle);\n        return;\n    }\n  }\n\n  private drawRectangleShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    this.canvas.rect(x, y, width, height);\n  }\n\n  private drawEllipseShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    this.canvas.ellipse(x, y, width, height);\n  }\n\n  private drawFolderShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    const FOLDER_WIDTH = 80;\n    const FOLDER_HEIGHT = 20;\n    this.canvas.rect(x, y - FOLDER_HEIGHT, FOLDER_WIDTH, FOLDER_HEIGHT);\n    this.canvas.rect(x, y, width, height);\n  }\n\n  private drawNoteShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    const NOTE_SIZE = 30;\n    this.canvas.moveTo(x, y);\n    this.canvas.lineTo(x, y + height);\n    this.canvas.lineTo(x + width - NOTE_SIZE, y + height);\n    this.canvas.lineTo(x + width, y + height - NOTE_SIZE);\n    this.canvas.lineTo(x + width, y);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(x + width - NOTE_SIZE, y + height);\n    this.canvas.lineTo(x + width, y + height - NOTE_SIZE);\n    this.canvas.lineTo(x + width - NOTE_SIZE, y + height - NOTE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawBoxShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    const BOX_DEPTH = 20;\n    this.canvas.rect(x, y, width, height);\n\n    this.canvas.moveTo(x, y);\n    this.canvas.lineTo(x + width, y);\n    this.canvas.lineTo(x + width + BOX_DEPTH, y - BOX_DEPTH);\n    this.canvas.lineTo(x + BOX_DEPTH, y - BOX_DEPTH);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(x + width, y);\n    this.canvas.lineTo(x + width, y + height);\n    this.canvas.lineTo(x + width + BOX_DEPTH, y + height - BOX_DEPTH);\n    this.canvas.lineTo(x + width + BOX_DEPTH, y - BOX_DEPTH);\n    this.canvas.closePath();\n  }\n\n  private drawFileShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    const FILE_SIZE = 30;\n    this.canvas.moveTo(x + FILE_SIZE, y);\n    this.canvas.lineTo(x, y + FILE_SIZE);\n    this.canvas.lineTo(x, y + height);\n    this.canvas.lineTo(x + width, y + height);\n    this.canvas.lineTo(x + width, y);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(x + FILE_SIZE, y);\n    this.canvas.lineTo(x, y + FILE_SIZE);\n    this.canvas.lineTo(x + FILE_SIZE, y + FILE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawComponentShape(rectangle: Rectangle) {\n    const { x, y, width, height } = rectangle;\n    const COMPONENT_WIDTH = 40;\n    const COMPONENT_HEIGHT = 20;\n    const COMPONENT_Y = (height - COMPONENT_HEIGHT * 3) / 2;\n\n    this.canvas.moveTo(x, y);\n    this.canvas.lineTo(x, y + COMPONENT_Y);\n    this.canvas.lineTo(x + COMPONENT_WIDTH / 2, y + COMPONENT_Y);\n    this.canvas.lineTo(x + COMPONENT_WIDTH / 2, y + COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(x, y + COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(x, y + COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(x + COMPONENT_WIDTH / 2, y + COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(x + COMPONENT_WIDTH / 2, y + COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(x, y + COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(x, y + height);\n    this.canvas.lineTo(x + width, y + height);\n    this.canvas.lineTo(x + width, y);\n    this.canvas.closePath();\n\n    this.canvas.rect(x + COMPONENT_WIDTH / -2, y + COMPONENT_Y, COMPONENT_WIDTH, COMPONENT_HEIGHT);\n    this.canvas.rect(\n      x + COMPONENT_WIDTH / -2,\n      y + COMPONENT_Y + 2 * COMPONENT_HEIGHT,\n      COMPONENT_WIDTH,\n      COMPONENT_HEIGHT,\n    );\n  }\n}\n\nexport default ShapeRenderer;\n","import { PADDING } from \"../constants\";\nimport { Color } from \"../css\";\nimport { Classifier, ClassifierRenderer, Renderer } from \"../model\";\nimport Canvas from \"./Canvas\";\nimport RenderContext from \"./RenderContext\";\nimport ShapeRenderer from \"./ShapeRenderer\";\n\nclass CanvasClassifierRenderer implements ClassifierRenderer {\n  private readonly renderer: Renderer;\n  private readonly context: RenderContext;\n  private readonly canvas: Canvas;\n  private readonly shapeRenderer: ShapeRenderer;\n\n  constructor(renderer: Renderer, context: RenderContext, canvas: Canvas) {\n    this.renderer = renderer;\n    this.context = context;\n    this.canvas = canvas;\n    this.shapeRenderer = new ShapeRenderer(canvas);\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.context.push(\n      classifier.getTagName(),\n      classifier.getWidth() - 2 * PADDING,\n      classifier.getHeight() - 2 * PADDING,\n    );\n\n    this.canvas.save();\n    this.applyStyle(classifier);\n    this.drawShape(classifier);\n    this.canvas.fill();\n    this.canvas.stroke();\n    this.canvas.clip();\n\n    this.canvas.translate(classifier.getLeft() + PADDING, classifier.getTop() + PADDING);\n    for (const child of classifier.getChildren()) {\n      child.render(this.renderer);\n    }\n\n    this.canvas.restore();\n\n    this.context.pop();\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    this.canvas.save();\n    this.drawShape(classifier);\n    const transform = this.canvas.getTransform();\n    const domPoint = transform.transformPoint({ x, y });\n    const result = this.canvas.isPointInPath(domPoint.x, domPoint.y);\n    this.canvas.restore();\n\n    return result;\n  }\n\n  private applyStyle(classifier: Classifier): void {\n    const properties = this.context.getStyleProperties();\n    this.canvas.lineWidth = properties.getFloat(\"line-width\", 1.5);\n    this.canvas.strokeColor = properties.getColor(\"stroke\", Color.DARK);\n    let fill = properties.getColor(\"fill\", Color.WHITE);\n    if (classifier.isHovered()) {\n      fill = fill.mix(Color.INFO, 0.25);\n    }\n    this.canvas.fillColor = fill;\n  }\n\n  private drawShape(classifier: Classifier): void {\n    this.canvas.beginPath();\n    this.shapeRenderer.renderShape(classifier.shape, classifier.getRectangle());\n  }\n}\n\nexport default CanvasClassifierRenderer;\n","import { Relationship, Renderer } from \"../model\";\n\nfunction bresenhamAlgorithm(\n  canvas: Renderer,\n  relationship: Relationship,\n): [number, number, number, number] {\n  const cl1 = relationship.from;\n  const cl2 = relationship.to;\n  const x1 = cl1.getAnchorX(relationship.fromAnchor);\n  const y1 = cl1.getAnchorY(relationship.fromAnchor);\n  const x2 = cl2.getAnchorX(relationship.toAnchor);\n  const y2 = cl2.getAnchorY(relationship.toAnchor);\n\n  // Calculate distances\n  const dx = Math.abs(x2 - x1);\n  const dy = Math.abs(y2 - y1);\n\n  // Calculate steps\n  const sx = x2 > x1 ? 1 : -1;\n  const sy = y2 > y1 ? 1 : -1;\n\n  let p1Hit = true;\n  let p2Hit = false;\n  let lx1: number | undefined;\n  let lx2: number | undefined;\n  let ly1: number | undefined;\n  let ly2: number | undefined;\n  let ox: number | undefined, oy: number | undefined;\n\n  for (let x = x1, y = y1, e = dx - dy; x !== x2 || y !== y2; ) {\n    if (p1Hit && !canvas.isPointInClassifier(cl1, x, y)) {\n      lx1 = x;\n      ly1 = y;\n      p1Hit = false;\n    }\n    if (!p2Hit && canvas.isPointInClassifier(cl2, x, y)) {\n      lx2 = ox || x;\n      ly2 = oy || y;\n      p2Hit = true;\n    }\n    if (!p1Hit && p2Hit) break;\n\n    // Update x and y\n    ox = x;\n    oy = y;\n    const e2 = 2 * e;\n    if (e2 > -dy) {\n      e -= dy;\n      x += sx;\n    }\n    if (e2 < dx) {\n      e += dx;\n      y += sy;\n    }\n  }\n\n  if (lx1 === undefined || ly1 === undefined || lx2 === undefined || ly2 === undefined) {\n    return [x1, y1, x2, y2];\n  }\n\n  return [lx1, ly1, lx2, ly2];\n}\n\nexport default bresenhamAlgorithm;\n","import { Color } from \"../css\";\nimport { LinePattern, Relationship, RelationshipRenderer, Renderer, Tip } from \"../model\";\nimport bresenhamAlgorithm from \"./bresenhamAlgorithm\";\nimport Canvas from \"./Canvas\";\n\nclass CanvasRelationshipRenderer implements RelationshipRenderer {\n  private readonly renderer: Renderer;\n  private readonly canvas: Canvas;\n\n  constructor(renderer: Renderer, canvas: Canvas) {\n    this.renderer = renderer;\n    this.canvas = canvas;\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    const [x1, y1, x2, y2] = bresenhamAlgorithm(this.renderer, relationship);\n    const angle = Math.atan2(y2 - y1, x2 - x1);\n\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(x1, y1);\n    this.canvas.lineTo(x2, y2);\n    this.applyRelationshipStyle(relationship);\n    this.canvas.stroke();\n    this.drawFromTip(relationship, angle, x1, y1);\n    this.drawToTip(relationship, angle, x2, y2);\n    this.canvas.restore();\n  }\n\n  private applyRelationshipStyle(relationship: Relationship): void {\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeColor = Color.DARK;\n    this.canvas.fillColor = Color.WHITE;\n    switch (relationship.linePattern) {\n      case LinePattern.SOLID:\n        this.canvas.setLineDash([]);\n        break;\n      case LinePattern.DOTS:\n        this.canvas.setLineDash([2, 2]);\n        break;\n      case LinePattern.SMALL_DASHES:\n        this.canvas.setLineDash([5, 5]);\n        break;\n      case LinePattern.LARGE_DASHES:\n        this.canvas.setLineDash([10, 10]);\n        break;\n      case LinePattern.TIGHT_DASHES:\n        this.canvas.setLineDash([15, 5]);\n        break;\n    }\n  }\n\n  private drawFromTip(relationship: Relationship, angle: number, x: number, y: number): void {\n    this.drawTip(relationship.fromTip, x, y, angle + Math.PI);\n  }\n\n  private drawToTip(relationship: Relationship, angle: number, x: number, y: number): void {\n    this.drawTip(relationship.toTip, x, y, angle);\n  }\n\n  private drawTip(tip: Tip, x: number, y: number, angle: number) {\n    if (tip !== Tip.NONE) {\n      this.canvas.setLineDash([]);\n      this.canvas.save();\n      this.canvas.translate(x, y);\n      this.canvas.rotate(angle);\n      this.drawTipPath(tip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawTipPath(tip: Tip): void {\n    switch (tip) {\n      case Tip.ARROW:\n        this.drawArrow();\n        break;\n      case Tip.TRIANGLE:\n        this.drawTriangle();\n        break;\n      case Tip.FILLED_TRIANGLE:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawTriangle();\n        break;\n      case Tip.DIAMOND:\n        this.drawDiamond();\n        break;\n      case Tip.FILLED_DIAMOND:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawDiamond();\n        break;\n      case Tip.CIRCLE:\n        this.drawCircle();\n        break;\n      case Tip.FILLED_CIRCLE:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawCircle();\n        break;\n    }\n  }\n\n  private drawArrow() {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 8);\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, -8);\n    this.canvas.closePath();\n    this.canvas.stroke();\n  }\n\n  private drawTriangle(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 10);\n    this.canvas.lineTo(-20, -10);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawDiamond(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-15, 8);\n    this.canvas.lineTo(-30, 0);\n    this.canvas.lineTo(-15, -8);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawCircle(): void {\n    this.canvas.beginPath();\n    this.canvas.ellipse(-20, -10, 20, 20);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n}\n\nexport default CanvasRelationshipRenderer;\n","import { Anchor } from \"../model\";\n\nclass Handle {\n  readonly x: number;\n  readonly y: number;\n  readonly anchor: Anchor;\n\n  constructor(x: number, y: number, anchor: Anchor) {\n    this.x = x;\n    this.y = y;\n    this.anchor = anchor;\n  }\n}\n\nexport default Handle;\n","import { Color } from \"../css\";\nimport Canvas from \"./Canvas\";\n\nclass HTML5Canvas implements Canvas {\n  private readonly ctx: CanvasRenderingContext2D;\n\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx;\n  }\n\n  get fillColor(): Color {\n    return Color.fromHexString(String(this.ctx.fillStyle));\n  }\n\n  set fillColor(color: Color) {\n    this.ctx.fillStyle = color.toHexString();\n  }\n\n  get strokeColor(): Color {\n    return Color.fromHexString(String(this.ctx.strokeStyle));\n  }\n\n  set strokeColor(color: Color) {\n    this.ctx.strokeStyle = color.toHexString();\n  }\n\n  get lineWidth(): number {\n    return this.ctx.lineWidth;\n  }\n\n  set lineWidth(width: number) {\n    this.ctx.lineWidth = width;\n  }\n\n  get fontStyle(): string {\n    return this.getFontAttribute(0);\n  }\n\n  set fontStyle(fontStyle: string) {\n    this.updateFontAttribute(0, fontStyle);\n  }\n\n  get fontWeight(): string {\n    return this.getFontAttribute(1);\n  }\n\n  set fontWeight(fontWeight: string) {\n    this.updateFontAttribute(1, fontWeight);\n  }\n\n  get fontSize(): string {\n    return this.getFontAttribute(2);\n  }\n\n  set fontSize(fontSize: string) {\n    this.updateFontAttribute(2, fontSize);\n  }\n\n  get fontFamily(): string {\n    return this.getFontAttribute(3);\n  }\n\n  set fontFamily(fontFamily: string) {\n    this.updateFontAttribute(3, fontFamily);\n  }\n\n  setLineDash(dash: number[]): void {\n    this.ctx.setLineDash(dash);\n  }\n\n  save(): void {\n    this.ctx.save();\n  }\n\n  restore(): void {\n    this.ctx.restore();\n  }\n\n  translate(x: number, y: number): void {\n    this.ctx.translate(x, y);\n  }\n\n  rotate(angle: number): void {\n    this.ctx.rotate(angle);\n  }\n\n  beginPath(): void {\n    this.ctx.beginPath();\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    this.ctx.rect(x, y, width, height);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number): void {\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    this.ctx.ellipse(x + radiusX, y + radiusY, radiusX, radiusY, 0, 0, Math.PI * 2);\n  }\n\n  moveTo(x: number, y: number): void {\n    this.ctx.moveTo(x, y);\n  }\n\n  lineTo(x: number, y: number): void {\n    this.ctx.lineTo(x, y);\n  }\n\n  isPointInPath(x: number, y: number): boolean {\n    return this.ctx.isPointInPath(x, y);\n  }\n\n  closePath(): void {\n    this.ctx.closePath();\n  }\n\n  getTransform(): DOMMatrix {\n    return this.ctx.getTransform();\n  }\n\n  fill(): void {\n    this.ctx.fill();\n  }\n\n  stroke(): void {\n    this.ctx.stroke();\n  }\n\n  clip(): void {\n    this.ctx.clip();\n  }\n\n  fillText(text: string, anchor: \"start\" | \"middle\" | \"end\", x: number, y: number): void {\n    const metrics = this.ctx.measureText(text);\n    const anchorY = y + metrics.fontBoundingBoxAscent;\n    let anchorX = x;\n    if (anchor === \"middle\") {\n      anchorX = anchorX + metrics.width / 2;\n    } else if (anchor === \"end\") {\n      anchorX = anchorX + metrics.width;\n    }\n    this.ctx.fillText(text, anchorX, anchorY);\n  }\n\n  private getFontAttribute(index: number): string {\n    return this.ctx.font.split(\" \", 4)[index];\n  }\n\n  private updateFontAttribute(index: number, value: string): void {\n    const attrs = this.ctx.font.split(\" \", 4);\n    attrs[index] = value;\n    this.ctx.font = attrs.join(\" \");\n  }\n}\n\nexport default HTML5Canvas;\n","import { PropertyMap, Style } from \"../css\";\n\nclass RenderContext {\n  private readonly width: number[];\n  private readonly height: number[];\n  private readonly context: string[];\n  private readonly style: Style;\n\n  constructor(canvasWidth: number, canvasHeight: number, style: Style) {\n    this.width = [canvasWidth];\n    this.height = [canvasHeight];\n    this.context = [];\n    this.style = style;\n  }\n\n  push(name: string, width?: number, height?: number): void {\n    this.context.unshift(name);\n    this.width.unshift(width ?? this.getWidth());\n    this.height.unshift(height ?? this.getHeight());\n  }\n\n  pop(): void {\n    this.context.shift();\n    this.width.shift();\n    this.height.shift();\n  }\n\n  getName(): string {\n    return this.context[0];\n  }\n\n  getWidth(): number {\n    return this.width[0];\n  }\n\n  getHeight(): number {\n    return this.height[0];\n  }\n\n  getStyleProperties(): PropertyMap {\n    return this.style.getProperties([...this.context].reverse());\n  }\n}\n\nexport default RenderContext;\n","import { GRID, HANDLE_RADIUS, PADDING } from \"../constants\";\nimport { Color, Style } from \"../css\";\nimport {\n  Anchor,\n  Classifier,\n  Diagram,\n  Relationship,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasOptions from \"./CanvasOptions\";\nimport CanvasRelationshipRenderer from \"./CanvasRelationshipRenderer\";\nimport Handle from \"./Handle\";\nimport HTML5Canvas from \"./HTML5Canvas\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n  private readonly classifierRenderer: CanvasClassifierRenderer;\n  private readonly relationshipRenderer: CanvasRelationshipRenderer;\n  private readonly translateX: number;\n  private readonly translateY: number;\n\n  constructor(canvas: HTMLCanvasElement, style: Style, options: CanvasOptions) {\n    this.context = new RenderContext(canvas.width, canvas.height, style);\n    this.translateX = options.translateX;\n    this.translateY = options.translateY;\n    this.canvas = canvas.getContext(\"2d\")!;\n    const html5Canvas = new HTML5Canvas(this.canvas);\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, html5Canvas);\n    this.relationshipRenderer = new CanvasRelationshipRenderer(this, html5Canvas);\n  }\n\n  clear(): void {\n    this.canvas.clearRect(0, 0, this.context.getWidth(), this.context.getHeight());\n  }\n\n  renderGrid(): void {\n    const minX = -Math.floor(this.translateX / GRID) * GRID;\n    const maxX = Math.floor(this.context.getWidth() - this.translateX / GRID) * GRID;\n    const minY = -Math.floor(this.translateY / GRID) * GRID;\n    const maxY = Math.floor(this.context.getHeight() - this.translateY / GRID) * GRID;\n\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    this.canvas.beginPath();\n    this.canvas.strokeStyle = \"#00000033\";\n    for (let x = minX; x < maxX; x += GRID) {\n      this.canvas.moveTo(x, -this.translateY);\n      this.canvas.lineTo(x, this.context.getHeight() - this.translateY);\n    }\n    for (let y = minY; y < maxY; y += GRID) {\n      this.canvas.moveTo(-this.translateX, y);\n      this.canvas.lineTo(this.context.getWidth() - this.translateX, y);\n    }\n    this.canvas.stroke();\n    this.canvas.restore();\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n    this.renderHandles(diagram);\n    this.canvas.restore();\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.relationshipRenderer.renderRelationship(relationship);\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"14pt\", \"left\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"14pt\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.stroke();\n    this.canvas.restore();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"12pt\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  private drawText(text: string, size: string, align: \"left\" | \"center\") {\n    const properties = this.context.getStyleProperties();\n    const weight = properties.getString(\"font-weight\", \"normal\");\n    const style = properties.getString(\"font-style\", \"normal\");\n    const family = properties.getString(\"font-family\", \"Arial, Helvetica, system-ui, sans-serif\");\n\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.font = `${style} ${weight} ${size} ${family}`;\n    this.canvas.fillStyle = properties.getColor(\"color\", Color.DARK).toHexString();\n    const metrics = this.canvas.measureText(text);\n    const x = align === \"center\" ? (this.context.getWidth() - metrics.width) / 2 : 0;\n    this.canvas.fillText(text, x, metrics.fontBoundingBoxAscent);\n    this.canvas.restore();\n  }\n\n  private renderHandles(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.fillStyle = \"white\";\n    this.canvas.strokeStyle = \"black\";\n    this.canvas.lineWidth = 1;\n\n    for (const { x, y } of this.getHandles(diagram)) {\n      this.renderHandleAtPoint(x, y);\n    }\n\n    this.canvas.restore();\n  }\n\n  private *getHandles(diagram: Diagram): Generator<Handle> {\n    for (const child of diagram.getChildren()) {\n      if (child instanceof Classifier && child.isSelected()) {\n        yield* this.getClassifierHandles(child);\n      }\n    }\n  }\n\n  private renderHandleAtPoint(x: number, y: number): void {\n    this.canvas.beginPath();\n    this.canvas.rect(x - HANDLE_RADIUS, y - HANDLE_RADIUS, HANDLE_RADIUS * 2, HANDLE_RADIUS * 2);\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  findHandleForPoint(diagram: Diagram, x: number, y: number): Handle | undefined {\n    for (const handle of this.getHandles(diagram)) {\n      if (this.isPointInHandle(handle, x, y)) {\n        return handle;\n      }\n    }\n    return undefined;\n  }\n\n  private isPointInHandle(handle: Handle, x: number, y: number): boolean {\n    return Math.abs(x - handle.x) <= HANDLE_RADIUS && Math.abs(y - handle.y) <= HANDLE_RADIUS;\n  }\n\n  private *getClassifierHandles(classifier: Classifier): Generator<Handle> {\n    const x1 = classifier.getLeft();\n    const x2 = classifier.getRight();\n    const y1 = classifier.getTop();\n    const y2 = classifier.getBottom();\n\n    yield new Handle(x1, y1, Anchor.NW);\n    yield new Handle(classifier.getCenterX(), y1, Anchor.N);\n    yield new Handle(x2, y1, Anchor.NE);\n    yield new Handle(x1, classifier.getCenterY(), Anchor.W);\n    yield new Handle(x2, classifier.getCenterY(), Anchor.E);\n    yield new Handle(x1, y2, Anchor.SW);\n    yield new Handle(classifier.getCenterX(), y2, Anchor.S);\n    yield new Handle(x2, y2, Anchor.SE);\n  }\n}\n\nexport default CanvasRenderer;\n","import { Color } from \"../css\";\nimport Canvas from \"./Canvas\";\n\nclass SVGCanvas implements Canvas {\n  fillColor = Color.WHITE;\n  strokeColor = Color.DARK;\n  lineWidth = 1;\n  fontFamily = \"system-ui\";\n  fontSize = \"1rem\";\n  fontStyle = \"normal\";\n  fontWeight = \"normal\";\n  private readonly document: Document;\n  private readonly stack: SVGElement[];\n  private readonly paths: SVGElement[] = [];\n  private readonly saved: SVGElement[] = [];\n  private readonly matrix: DOMMatrix[] = [new DOMMatrix()];\n  private path?: SVGPathElement;\n  private dash: number[] = [];\n\n  constructor(container: SVGElement) {\n    this.document = container.ownerDocument;\n    this.stack = [container];\n  }\n\n  setLineDash(dash: number[]): void {\n    this.dash = dash;\n  }\n\n  save(): void {\n    this.saved.push(this.getContainer());\n    this.matrix.push(new DOMMatrix(this.currentMatrix().toString()));\n  }\n\n  private currentMatrix(): DOMMatrix {\n    return this.matrix[this.matrix.length - 1];\n  }\n\n  restore(): void {\n    const saved = this.saved.pop()!;\n    this.stack.splice(this.stack.indexOf(saved) + 1);\n    this.matrix.pop();\n  }\n\n  translate(x: number, y: number): void {\n    const svg = this.createSVG(\"g\");\n    svg.setAttribute(\"transform\", `translate(${x},${y})`);\n    this.getContainer().append(svg);\n\n    this.stack.push(svg);\n    this.currentMatrix().translate(x, y);\n  }\n\n  rotate(angle: number): void {\n    const svg = this.createSVG(\"g\");\n    svg.setAttribute(\"transform\", `rotate(${this.radiansToDegrees(angle)})`);\n    this.getContainer().append(svg);\n\n    this.stack.push(svg);\n    this.currentMatrix().rotate(angle);\n  }\n\n  beginPath(): void {\n    this.paths.splice(0);\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    const rect = this.createSVG(\"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"height\", String(height));\n    this.paths.push(rect);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number): void {\n    const ellipse = this.createSVG(\"ellipse\");\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    ellipse.setAttribute(\"cx\", String(x + radiusX));\n    ellipse.setAttribute(\"cy\", String(y + radiusY));\n    ellipse.setAttribute(\"rx\", String(radiusX));\n    ellipse.setAttribute(\"ry\", String(radiusY));\n    this.paths.push(ellipse);\n  }\n\n  moveTo(x: number, y: number): void {\n    this.path = this.createSVG(\"path\");\n    this.path.setAttribute(\"d\", `M${x},${y}`);\n    this.paths.push(this.path);\n  }\n\n  lineTo(x: number, y: number): void {\n    const data = this.path!.getAttribute(\"d\");\n    this.path!.setAttribute(\"d\", `${data} L${x},${y}`);\n  }\n\n  closePath(): void {\n    const data = this.path!.getAttribute(\"d\");\n    this.path!.setAttribute(\"d\", `${data} Z`);\n  }\n\n  getTransform(): DOMMatrix {\n    return this.currentMatrix();\n  }\n\n  isPointInPath(x: number, y: number): boolean {\n    return false;\n  }\n\n  fill(): void {\n    this.appendPaths();\n    for (const path of this.paths) {\n      path.setAttribute(\"fill\", this.fillColor.toHexString());\n    }\n  }\n\n  stroke(): void {\n    this.appendPaths();\n    for (const path of this.paths) {\n      path.setAttribute(\"stroke\", this.strokeColor.toHexString());\n      path.setAttribute(\"stroke-width\", String(this.lineWidth));\n      path.setAttribute(\"stroke-dasharray\", this.dash.join(\" \"));\n    }\n  }\n\n  clip(): void {}\n\n  fillText(text: string, anchor: \"start\" | \"middle\" | \"end\", x: number, y: number): void {\n    const textEl = this.createSVG(\"text\");\n    textEl.setAttribute(\"x\", String(x));\n    textEl.setAttribute(\"y\", String(y + 10));\n    textEl.setAttribute(\"text-anchor\", anchor);\n    textEl.setAttribute(\"font-family\", this.fontFamily);\n    textEl.setAttribute(\"font-size\", this.fontSize);\n    textEl.setAttribute(\"font-style\", this.fontStyle);\n    textEl.setAttribute(\"font-weight\", this.fontWeight);\n    textEl.appendChild(this.document.createTextNode(this.encodeUTF8(text)));\n    this.paths.push(textEl);\n    this.fill();\n  }\n\n  private encodeUTF8(text: string): string {\n    const textEncoder = new TextEncoder();\n    const encoded = textEncoder.encode(text);\n    return String.fromCharCode(...encoded);\n  }\n\n  private appendPaths(): void {\n    this.getContainer().append(...this.paths);\n  }\n\n  private getContainer(): SVGElement {\n    return this.stack[this.stack.length - 1];\n  }\n\n  private createSVG<K extends keyof SVGElementTagNameMap>(element: K): SVGElementTagNameMap[K] {\n    return this.document.createElementNS(\"http://www.w3.org/2000/svg\", element);\n  }\n\n  private radiansToDegrees(angle: number): number {\n    return (180 * angle) / Math.PI;\n  }\n}\n\nexport default SVGCanvas;\n","import { PADDING } from \"../constants\";\nimport { Color, Style } from \"../css\";\nimport {\n  Classifier,\n  ClassifierRenderer,\n  Diagram,\n  Relationship,\n  RelationshipRenderer,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasRelationshipRenderer from \"./CanvasRelationshipRenderer\";\nimport RenderContext from \"./RenderContext\";\nimport SVGCanvas from \"./SVGCanvas\";\n\nclass SVGRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: SVGCanvas;\n  private readonly classifierRenderer: ClassifierRenderer;\n  private readonly relationshipRenderer: RelationshipRenderer;\n\n  constructor(svg: SVGSVGElement, style: Style) {\n    this.context = new RenderContext(svg.width.baseVal.value, svg.height.baseVal.value, style);\n    this.canvas = new SVGCanvas(svg);\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, this.canvas);\n    this.relationshipRenderer = new CanvasRelationshipRenderer(this, this.canvas);\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.relationshipRenderer.renderRelationship(relationship);\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"14pt\", \"start\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"14pt\", \"middle\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"12pt\", \"middle\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeColor = Color.DARK;\n    this.canvas.stroke();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  private drawText(text: string, size: string, align: \"start\" | \"middle\") {\n    const properties = this.context.getStyleProperties();\n    this.canvas.fontWeight = properties.getString(\"font-weight\", \"normal\");\n    this.canvas.fontStyle = properties.getString(\"font-style\", \"normal\");\n    this.canvas.fontSize = properties.getString(\"font-size\", size);\n    this.canvas.fontFamily = properties.getString(\n      \"font-family\",\n      \"Arial, Helvetica, system-ui, sans-serif\",\n    );\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.fillColor = properties.getColor(\"color\", Color.DARK);\n    const x = align === \"middle\" ? this.context.getWidth() / 2 : 0;\n    this.canvas.fillText(text, align, x, 4);\n    this.canvas.restore();\n  }\n}\n\nexport default SVGRenderer;\n","import { FormattedMessage } from \"react-intl\";\nimport { MARGIN } from \"../../constants\";\nimport { CanvasRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction PNGExport({ file }: Props) {\n  function handleClick() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = file.model.getWidth() + 2 * MARGIN;\n    canvas.height = file.model.getHeight() + 2 * MARGIN;\n\n    const renderer = new CanvasRenderer(canvas, file.style, {\n      translateX: MARGIN - file.model.getLeft(),\n      translateY: MARGIN - file.model.getTop(),\n    });\n    renderer.renderDiagram(file.model);\n\n    const dataURL = canvas.toDataURL(\"image/png\");\n    downloadFile(`${sanitizeFilename(file.title)}.png`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-E\">\n      <Icon name=\"image\" /> <FormattedMessage id=\"export.png\" defaultMessage=\"As PNG ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default PNGExport;\n","import { FormattedMessage } from \"react-intl\";\nimport { MARGIN } from \"../../constants\";\nimport { SVGRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction SVGExport({ file }: Props) {\n  function handleClick() {\n    const viewBox = [\n      file.model.getLeft() - MARGIN,\n      file.model.getTop() - MARGIN,\n      file.model.getWidth() + 2 * MARGIN,\n      file.model.getHeight() + 2 * MARGIN,\n    ].join(\" \");\n    const root = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    root.setAttribute(\"width\", String(file.model.getWidth() + 2 * MARGIN));\n    root.setAttribute(\"height\", String(file.model.getHeight() + 2 * MARGIN));\n    root.setAttribute(\"viewBox\", viewBox);\n\n    const renderer = new SVGRenderer(root, file.style);\n    renderer.renderDiagram(file.model);\n\n    const xmlSerializer = new XMLSerializer();\n    const svg = xmlSerializer.serializeToString(root);\n    const dataURL = new URL(`data:image/svg+xml;base64,${btoa(svg)}`).toString();\n    downloadFile(`${sanitizeFilename(file.title)}.svg`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-Shift-E\">\n      <Icon name=\"code-slash\" /> <FormattedMessage id=\"export.svg\" defaultMessage=\"As SVG ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default SVGExport;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ViewOptions } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n}\n\nfunction ToggleGrid({ viewOptions, onViewOptionsChange }: Props) {\n  const { grid } = viewOptions;\n  const icon = grid ? \"grid-3x3-gap-fill\" : \"grid-3x3-gap\";\n\n  function handleClick() {\n    onViewOptionsChange({ ...viewOptions, grid: !grid });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Alt-G\">\n      <Icon name={icon} /> <FormattedMessage id=\"view.grid\" defaultMessage=\"Toggle Grid\" />\n    </DropdownItem>\n  );\n}\n\nexport default ToggleGrid;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Element } from \"../../model\";\nimport { File, SerializableFile, ViewOptions } from \"../../utils\";\nimport { DropdownDivider, ExternalLink, Icon, Menu, MenuBar, NavItem } from \"../blocks\";\nimport DeleteElement from \"./DeleteElement\";\nimport DuplicateElement from \"./DuplicateElement\";\nimport FileNew from \"./FileNew\";\nimport FileOpen from \"./FileOpen\";\nimport FileRename from \"./FileRename\";\nimport FileSave from \"./FileSave\";\nimport LocaleItem from \"./LocaleItem\";\nimport PNGExport from \"./PNGExport\";\nimport SVGExport from \"./SVGExport\";\nimport ToggleGrid from \"./ToggleGrid\";\n\ninterface Props {\n  file: File;\n  viewOptions: ViewOptions;\n  onFileChange: Dispatch<SerializableFile>;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n  onLocaleChange: Dispatch<string>;\n  onAddElement: Dispatch<Element>;\n  onDeleteElement: Dispatch<Element>;\n}\n\nfunction AppMenu({\n  file,\n  viewOptions,\n  onFileChange,\n  onViewOptionsChange,\n  onLocaleChange,\n  onAddElement,\n  onDeleteElement,\n}: Props) {\n  const intl = useIntl();\n\n  return (\n    <MenuBar>\n      <Menu title={intl.formatMessage({ id: \"file\", defaultMessage: \"File\" })}>\n        <FileNew onFileChange={onFileChange} />\n        <DropdownDivider />\n        <FileOpen onFileChange={onFileChange} />\n        <FileSave file={file} />\n        <DropdownDivider />\n        <FileRename file={file} onTitleChange={(title) => onFileChange({ ...file, title })} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"edit\", defaultMessage: \"Edit\" })}>\n        <DuplicateElement file={file} onAddElement={onAddElement} />\n        <DeleteElement file={file} onDeleteElement={onDeleteElement} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"view\", defaultMessage: \"View\" })}>\n        <ToggleGrid viewOptions={viewOptions} onViewOptionsChange={onViewOptionsChange} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"export\", defaultMessage: \"Export\" })}>\n        <PNGExport file={file} />\n        <SVGExport file={file} />\n      </Menu>\n\n      <div className=\"flex-grow-1\" />\n\n      <NavItem>\n        <ExternalLink className=\"nav-link\" href=\"https://github.com/ksm2/uml-editor\">\n          <Icon name=\"github\" />\n          <FormattedMessage id=\"github\" defaultMessage=\"GitHub\" />\n        </ExternalLink>\n      </NavItem>\n      <Menu\n        placement=\"end\"\n        title={\n          <>\n            <Icon name=\"globe\" />\n            <FormattedMessage id=\"lang\" defaultMessage=\"Language\" />\n          </>\n        }\n      >\n        <LocaleItem locale=\"de\" name=\"Deutsch\" onLocaleChange={onLocaleChange} />\n        <LocaleItem locale=\"en\" name=\"English\" onLocaleChange={onLocaleChange} country=\"uk\" />\n      </Menu>\n    </MenuBar>\n  );\n}\n\nexport default AppMenu;\n","import { MouseEvent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { GRID } from \"../../constants\";\nimport { Style } from \"../../css\";\nimport { Anchor, Classifier, Diagram, Element, Rectangle } from \"../../model\";\nimport { CanvasRenderer, Handle } from \"../../renderer\";\nimport {\n  Coordinates,\n  getMouseCoordinates,\n  roundCoordsBy,\n  subtractCoords,\n  ViewOptions,\n} from \"../../utils\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  diagram: Diagram;\n  style: Style;\n  onChange?: (element: Element) => void;\n}\n\nfunction createRenderer(canvas: HTMLCanvasElement, style: Style): CanvasRenderer {\n  return new CanvasRenderer(canvas, style, {\n    translateX: canvas.width / 2,\n    translateY: canvas.height / 2,\n  });\n}\n\nfunction Canvas({ viewOptions, diagram, style, onChange }: Props) {\n  const options = useRef(viewOptions);\n  const div = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const mouseDownCoords = useRef<Coordinates>(null) as MutableRefObject<Coordinates | null>;\n  const mouseDownRectangle = useRef<Rectangle>(null) as MutableRefObject<Rectangle | null>;\n  const mouseDownObject = useRef<Handle | Element>(null) as MutableRefObject<\n    Handle | Element | null\n  >;\n\n  useEffect(() => {\n    options.current = viewOptions;\n  });\n\n  useEffect(() => {\n    function onResize() {\n      if (div.current === null) {\n        return;\n      }\n\n      const rect = div.current.getBoundingClientRect();\n      canvas.current!.width = Math.trunc(rect.width);\n      canvas.current!.height = Math.trunc(rect.height);\n\n      const renderer = createRenderer(canvas.current!, style);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [viewOptions, diagram, style]);\n\n  function setCursor(cursor: string): void {\n    canvas.current!.style.cursor = cursor;\n  }\n\n  function handleHandleUpdate(target: Classifier, handle: Handle, deltaX: number, deltaY: number) {\n    if (handle.anchor === Anchor.W || handle.anchor === Anchor.NW || handle.anchor === Anchor.SW) {\n      target.setWidth(mouseDownRectangle.current!.width - deltaX);\n      target.setLeft(mouseDownRectangle.current!.x + deltaX);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.E || handle.anchor === Anchor.NE || handle.anchor === Anchor.SE) {\n      target.setWidth(mouseDownRectangle.current!.width + deltaX);\n      target.setLeft(mouseDownRectangle.current!.x);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.N || handle.anchor === Anchor.NW || handle.anchor === Anchor.NE) {\n      target.setHeight(mouseDownRectangle.current!.height - deltaY);\n      target.setTop(mouseDownRectangle.current!.y + deltaY);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.S || handle.anchor === Anchor.SW || handle.anchor === Anchor.SE) {\n      target.setHeight(mouseDownRectangle.current!.height + deltaY);\n      target.setTop(mouseDownRectangle.current!.y);\n      onChange?.(target);\n    }\n  }\n\n  function handleLeftMouseButtonMove(x: number, y: number) {\n    const target = diagram.find((el) => el.isSelected());\n    if (target instanceof Classifier) {\n      const { x: deltaX, y: deltaY } = roundCoordsBy(\n        subtractCoords({ x, y }, mouseDownCoords.current!),\n        GRID,\n      );\n      if (mouseDownObject.current === target) {\n        target.setLeft(mouseDownRectangle.current!.x + deltaX);\n        target.setTop(mouseDownRectangle.current!.y + deltaY);\n        onChange?.(target);\n        return;\n      }\n      if (mouseDownObject.current instanceof Handle) {\n        handleHandleUpdate(target, mouseDownObject.current, deltaX, deltaY);\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    if (event.buttons & 1) {\n      handleLeftMouseButtonMove(x, y);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n      return;\n    }\n\n    for (const element of diagram) {\n      element.setHovered(false);\n    }\n\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined) {\n      setCursor(`${Anchor[handle.anchor].toLowerCase()}-resize`);\n    } else {\n      setCursor(\"default\");\n\n      for (const classifier of diagram) {\n        if (classifier instanceof Classifier) {\n          const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n          if (isInClassifier) {\n            classifier.setHovered(true);\n            break;\n          }\n        }\n      }\n    }\n\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function renderMouseDown(renderer: CanvasRenderer, x: number, y: number) {\n    const selectedElement = diagram.find((el) => el.isSelected());\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined && selectedElement instanceof Classifier) {\n      mouseDownRectangle.current = selectedElement.getRectangle();\n      mouseDownCoords.current = { x, y };\n      mouseDownObject.current = handle;\n      return;\n    }\n\n    selectedElement?.setSelected(false);\n    for (const classifier of diagram) {\n      if (classifier instanceof Classifier) {\n        const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n        if (isInClassifier) {\n          classifier.setSelected(true);\n          mouseDownRectangle.current = classifier.getRectangle();\n          mouseDownCoords.current = { x, y };\n          mouseDownObject.current = classifier;\n          return;\n        }\n      }\n    }\n  }\n\n  function handleMouseDown(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    renderMouseDown(renderer, x, y);\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function handleMouseUp() {\n    mouseDownRectangle.current = null;\n    mouseDownCoords.current = null;\n    mouseDownObject.current = null;\n  }\n\n  return (\n    <div\n      ref={div}\n      className=\"Canvas\"\n      style={{\n        backgroundColor: \"hsl(220 9% 92% / 1)\",\n        gridArea: \"canvas\",\n      }}\n    >\n      <canvas\n        ref={canvas}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </div>\n  );\n}\n\nexport default Canvas;\n","import { Editor } from \"../blocks\";\n\ninterface Props {\n  css: string;\n  onChange?: (css: string) => void;\n}\n\nfunction CSSEditor({ css, onChange }: Props) {\n  return (\n    <div className=\"CSSEditor\" style={{ gridArea: \"css\", position: \"relative\" }}>\n      <Editor language=\"css\" value={css} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default CSSEditor;\n","import { MessageFormatElement } from \"intl-messageformat-parser\";\nimport React, { Dispatch, ReactNode, useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport DE_MESSAGES from \"../../i18n/de.json\";\nimport EN_MESSAGES from \"../../i18n/en.json\";\n\ninterface Props {\n  children?: (onLocaleChange: Dispatch<string>) => ReactNode;\n}\n\nfunction getMessagesForLocale(locale: string): Record<string, MessageFormatElement[]> {\n  switch (locale) {\n    case \"de\":\n      return DE_MESSAGES;\n    default:\n      return EN_MESSAGES;\n  }\n}\n\nfunction LocaleSwitch({ children }: Props) {\n  const [locale, setLocale] = useState(navigator.language.substring(0, 2));\n\n  return (\n    <IntlProvider messages={getMessagesForLocale(locale)} locale={locale} defaultLocale=\"en\">\n      {children?.(setLocale)}\n    </IntlProvider>\n  );\n}\n\nexport default LocaleSwitch;\n","import { Anchor, LinePattern, Shape, Tip } from \"../../model\";\n\nconst anchorSchema = Object.keys(Anchor)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst shapeSchema = Object.keys(Shape)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst tipSchema = Object.keys(Tip)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst linePatternSchema = Object.keys(LinePattern)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst classifierSchema = {\n  children: [\"Title\", \"Separator\", \"Method\", \"Stereotype\"],\n  attrs: {\n    x: null,\n    y: null,\n    width: null,\n    height: null,\n    anchor: anchorSchema,\n    shape: shapeSchema,\n  },\n};\n\nconst relationshipSchema = {\n  attrs: {\n    from: null,\n    fromTip: tipSchema,\n    to: null,\n    toTip: tipSchema,\n    linePattern: linePatternSchema,\n  },\n};\n\nconst classifiers = {\n  Class: classifierSchema,\n  Classifier: classifierSchema,\n  Component: classifierSchema,\n  DataType: classifierSchema,\n  Enumeration: classifierSchema,\n  Interface: classifierSchema,\n  Note: classifierSchema,\n  Object: classifierSchema,\n  Package: classifierSchema,\n  Primitive: classifierSchema,\n};\n\nconst relationships = {\n  Aggregation: relationshipSchema,\n  Anchor: relationshipSchema,\n  Association: relationshipSchema,\n  Composition: relationshipSchema,\n  Dependency: relationshipSchema,\n  DirectedAssociation: relationshipSchema,\n  Generalization: relationshipSchema,\n  Implementation: relationshipSchema,\n  Relationship: relationshipSchema,\n};\n\nconst schema = {\n  \"!top\": [\"Diagram\"],\n  \"!attrs\": {\n    id: null,\n    class: null,\n  },\n  Diagram: {\n    children: [...Object.keys(classifiers), ...Object.keys(relationships)],\n  },\n  ...classifiers,\n  ...relationships,\n};\n\nexport default schema;\n","import { Editor } from \"../blocks\";\nimport { xmlSchema } from \"../schemas\";\n\ninterface Props {\n  xml: string;\n  onChange: (xml: string) => void;\n}\n\nfunction XMLEditor({ xml, onChange }: Props) {\n  return (\n    <div className=\"XMLEditor\" style={{ gridArea: \"xml\", position: \"relative\" }}>\n      <Editor language=\"xml\" value={xml} schema={xmlSchema} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default XMLEditor;\n","import React, { Dispatch, useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../constants\";\nimport { parser, Style } from \"../css\";\nimport { decode, encode } from \"../encoding\";\nimport { useDocumentTitle } from \"../hooks\";\nimport { Diagram, Element } from \"../model\";\nimport { serializer } from \"../serializer\";\nimport { SerializableFile, ViewOptions } from \"../utils\";\nimport { AppMenu, Canvas, CSSEditor, XMLEditor } from \"./widgets\";\nimport \"./App.css\";\n\ninterface Props {\n  onLocaleChange: Dispatch<string>;\n}\n\nfunction App({ onLocaleChange }: Props) {\n  const intl = useIntl();\n  const untitledMsg = intl.formatMessage({ id: \"untitled\", defaultMessage: \"Untitled\" });\n  const titleMsg = intl.formatMessage({ id: \"title\", defaultMessage: \"UML Editor\" });\n\n  const [viewOptions, setViewOptions] = useState<ViewOptions>({ grid: false });\n  const [diagram, setDiagram] = useState(() => new Diagram());\n  const [style, setStyle] = useState(() => new Style());\n  const [title, setTitle] = useState(untitledMsg);\n  const [xml, setXml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n\n  useDocumentTitle(`${title} - ${titleMsg}`);\n\n  function forceRerender(): void {\n    setViewOptions({ ...viewOptions });\n  }\n\n  function handleXmlChange(xml: string): void {\n    const diagram = serializer.deserialize(xml);\n    setDiagram(diagram);\n    setXml(xml);\n  }\n\n  function handleCssChange(css: string): void {\n    const style = parser.parseFromString(css);\n    setStyle(style);\n    setCss(css);\n  }\n\n  function handleCanvasChange(element: Element): void {\n    serializer.updateElement(element);\n    const xml = serializer.serialize(diagram);\n    setXml(xml);\n  }\n\n  function handleAddElement(element: Element): void {\n    diagram.addChild(element);\n    handleCanvasChange(diagram);\n    forceRerender();\n  }\n\n  function handleDeleteElement(element: Element): void {\n    diagram.deleteChild(element);\n    handleCanvasChange(diagram);\n    forceRerender();\n  }\n\n  function handleFileChange(file: SerializableFile): void {\n    const diagram = serializer.deserialize(file.xml);\n    const style = parser.parseFromString(file.css);\n    setTitle(file.title);\n    setCss(file.css);\n    setXml(file.xml);\n    setDiagram(diagram);\n    setStyle(style);\n  }\n\n  useEffect(() => {\n    let docXml = INITIAL_XML;\n    let docCss = INITIAL_CSS;\n    if (window.location.hash.startsWith(\"#/?doc=\")) {\n      const hash = window.location.hash.slice(\"#/?doc=\".length);\n      const file = decode(hash);\n      if (file.xml && file.css) {\n        docXml = file.xml;\n        docCss = file.css;\n        setTitle(file.title);\n      }\n    }\n\n    const diagram = serializer.deserialize(docXml);\n    const style = parser.parseFromString(docCss);\n    setDiagram(diagram);\n    setStyle(style);\n    setXml(docXml);\n    setCss(docCss);\n  }, []);\n\n  useEffect(() => {\n    const hash = encode({ title, xml, css });\n    window.location.hash = `/?doc=${hash}`;\n  }, [title, xml, css]);\n\n  return (\n    <div className=\"App bg-secondary\">\n      <AppMenu\n        file={{ title, model: diagram, style, xml, css }}\n        viewOptions={viewOptions}\n        onFileChange={handleFileChange}\n        onViewOptionsChange={setViewOptions}\n        onLocaleChange={onLocaleChange}\n        onAddElement={handleAddElement}\n        onDeleteElement={handleDeleteElement}\n      />\n      <XMLEditor xml={xml} onChange={handleXmlChange} />\n      <CSSEditor css={css} onChange={handleCssChange} />\n      <Canvas\n        viewOptions={viewOptions}\n        diagram={diagram}\n        style={style}\n        onChange={handleCanvasChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { LocaleSwitch } from \"./components/widgets\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <LocaleSwitch>{(onLocaleChange) => <App onLocaleChange={onLocaleChange} />}</LocaleSwitch>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}