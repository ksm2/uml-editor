{"version":3,"sources":["constants.ts","css/Color.ts","css/CSSToken.ts","parsing/Parser.ts","parsing/Tokenizer.ts","css/CSSTokenizer.ts","css/Property.ts","css/PropertyMap.ts","model/Anchor.ts","css/Style.ts","css/Rule.ts","css/Selector.ts","css/index.ts","css/CSSParser.ts","serializer/FileSerializer.ts","renderer/anchors.ts","model/AbstractElement.ts","model/Shape.ts","model/LinePattern.ts","model/Classifier.ts","model/Diagram.ts","model/Tip.ts","model/Relationship.ts","model/Separator.ts","model/Stereotype.ts","model/Text.ts","model/Title.ts","serializer/Serializer.ts","uml/Aggregation.ts","uml/Anchor.ts","uml/Association.ts","uml/Class.ts","uml/Component.ts","uml/Composition.ts","uml/DataType.ts","uml/Dependency.ts","uml/DirectedAssociation.ts","uml/Enumeration.ts","uml/Generalization.ts","uml/Implementation.ts","uml/Interface.ts","uml/Note.ts","uml/Package.ts","uml/Primitive.ts","serializer/index.ts","serializer/UMLSerializer.ts","encoding/base64.ts","encoding/utf8.ts","encoding/index.ts","hooks/useDocumentTitle.ts","hooks/useId.ts","hooks/useShortcut.ts","components/blocks/ContainerFluid.tsx","components/blocks/DropdownDivider.tsx","components/blocks/Shortcut.tsx","components/blocks/DropdownItem.tsx","components/blocks/DropdownMenu.tsx","components/blocks/DropdownToggle.tsx","components/blocks/Editor.tsx","components/blocks/ExternalLink.tsx","components/blocks/Flag.tsx","components/blocks/Icon.tsx","components/blocks/logo.png","components/blocks/MenuBar.tsx","components/blocks/NavItem.tsx","components/blocks/Menu.tsx","components/widgets/DeleteElement.tsx","components/widgets/DuplicateElement.tsx","components/widgets/FileNew.tsx","utils.ts","components/widgets/FileOpen.tsx","components/widgets/FileRename.tsx","components/widgets/FileSave.tsx","components/widgets/LocaleItem.tsx","renderer/CanvasClassifierRenderer.ts","renderer/CanvasRelationshipRenderer.ts","renderer/Handle.ts","renderer/HTML5Canvas.ts","renderer/RenderContext.ts","renderer/CanvasRenderer.ts","renderer/SVGCanvas.ts","renderer/SVGRenderer.ts","components/widgets/PNGExport.tsx","components/widgets/SVGExport.tsx","components/widgets/ToggleGrid.tsx","components/widgets/AppMenu.tsx","components/widgets/Canvas.tsx","components/widgets/CSSEditor.tsx","components/widgets/LocaleSwitch.tsx","components/schemas/xmlSchema.ts","components/widgets/XMLEditor.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GRID","PADDING","MARGIN","HANDLE_RADIUS","INITIAL_XML","INITIAL_CSS","Color","red","green","blue","this","sanitizeComponent","intToHex","other","percentage","otherFactor","clamp","thisFactor","hexString","parseInt","slice","min","max","value","clamped","Math","round","toString","padStart","BLUE","fromHexString","INDIGO","PURPLE","PINK","RED","ORANGE","YELLOW","GREEN","TEAL","CYAN","WHITE","GRAY","GRAY_DARK","PRIMARY","SECONDARY","SUCCESS","INFO","WARNING","DANGER","LIGHT","DARK","CSSToken","Parser","tokenizer","tokens","index","string","tokenize","parse","kind","token","Error","parsers","parser","parseOptional","undefined","result","Set","oldIndex","add","call","err","Tokenizer","subject","length","next","newIndex","push","search","match","startsWith","CSSTokenizer","matches","COLOR","NUMBER","LBRACE","RBRACE","COLON","SEMI","DOT","HASH","IDENTIFIER","ERROR","Property","key","Symbol","iterator","Anchor","PropertyMap","properties","map","Map","property","entries","set","fallback","get","Style","rules","context","head","tail","hasTail","rule","selector","tag","addAll","getProperties","Rule","Selector","classes","id","parseRuleSet","parseSet","parseRule","parseSelector","consume","parsePropertySet","parseClassSet","parseOptionalId","parseProperty","parseIdentifier","parseOneOf","parseColor","parseNumber","parseIdentifierValue","parseClass","parseId","color","number","parseFloat","identifier","FileSerializer","file","header","title","model","xml","style","css","joinSections","content","splitSections","headerString","parseHeader","sections","str","trim","join","expectedNumber","split","isSide","side","anchor","qsin","CENTER","NNW","SSW","N","S","NNE","SSE","qcos","ENE","WNW","E","W","ESE","WSW","Shape","AbstractElement","children","hovered","selected","child","delete","reverse","LinePattern","Classifier","x","y","width","height","shape","RECTANGLE","getLeft","getTop","left","top","renderer","renderClassifier","constructor","Object","getPrototypeOf","Diagram","renderDiagram","predicate","findElement","element","getChildren","getRight","getBottom","reduceClassifiers","acc","classifier","Infinity","bottom","right","reducer","seed","Tip","Relationship","from","fromAnchor","to","toAnchor","fromTip","NONE","toTip","linePattern","SOLID","getWidth","getHeight","atan2","getY2","getY1","getX2","getX1","renderRelationship","Separator","renderSeparator","Stereotype","renderStereotype","Text","text","renderText","Title","renderTitle","Serializer","serializer","elementMap","DOMParser","XMLSerializer","clear","document","parseFromString","diagram","parseElement","documentElement","Model","hasElement","root","getElement","serializeToString","xmlElement","setElement","has","parsed","parseElementSwitch","setDiagram","setClassifier","setText","tagName","parseDiagram","parseClassifier","parseRelationship","parseTitle","parseText","parseChildren","updateChildren","parseAnchorAttribute","parseIntAttribute","parseEnumAttribute","setAnchorAttribute","setIntAttribute","getX","getY","relationship","parseClassifierAttribute","parseTipAttribute","parseLinePatternAttribute","textContent","target","addChild","console","error","visitedChildren","childElement","getOrCreateElement","remove","cleanupWhiteSpace","createElement","attribute","hasAttribute","getAttribute","elementById","ownerDocument","getElementById","setEnumAttribute","enumClass","item","Reflect","toUpperCase","enumValue","removeAttribute","toLowerCase","setAttribute","Number","isNaN","String","values","parent","newElement","getTagName","generateId","appendChild","prefix","i","level","getLevel","originalChildren","childNodes","removeChild","first","originalChild","extraNewLine","addText","getIndent","repeat","offset","parentElement","data","createTextNode","Aggregation","DIAMOND","DOTS","Association","Class","Component","COMPONENT","Composition","FILLED_DIAMOND","DataType","Dependency","ARROW","TIGHT_DASHES","DirectedAssociation","Enumeration","Generalization","TRIANGLE","Implementation","Interface","Note","NOTE","Package","FOLDER","Primitive","UML","fileSerializer","byteToASCII","byte","asciiToByte","ascii","threeToFourBytes","input1","input2","input3","encodeString","output","fromCharCode","enc","TextEncoder","dec","TextDecoder","encode","saveToString","utf8","input","Base64","Pako","decode","hash","deflated","encoded","input4","endsWith2Eq","endsWith1Eq","Array","fill","_","charCodeAt","Uint8Array","UTF8","loadFromString","useDocumentTitle","useEffect","useId","useRef","random","substring","current","useShortcut","shortcut","handler","ref","keypressHandler","event","elements","ctrlKey","shiftKey","altKey","matchesShortcut","preventDefault","addEventListener","removeEventListener","ContainerFluid","className","DropdownDivider","Shortcut","intl","useIntl","parts","formatMessage","defaultMessage","part","DropdownItem","onClick","active","classNames","DropdownMenu","placement","labelledBy","aria-labelledby","DropdownToggle","dropdown","dispose","Dropdown","aria-expanded","data-bs-toggle","completeAfter","cm","pred","setTimeout","state","completionActive","showHint","completeSingle","CodeMirror","Pass","completeIfAfterLt","cur","getCursor","getRange","Pos","line","ch","completeIfInTag","tok","getTokenAt","type","test","charAt","innerMode","getMode","Editor","language","schema","onChange","onChangeRef","editor","mode","hintOptions","schemaInfo","codeMirror","fromTextArea","lineNumbers","theme","matchTags","autocorrect","tabSize","extraKeys","toTextArea","handleChange","newValue","getValue","setValue","on","off","defaultValue","ExternalLink","href","rel","Flag","country","Icon","name","size","toHexString","xlinkHref","iconUrl","MenuBar","gridArea","alt","src","logo","NavItem","Menu","DeleteElement","onDeleteElement","isSelected","DuplicateElement","onAddElement","elementsToDuplicate","setSelected","clone","childClone","FileNew","onFileChange","untitled","message","window","prompt","getMouseCoordinates","clientX","clientY","boundingClientRect","currentTarget","getBoundingClientRect","sanitizeFilename","replace","downloadFile","filename","dataURL","downloadLink","download","click","FileOpen","pattern","Promise","resolve","uploadInput","files","once","accept","multiple","then","FileRename","onTitleChange","newTitle","FileSave","btoa","url","URL","LocaleItem","locale","onLocaleChange","CanvasClassifierRenderer","canvas","save","translate","applyStyle","drawShape","stroke","clip","render","restore","pop","isPointInPath","getStyleProperties","lineWidth","getFloat","strokeColor","getColor","isHovered","mix","fillColor","beginPath","drawRectangleShape","ELLIPSE","drawEllipseShape","drawFolderShape","drawNoteShape","BOX","drawBoxShape","FILE","drawFileShape","drawComponentShape","BOX_DEPTH","w","h","rect","moveTo","lineTo","closePath","ellipse","NOTE_SIZE","FILE_SIZE","COMPONENT_WIDTH","COMPONENT_HEIGHT","COMPONENT_Y","CanvasRelationshipRenderer","applyRelationshipStyle","drawFromTip","drawToTip","setLineDash","SMALL_DASHES","LARGE_DASHES","rotate","getAngle","PI","drawTip","tip","drawArrow","drawTriangle","FILLED_TRIANGLE","drawDiamond","CIRCLE","drawCircle","FILLED_CIRCLE","Handle","HTML5Canvas","ctx","dash","angle","radiusX","radiusY","metrics","measureText","anchorY","fontBoundingBoxAscent","anchorX","fillText","font","attrs","fillStyle","strokeStyle","getFontAttribute","fontStyle","updateFontAttribute","fontWeight","fontSize","fontFamily","RenderContext","canvasWidth","canvasHeight","unshift","shift","CanvasRenderer","options","classifierRenderer","relationshipRenderer","translateX","translateY","getContext","html5Canvas","clearRect","minX","floor","maxX","minY","maxY","renderHandles","isPointInClassifier","drawText","separator","stereotype","contextName","getName","align","weight","getString","family","getHandles","renderHandleAtPoint","getClassifierHandles","handle","isPointInHandle","abs","x1","x2","y1","y2","NW","getCenterX","NE","getCenterY","SW","SE","SVGCanvas","container","stack","paths","saved","path","getContainer","splice","indexOf","svg","createSVG","append","radiansToDegrees","appendPaths","textEl","encodeUTF8","createElementNS","SVGRenderer","baseVal","PNGExport","toDataURL","SVGExport","viewBox","ToggleGrid","viewOptions","onViewOptionsChange","grid","icon","AppMenu","createRenderer","Canvas","div","mouseDownCoords","mouseDownRectangle","mouseDownObject","setCursor","cursor","handleLeftMouseButtonMove","coord","by","vec1","vec2","find","el","deltaX","deltaY","setLeft","setTop","setWidth","setHeight","handleHandleUpdate","onResize","trunc","renderGrid","backgroundColor","onMouseMove","buttons","setHovered","findHandleForPoint","onMouseDown","selectedElement","getRectangle","renderMouseDown","onMouseUp","CSSEditor","position","getMessagesForLocale","DE_MESSAGES","EN_MESSAGES","LocaleSwitch","useState","navigator","setLocale","messages","defaultLocale","anchorSchema","keys","filter","it","shapeSchema","tipSchema","classifierSchema","relationshipSchema","classifiers","relationships","class","XMLEditor","xmlSchema","App","untitledMsg","titleMsg","setViewOptions","setStyle","setTitle","setXml","setCss","forceRerender","handleCanvasChange","updateElement","serialize","docXml","docCss","location","deserialize","deleteChild","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8fdec536.chunk.js","sourcesContent":["export const GRID = 20;\nexport const PADDING = 10;\nexport const MARGIN = 10;\nexport const HANDLE_RADIUS = 4.5;\nexport const INITIAL_XML = `\\\n<Diagram>\n  <Interface id=\"i1\" anchor=\"s\" y=\"-60\">\n    <Stereotype/>\n    <Title>Visitor</Title>\n  </Interface>\n\n  <Class id=\"c1\" anchor=\"n\" y=\"60\" width=\"400\">\n    <Stereotype/>\n    <Title>Concrete Visitor</Title>\n    <Separator/>\n    <Text>visitSomething(something: Something)</Text>\n  </Class>\n\n  <Implementation from=\"c1\" to=\"i1\" fromAnchor=\"n\" toAnchor=\"s\"/>\n</Diagram>\n`;\nexport const INITIAL_CSS = `\\\nInterface {\n  Title {\n    font-style: italic;\n  }\n}\n\nClass {\n  Title {\n    font-weight: bold;\n  }\n}\n`;\n","class Color {\n  readonly red: number;\n  readonly green: number;\n  readonly blue: number;\n\n  static readonly BLUE = Color.fromHexString(\"#0d6efd\");\n  static readonly INDIGO = Color.fromHexString(\"#6610f2\");\n  static readonly PURPLE = Color.fromHexString(\"#6f42c1\");\n  static readonly PINK = Color.fromHexString(\"#d63384\");\n  static readonly RED = Color.fromHexString(\"#dc3545\");\n  static readonly ORANGE = Color.fromHexString(\"#fd7e14\");\n  static readonly YELLOW = Color.fromHexString(\"#ffc107\");\n  static readonly GREEN = Color.fromHexString(\"#198754\");\n  static readonly TEAL = Color.fromHexString(\"#20c997\");\n  static readonly CYAN = Color.fromHexString(\"#0dcaf0\");\n  static readonly WHITE = Color.fromHexString(\"#ffffff\");\n  static readonly GRAY = Color.fromHexString(\"#6c757d\");\n  static readonly GRAY_DARK = Color.fromHexString(\"#343a40\");\n  static readonly PRIMARY = Color.fromHexString(\"#0d6efd\");\n  static readonly SECONDARY = Color.fromHexString(\"#6c757d\");\n  static readonly SUCCESS = Color.fromHexString(\"#198754\");\n  static readonly INFO = Color.CYAN;\n  static readonly WARNING = Color.YELLOW;\n  static readonly DANGER = Color.RED;\n  static readonly LIGHT = Color.fromHexString(\"#f8f9fa\");\n  static readonly DARK = Color.fromHexString(\"#212529\");\n\n  constructor(red: number, green: number, blue: number) {\n    this.red = Color.sanitizeComponent(red);\n    this.green = Color.sanitizeComponent(green);\n    this.blue = Color.sanitizeComponent(blue);\n  }\n\n  static fromHexString(hexString: string): Color {\n    const red = parseInt(hexString.slice(1, 3), 16);\n    const green = parseInt(hexString.slice(3, 5), 16);\n    const blue = parseInt(hexString.slice(5, 7), 16);\n    return new Color(red, green, blue);\n  }\n\n  private static clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n  }\n\n  private static sanitizeComponent(value: number): number {\n    const clamped = Color.clamp(0, 255, value);\n    return Math.round(clamped);\n  }\n\n  private static intToHex(value: number): string {\n    return value.toString(16).padStart(2, \"0\");\n  }\n\n  toHexString(): string {\n    return `#${Color.intToHex(this.red)}${Color.intToHex(this.green)}${Color.intToHex(this.blue)}`;\n  }\n\n  mix(other: Color, percentage: number): Color {\n    const otherFactor = Color.clamp(0, 1, percentage);\n    const thisFactor = 1 - otherFactor;\n    const red = thisFactor * this.red + otherFactor * other.red;\n    const green = thisFactor * this.green + otherFactor * other.green;\n    const blue = thisFactor * this.blue + otherFactor * other.blue;\n    return new Color(red, green, blue);\n  }\n}\n\nexport default Color;\n","enum CSSToken {\n  LBRACE,\n  RBRACE,\n  COLON,\n  SEMI,\n  DOT,\n  HASH,\n  COLOR,\n  NUMBER,\n  IDENTIFIER,\n  ERROR,\n}\n\nexport default CSSToken;\n","import Token from \"./Token\";\nimport Tokenizer from \"./Tokenizer\";\n\nabstract class Parser<T, D> {\n  private readonly tokenizer: Tokenizer<T>;\n  private tokens: Token<T>[] = [];\n  private index = 0;\n\n  constructor(tokenizer: Tokenizer<T>) {\n    this.tokenizer = tokenizer;\n  }\n\n  parseFromString(string: string): D {\n    this.index = 0;\n    this.tokens = this.tokenizer.tokenize(string);\n    return this.parse();\n  }\n\n  protected abstract parse(): D;\n\n  protected consume(kind: T): Token<T> {\n    const token = this.tokens[this.index];\n    if (token.kind === kind) {\n      this.index += 1;\n      return token;\n    } else {\n      throw new Error(`Expected ${kind}, but was ${token.kind}`);\n    }\n  }\n\n  protected parseOneOf<U1, U2, U3>(\n    parser1: () => U1,\n    parser2: () => U2,\n    parser3: () => U3,\n  ): U1 | U2 | U3;\n  protected parseOneOf<U1, U2>(parser1: () => U1, parser2: () => U2): U1 | U2;\n  protected parseOneOf<U1>(parser1: () => U1): U1;\n  protected parseOneOf(...parsers: Array<() => unknown>): unknown {\n    for (const parser of parsers) {\n      const value = this.parseOptional(parser);\n      if (value !== undefined) {\n        return value;\n      }\n    }\n\n    throw new Error(\"None of the one ofs matched\");\n  }\n\n  protected parseSet<U>(parser: () => U): Set<U> {\n    const result = new Set<U>();\n    while (true) {\n      const oldIndex = this.index;\n      try {\n        result.add(parser.call(this));\n      } catch (err) {\n        this.index = oldIndex;\n        return result;\n      }\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any tokens\");\n      }\n    }\n  }\n\n  protected parseOptional<U>(parser: () => U): U | undefined {\n    const oldIndex = this.index;\n    let result;\n    try {\n      result = parser.call(this);\n    } catch (err) {\n      this.index = oldIndex;\n      return undefined;\n    }\n\n    const newIndex = this.index;\n    if (newIndex <= oldIndex) {\n      throw new Error(\"Did not consume any tokens\");\n    }\n\n    return result;\n  }\n}\n\nexport default Parser;\n","import Token from \"./Token\";\n\nabstract class Tokenizer<T> {\n  private subject = \"\";\n  private index = 0;\n\n  tokenize(subject: string): Token<T>[] {\n    this.subject = subject;\n    this.index = 0;\n    const tokens = [];\n    while (this.index < this.subject.length) {\n      const oldIndex = this.index;\n      const kind = this.next();\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any characters\");\n      }\n\n      if (kind === null) {\n        continue;\n      }\n\n      const value = this.subject.slice(oldIndex, newIndex);\n      tokens.push({ kind, value });\n    }\n\n    return tokens;\n  }\n\n  protected abstract next(): T | null;\n\n  protected matches(search: RegExp): boolean {\n    const match = this.subject.slice(this.index).match(search);\n    if (match === null) {\n      return false;\n    }\n\n    this.index += match[0].length;\n    return true;\n  }\n\n  protected startsWith(search: string): boolean {\n    if (this.subject.startsWith(search, this.index)) {\n      this.index += search.length;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default Tokenizer;\n","import { Tokenizer } from \"../parsing\";\nimport CSSToken from \"./CSSToken\";\n\nclass CSSTokenizer extends Tokenizer<CSSToken> {\n  protected next(): CSSToken | null {\n    // Whitespace\n    if (this.matches(/^\\s+/)) return null;\n\n    // Comments\n    if (this.matches(/^\\/\\/[^\\r\\n]*/)) return null;\n    if (this.matches(/^\\/\\*.*?\\*\\//)) return null;\n\n    // Literals\n    if (this.matches(/^#[0-9a-fA-F]{6}|^#[0-9a-fA-F]{3}/)) return CSSToken.COLOR;\n    if (this.matches(/^\\d+(\\.\\d*)?|^\\.\\d+/)) return CSSToken.NUMBER;\n\n    // Operators\n    if (this.startsWith(\"{\")) return CSSToken.LBRACE;\n    if (this.startsWith(\"}\")) return CSSToken.RBRACE;\n    if (this.startsWith(\":\")) return CSSToken.COLON;\n    if (this.startsWith(\";\")) return CSSToken.SEMI;\n    if (this.startsWith(\".\")) return CSSToken.DOT;\n    if (this.startsWith(\"#\")) return CSSToken.HASH;\n\n    if (this.matches(/^[a-zA-Z]+(-[a-zA-Z]+)*/)) return CSSToken.IDENTIFIER;\n\n    // Fallback\n    this.matches(/^./);\n    return CSSToken.ERROR;\n  }\n}\n\nexport default CSSTokenizer;\n","class Property {\n  readonly key: string;\n  readonly value: unknown;\n\n  constructor(key: string, value: unknown) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport default Property;\n","import Color from \"./Color\";\nimport Property from \"./Property\";\n\nclass PropertyMap implements Iterable<[string, unknown]> {\n  protected readonly map: Map<string, unknown>;\n\n  constructor(properties = new Set<Property>()) {\n    this.map = new Map<string, unknown>(\n      [...properties].map((property) => [property.key, property.value] as const),\n    );\n  }\n\n  [Symbol.iterator](): Iterator<[string, unknown]> {\n    return this.map.entries();\n  }\n\n  addAll(map: PropertyMap): this {\n    for (const [key, value] of map) {\n      this.map.set(key, value);\n    }\n    return this;\n  }\n\n  getString(key: string, fallback: string): string {\n    const value = this.map.get(key);\n    if (typeof value === \"string\") {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getColor(key: string, fallback: Color): Color {\n    const value = this.map.get(key);\n    if (value instanceof Color) {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getFloat(key: string, fallback: number): number {\n    const value = this.map.get(key);\n    if (typeof value === \"number\") {\n      return value;\n    }\n\n    return fallback;\n  }\n}\n\nexport default PropertyMap;\n","enum Anchor {\n  N,\n  NNE,\n  NE,\n  ENE,\n  E,\n  ESE,\n  SE,\n  SSE,\n  S,\n  SSW,\n  SW,\n  WSW,\n  W,\n  WNW,\n  NW,\n  NNW,\n  CENTER,\n}\n\nexport default Anchor;\n","import PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\n\nclass Style {\n  readonly rules: Set<Rule>;\n\n  constructor(rules = new Set<Rule>()) {\n    this.rules = rules;\n  }\n\n  getProperties(context: string[]): PropertyMap {\n    const result = new PropertyMap();\n    const [head, ...tail] = context;\n    const hasTail = tail.length > 0;\n    for (const rule of this.rules) {\n      if (rule.selector.tag === head) {\n        const properties = new PropertyMap(rule.properties);\n        if (hasTail) {\n          properties.addAll(this.getProperties(tail));\n          properties.addAll(rule.getProperties(tail));\n        }\n        result.addAll(properties);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default Style;\n","import Style from \"./Style\";\nimport Property from \"./Property\";\nimport Selector from \"./Selector\";\n\nclass Rule extends Style {\n  readonly selector: Selector;\n  readonly properties: Set<Property>;\n\n  constructor(selector: Selector, properties: Set<Property>, rules: Set<Rule>) {\n    super(rules);\n    this.selector = selector;\n    this.properties = properties;\n  }\n}\n\nexport default Rule;\n","class Selector {\n  readonly tag: string;\n  readonly classes: Set<string>;\n  readonly id?: string;\n\n  constructor(tag: string, classes: Set<string>, id?: string) {\n    this.tag = tag;\n    this.classes = classes;\n    this.id = id;\n  }\n}\n\nexport default Selector;\n","import Color from \"./Color\";\nimport CSSParser from \"./CSSParser\";\nimport Property from \"./Property\";\nimport PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nexport { Color, CSSParser, Property, PropertyMap, Rule, Selector, Style };\n\nexport const parser = new CSSParser();\n","import { Parser } from \"../parsing\";\nimport Color from \"./Color\";\nimport CSSToken from \"./CSSToken\";\nimport CSSTokenizer from \"./CSSTokenizer\";\nimport Property from \"./Property\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nclass CSSParser extends Parser<CSSToken, Style> {\n  constructor() {\n    super(new CSSTokenizer());\n  }\n\n  protected parse(): Style {\n    return new Style(this.parseRuleSet());\n  }\n\n  private parseRuleSet(): Set<Rule> {\n    return this.parseSet(this.parseRule);\n  }\n\n  protected parseRule(): Rule {\n    const selector = this.parseSelector();\n    this.consume(CSSToken.LBRACE);\n    const properties = this.parsePropertySet();\n    const rules = this.parseRuleSet();\n    this.consume(CSSToken.RBRACE);\n\n    return new Rule(selector, properties, rules);\n  }\n\n  private parseSelector(): Selector {\n    const tag = this.consume(CSSToken.IDENTIFIER);\n    const classes = this.parseClassSet();\n    const id = this.parseOptionalId();\n\n    return new Selector(tag.value, classes, id);\n  }\n\n  private parsePropertySet(): Set<Property> {\n    return this.parseSet(this.parseProperty);\n  }\n\n  private parseProperty(): Property {\n    const key = this.parseIdentifier();\n    this.consume(CSSToken.COLON);\n\n    const value = this.parseOneOf(this.parseColor, this.parseNumber, this.parseIdentifierValue);\n    this.consume(CSSToken.SEMI);\n\n    return new Property(key, value);\n  }\n\n  private parseClassSet(): Set<string> {\n    return this.parseSet(this.parseClass);\n  }\n\n  private parseClass(): string {\n    this.consume(CSSToken.DOT);\n    const className = this.consume(CSSToken.IDENTIFIER);\n    return className.value;\n  }\n\n  private parseOptionalId(): string | undefined {\n    return this.parseOptional(this.parseId);\n  }\n\n  private parseId(): string {\n    this.consume(CSSToken.HASH);\n    const id = this.consume(CSSToken.IDENTIFIER);\n    return id.value;\n  }\n\n  private parseColor(): Color {\n    const color = this.consume(CSSToken.COLOR);\n    return Color.fromHexString(color.value);\n  }\n\n  private parseNumber(): number {\n    const number = this.consume(CSSToken.NUMBER);\n    return parseFloat(number.value);\n  }\n\n  private parseIdentifierValue(): string | Color {\n    const identifier = this.parseIdentifier();\n    switch (identifier) {\n      case \"blue\":\n        return Color.BLUE;\n      case \"indigo\":\n        return Color.INDIGO;\n      case \"purple\":\n        return Color.PURPLE;\n      case \"pink\":\n        return Color.PINK;\n      case \"red\":\n        return Color.RED;\n      case \"orange\":\n        return Color.ORANGE;\n      case \"yellow\":\n        return Color.YELLOW;\n      case \"green\":\n        return Color.GREEN;\n      case \"teal\":\n        return Color.TEAL;\n      case \"cyan\":\n        return Color.CYAN;\n      case \"white\":\n        return Color.WHITE;\n      case \"gray\":\n        return Color.GRAY;\n      case \"gray-dark\":\n        return Color.GRAY_DARK;\n      case \"primary\":\n        return Color.PRIMARY;\n      case \"secondary\":\n        return Color.SECONDARY;\n      case \"success\":\n        return Color.SUCCESS;\n      case \"info\":\n        return Color.INFO;\n      case \"warning\":\n        return Color.WARNING;\n      case \"danger\":\n        return Color.DANGER;\n      case \"light\":\n        return Color.LIGHT;\n      case \"dark\":\n        return Color.DARK;\n      default:\n        return identifier;\n    }\n  }\n\n  private parseIdentifier(): string {\n    const identifier = this.consume(CSSToken.IDENTIFIER);\n    return identifier.value;\n  }\n}\n\nexport default CSSParser;\n","import { SerializableFile } from \"../utils\";\n\nclass FileSerializer {\n  saveToString(file: SerializableFile): string {\n    const header = `title: ${file.title}`;\n    const model = file.xml;\n    const style = file.css;\n    return this.joinSections(header, model, style);\n  }\n\n  loadFromString(content: string): SerializableFile {\n    const [headerString, model, style] = this.splitSections(content, 3);\n    const header = this.parseHeader(headerString);\n    return {\n      title: header.title ?? \"Untitled\",\n      xml: model,\n      css: style,\n    };\n  }\n\n  private joinSections(...sections: string[]): string {\n    return sections.map((str) => str.trim()).join(\"\\n---\\n\") + \"\\n\";\n  }\n\n  private splitSections(content: string, expectedNumber: number): string[] {\n    const sections = content.split(\"\\n---\\n\");\n    if (sections.length !== expectedNumber) {\n      throw new Error(`Expected ${expectedNumber} sections`);\n    }\n\n    return sections;\n  }\n\n  private parseHeader(headerString: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    for (const line of headerString.split(/\\r\\n|[\\r\\n]/)) {\n      const [key, value] = line.split(/:\\s*/, 2);\n      result[key] = value;\n    }\n\n    return result;\n  }\n}\n\nexport default FileSerializer;\n","import { Anchor } from \"../model\";\n\nconst EAST = 2;\nconst SOUTH = 6;\nconst WEST = 10;\nconst NORTH = 14;\n\nconst NUM_SIDE = 5;\nconst NUM_OUTER = 16;\n\nfunction isSide(side: number, anchor: Anchor): boolean {\n  return (anchor + side) % NUM_OUTER < NUM_SIDE;\n}\n\nexport function qsin(anchor: Anchor): number {\n  if (anchor === Anchor.CENTER) {\n    return 1 / 2;\n  }\n\n  if (isSide(SOUTH, anchor)) {\n    return 0;\n  }\n\n  if (isSide(NORTH, anchor)) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.NNW:\n    case Anchor.SSW:\n      return 1 / 4;\n    case Anchor.N:\n    case Anchor.S:\n      return 1 / 2;\n    case Anchor.NNE:\n    case Anchor.SSE:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n\nexport function qcos(anchor: Anchor): number {\n  if (anchor === Anchor.CENTER) {\n    return 1 / 2;\n  }\n\n  if (isSide(EAST, anchor)) {\n    return 0;\n  }\n\n  if (isSide(WEST, anchor)) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.ENE:\n    case Anchor.WNW:\n      return 1 / 4;\n    case Anchor.E:\n    case Anchor.W:\n      return 1 / 2;\n    case Anchor.ESE:\n    case Anchor.WSW:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n","import Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nabstract class AbstractElement implements Element {\n  private readonly children = new Set<Element>();\n  private hovered = false;\n  private selected = false;\n\n  abstract render(renderer: Renderer): void;\n\n  abstract getTagName(): string;\n\n  abstract clone(): Element;\n\n  getChildren(): readonly Element[] {\n    return [...this.children];\n  }\n\n  addChild(child: Element): this {\n    this.children.add(child);\n    return this;\n  }\n\n  deleteChild(child: Element): boolean {\n    return this.children.delete(child);\n  }\n\n  *[Symbol.iterator](): Iterator<Element> {\n    for (const child of [...this.children].reverse()) {\n      yield* child;\n    }\n    yield this;\n  }\n\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.hovered = hovered;\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n\n  setSelected(selected: boolean): void {\n    this.selected = selected;\n  }\n}\n\nexport default AbstractElement;\n","enum Shape {\n  RECTANGLE,\n  ELLIPSE,\n  NOTE,\n  FOLDER,\n  BOX,\n  FILE,\n  COMPONENT,\n}\n\nexport default Shape;\n","enum LinePattern {\n  SOLID,\n  DOTS,\n  SMALL_DASHES,\n  LARGE_DASHES,\n  TIGHT_DASHES,\n}\n\nexport default LinePattern;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Rectangle from \"./Rectangle\";\nimport Renderer from \"./Renderer\";\nimport Shape from \"./Shape\";\n\nclass Classifier extends AbstractElement {\n  readonly anchor: Anchor;\n  x: number;\n  y: number;\n  private width: number;\n  private height: number;\n  shape: Shape = Shape.RECTANGLE;\n\n  constructor(anchor: Anchor, x: number, y: number, width: number, height: number) {\n    super();\n    this.anchor = anchor;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getTagName(): string {\n    return \"Classifier\";\n  }\n\n  getRectangle(): Rectangle {\n    return {\n      x: this.getLeft(),\n      y: this.getTop(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setHeight(height: number): void {\n    this.height = height;\n  }\n\n  getLeft(): number {\n    return this.x - this.width * qsin(this.anchor);\n  }\n\n  setLeft(left: number): void {\n    this.x = left + this.width * qsin(this.anchor);\n  }\n\n  getCenterX(): number {\n    return this.getLeft() + this.width / 2;\n  }\n\n  getRight(): number {\n    return this.getLeft() + this.width;\n  }\n\n  getTop(): number {\n    return this.y - this.height * qcos(this.anchor);\n  }\n\n  setTop(top: number): void {\n    this.y = top + this.height * qcos(this.anchor);\n  }\n\n  getCenterY(): number {\n    return this.getTop() + this.height / 2;\n  }\n\n  getBottom(): number {\n    return this.getTop() + this.height;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderClassifier(this);\n  }\n\n  clone(): Classifier {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.anchor, this.x + 20, this.y + 20, this.width, this.height);\n  }\n}\n\nexport default Classifier;\n","import { Predicate } from \"../utils\";\nimport AbstractElement from \"./AbstractElement\";\nimport Classifier from \"./Classifier\";\nimport Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nclass Diagram extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderDiagram(this);\n  }\n\n  getTagName(): string {\n    return \"Diagram\";\n  }\n\n  clone(): Diagram {\n    return new Diagram();\n  }\n\n  find(predicate: Predicate<Element>): Element | undefined {\n    return this.findElement(this, predicate);\n  }\n\n  private findElement(element: Element, predicate: Predicate<Element>): Element | undefined {\n    const result = predicate(element);\n    if (result) {\n      return element;\n    }\n\n    for (const child of element.getChildren()) {\n      const result = this.findElement(child, predicate);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    return undefined;\n  }\n\n  getWidth(): number {\n    return this.getRight() - this.getLeft();\n  }\n\n  getHeight(): number {\n    return this.getBottom() - this.getTop();\n  }\n\n  getTop(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const top = classifier.getTop();\n      return acc > top ? top : acc;\n    }, Infinity);\n  }\n\n  getBottom(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const bottom = classifier.getBottom();\n      return acc < bottom ? bottom : acc;\n    }, -Infinity);\n  }\n\n  getLeft(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const left = classifier.getLeft();\n      return acc > left ? left : acc;\n    }, Infinity);\n  }\n\n  getRight(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const right = classifier.getRight();\n      return acc < right ? right : acc;\n    }, -Infinity);\n  }\n\n  private reduceClassifiers(\n    reducer: (acc: number, classifier: Classifier) => number,\n    seed: number,\n  ): number {\n    let acc = seed;\n    for (const classifier of this.getChildren()) {\n      if (classifier instanceof Classifier) {\n        acc = reducer(acc, classifier);\n      }\n    }\n\n    if (acc === seed) {\n      return 0;\n    }\n\n    return acc;\n  }\n}\n\nexport default Diagram;\n","enum Tip {\n  NONE,\n  ARROW,\n  TRIANGLE,\n  FILLED_TRIANGLE,\n  DIAMOND,\n  FILLED_DIAMOND,\n  CIRCLE,\n  FILLED_CIRCLE,\n}\n\nexport default Tip;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Classifier from \"./Classifier\";\nimport LinePattern from \"./LinePattern\";\nimport Renderer from \"./Renderer\";\nimport Tip from \"./Tip\";\n\nclass Relationship extends AbstractElement {\n  from: Classifier;\n  fromAnchor: Anchor;\n  fromTip: Tip = Tip.NONE;\n  to: Classifier;\n  toAnchor: Anchor;\n  toTip: Tip = Tip.NONE;\n  linePattern: LinePattern = LinePattern.SOLID;\n\n  constructor(from: Classifier, fromAnchor: Anchor, to: Classifier, toAnchor: Anchor) {\n    super();\n    this.from = from;\n    this.fromAnchor = fromAnchor;\n    this.to = to;\n    this.toAnchor = toAnchor;\n  }\n\n  getX1(): number {\n    return this.from.getLeft() + qsin(this.fromAnchor) * this.from.getWidth();\n  }\n\n  getY1(): number {\n    return this.from.getTop() + qcos(this.fromAnchor) * this.from.getHeight();\n  }\n\n  getX2(): number {\n    return this.to.getLeft() + qsin(this.toAnchor) * this.to.getWidth();\n  }\n\n  getY2(): number {\n    return this.to.getTop() + qcos(this.toAnchor) * this.to.getHeight();\n  }\n\n  getAngle(): number {\n    return Math.atan2(this.getY2() - this.getY1(), this.getX2() - this.getX1());\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderRelationship(this);\n  }\n\n  getTagName(): string {\n    return \"Relationship\";\n  }\n\n  clone(): Relationship {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.from, this.fromAnchor, this.to, this.toAnchor);\n  }\n}\n\nexport default Relationship;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Separator extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderSeparator(this);\n  }\n\n  getTagName(): string {\n    return \"Separator\";\n  }\n\n  clone(): Separator {\n    return new Separator();\n  }\n}\n\nexport default Separator;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Stereotype extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderStereotype(this);\n  }\n\n  getTagName(): string {\n    return \"Stereotype\";\n  }\n\n  clone(): Stereotype {\n    return new Stereotype();\n  }\n}\n\nexport default Stereotype;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Text extends AbstractElement {\n  readonly text: string;\n\n  constructor(text: string) {\n    super();\n    this.text = text;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderText(this);\n  }\n\n  getTagName(): string {\n    return \"Text\";\n  }\n\n  clone(): Text {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.text);\n  }\n}\n\nexport default Text;\n","import Text from \"./Text\";\nimport Renderer from \"./Renderer\";\n\nclass Title extends Text {\n  render(renderer: Renderer): void {\n    renderer.renderTitle(this);\n  }\n\n  getTagName(): string {\n    return \"Title\";\n  }\n}\n\nexport default Title;\n","import * as Model from \"../model\";\n\ninterface Class<T> {\n  new (...args: any[]): T;\n}\n\nclass Serializer {\n  private readonly parser: DOMParser;\n  private readonly serializer: XMLSerializer;\n  private readonly elementMap = new Map<Element, Model.Element>();\n\n  constructor() {\n    this.parser = new DOMParser();\n    this.serializer = new XMLSerializer();\n  }\n\n  deserialize(xml: string): Model.Diagram {\n    this.elementMap.clear();\n    const document = this.parser.parseFromString(xml, \"text/xml\");\n    const diagram = this.parseElement(document.documentElement);\n    if (!(diagram instanceof Model.Diagram)) {\n      return new Model.Diagram();\n    }\n\n    return diagram;\n  }\n\n  serialize(diagram: Model.Diagram): string {\n    if (this.hasElement(diagram)) {\n      const root = this.getElement(diagram)!;\n      return this.serializer.serializeToString(root);\n    }\n\n    return \"\";\n  }\n\n  updateElement(element: Model.Element): void {\n    if (this.hasElement(element)) {\n      const xmlElement = this.getElement(element)!;\n      this.setElement(xmlElement, element);\n    }\n  }\n\n  private parseElement(element: Element): Model.Element {\n    if (this.elementMap.has(element)) {\n      return this.elementMap.get(element)!;\n    }\n\n    const parsed = this.parseElementSwitch(element);\n    this.elementMap.set(element, parsed);\n    return parsed;\n  }\n\n  private setElement(xmlElement: Element, element: Model.Element) {\n    if (element instanceof Model.Diagram) {\n      this.setDiagram(xmlElement, element);\n    } else if (element instanceof Model.Classifier) {\n      this.setClassifier(xmlElement, element);\n    } else if (element instanceof Model.Text) {\n      this.setText(xmlElement, element);\n    }\n  }\n\n  protected parseElementSwitch(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Diagram\":\n        return this.parseDiagram(element);\n      case \"Classifier\":\n        return this.parseClassifier(Model.Classifier, element);\n      case \"Relationship\":\n        return this.parseRelationship(Model.Relationship, element);\n      case \"Title\":\n        return this.parseTitle(element);\n      case \"Text\":\n        return this.parseText(element);\n      case \"Separator\":\n        return new Model.Separator();\n      case \"Stereotype\":\n        return new Model.Stereotype();\n    }\n\n    throw new Error(`Unknown tag: ${element.tagName}`);\n  }\n\n  private parseDiagram(element: Element): Model.Diagram {\n    const diagram = new Model.Diagram();\n    this.parseChildren(element, diagram);\n    return diagram;\n  }\n\n  private setDiagram(element: Element, diagram: Model.Diagram): void {\n    this.updateChildren(element, diagram);\n  }\n\n  protected parseClassifier<C extends Model.Classifier>(\n    constructor: Class<C>,\n    element: Element,\n  ): C {\n    const anchor = this.parseAnchorAttribute(element, \"anchor\");\n    const x = this.parseIntAttribute(element, \"x\", 0);\n    const y = this.parseIntAttribute(element, \"y\", 0);\n    const width = this.parseIntAttribute(element, \"width\", 200);\n    const height = this.parseIntAttribute(element, \"height\", 120);\n    const classifier = new constructor(anchor, x, y, width, height);\n    classifier.shape = this.parseEnumAttribute(Model.Shape, element, \"shape\", classifier.shape);\n    this.parseChildren(element, classifier);\n    return classifier;\n  }\n\n  protected setClassifier(element: Element, classifier: Model.Classifier): void {\n    this.setAnchorAttribute(element, \"anchor\", classifier.anchor);\n    this.setIntAttribute(element, \"x\", 0, classifier.getX());\n    this.setIntAttribute(element, \"y\", 0, classifier.getY());\n    this.setIntAttribute(element, \"width\", 200, classifier.getWidth());\n    this.setIntAttribute(element, \"height\", 120, classifier.getHeight());\n    this.updateChildren(element, classifier);\n  }\n\n  protected parseRelationship<R extends Model.Relationship>(\n    constructor: Class<R>,\n    element: Element,\n  ): R {\n    const from = this.parseClassifierAttribute(element, \"from\");\n    const fromAnchor = this.parseAnchorAttribute(element, \"fromAnchor\");\n    const to = this.parseClassifierAttribute(element, \"to\");\n    const toAnchor = this.parseAnchorAttribute(element, \"toAnchor\");\n    const relationship = new constructor(from, fromAnchor, to, toAnchor);\n    relationship.fromTip = this.parseTipAttribute(element, \"fromTip\", relationship.fromTip);\n    relationship.toTip = this.parseTipAttribute(element, \"toTip\", relationship.toTip);\n    relationship.linePattern = this.parseLinePatternAttribute(\n      element,\n      \"linePattern\",\n      relationship.linePattern,\n    );\n    return relationship;\n  }\n\n  private parseTitle(element: Element): Model.Title {\n    const text = element.textContent ?? \"\";\n    return new Model.Title(text);\n  }\n\n  private parseText(element: Element): Model.Text {\n    const text = element.textContent ?? \"\";\n    return new Model.Text(text);\n  }\n\n  private setText(element: Element, text: Model.Text) {\n    element.textContent = text.text;\n  }\n\n  private parseChildren(element: Element, target: Model.Element) {\n    for (const child of element.children) {\n      try {\n        target.addChild(this.parseElement(child));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  private updateChildren(element: Element, target: Model.Element) {\n    const visitedChildren = new Set<Element>();\n    for (const child of target.getChildren()) {\n      const childElement = this.getOrCreateElement(element, child);\n      this.setElement(childElement, child);\n      visitedChildren.add(childElement);\n    }\n\n    for (const child of element.children) {\n      if (!visitedChildren.has(child)) {\n        child.remove();\n        this.elementMap.delete(child);\n      }\n    }\n\n    this.cleanupWhiteSpace(element);\n  }\n\n  private getOrCreateElement(element: Element, child: Model.Element): Element {\n    if (this.hasElement(child)) {\n      return this.getElement(child)!;\n    } else {\n      return this.createElement(element, child);\n    }\n  }\n\n  private parseClassifierAttribute(element: Element, attribute: string): Model.Classifier {\n    if (element.hasAttribute(attribute)) {\n      const id = element.getAttribute(attribute)!;\n      const elementById = element.ownerDocument.getElementById(id);\n      if (elementById !== null) {\n        const classifier = this.parseElement(elementById);\n        if (classifier instanceof Model.Classifier) {\n          return classifier;\n        }\n      }\n    }\n\n    throw new Error(\n      `Invalid classifier: <${element.tagName} ${attribute}=\"${element.getAttribute(\n        attribute,\n      )}\" />`,\n    );\n  }\n\n  private parseAnchorAttribute(element: Element, attribute: string): Model.Anchor {\n    return this.parseEnumAttribute(Model.Anchor, element, attribute, Model.Anchor.CENTER);\n  }\n\n  private setAnchorAttribute(element: Element, attribute: string, anchor: Model.Anchor) {\n    this.setEnumAttribute(Model.Anchor, element, attribute, anchor, Model.Anchor.CENTER);\n  }\n\n  private parseTipAttribute(element: Element, attribute: string, fallback: Model.Tip): Model.Tip {\n    return this.parseEnumAttribute(Model.Tip, element, attribute, fallback);\n  }\n\n  private parseLinePatternAttribute(\n    element: Element,\n    attribute: string,\n    fallback: Model.LinePattern,\n  ): Model.LinePattern {\n    return this.parseEnumAttribute(Model.LinePattern, element, attribute, fallback);\n  }\n\n  private parseEnumAttribute<E>(\n    enumClass: Record<string, unknown>,\n    element: Element,\n    attribute: string,\n    fallback: E,\n  ): E {\n    if (element.hasAttribute(attribute)) {\n      const value = element.getAttribute(attribute)!;\n      const item = Reflect.get(enumClass, value.toUpperCase());\n      if (item !== undefined) {\n        return item;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setEnumAttribute(\n    enumClass: Record<number, string>,\n    element: Element,\n    attribute: string,\n    enumValue: number,\n    fallback: number,\n  ): void {\n    if (enumValue === fallback) {\n      element.removeAttribute(attribute);\n    } else {\n      const value = enumClass[enumValue].toLowerCase();\n      element.setAttribute(attribute, value);\n    }\n  }\n\n  private parseIntAttribute(element: Element, attribute: string, fallback: number): number {\n    if (element.hasAttribute(attribute)) {\n      const value = parseInt(element.getAttribute(attribute)!, 10);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setIntAttribute(\n    element: Element,\n    attribute: string,\n    fallback: number,\n    value: number,\n  ): void {\n    if (value !== fallback) {\n      element.setAttribute(attribute, String(value));\n    } else {\n      element.removeAttribute(attribute);\n    }\n  }\n\n  private hasElement(element: Model.Element): boolean {\n    for (const value of this.elementMap.values()) {\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getElement(element: Model.Element): Element | undefined {\n    for (const [xmlElement, el] of this.elementMap) {\n      if (el === element) {\n        return xmlElement;\n      }\n    }\n    return undefined;\n  }\n\n  private createElement(parent: Element, element: Model.Element): Element {\n    const newElement = parent.ownerDocument.createElement(element.getTagName());\n    const id = this.generateId(parent.ownerDocument, element);\n    newElement.setAttribute(\"id\", id);\n    this.elementMap.set(newElement, element);\n\n    parent.appendChild(newElement);\n\n    return newElement;\n  }\n\n  private generateId(document: Document, element: Model.Element): string {\n    let prefix = element.getTagName().toLowerCase();\n    if (prefix === \"interface\") {\n      prefix = \"i\";\n    } else if (prefix === \"class\") {\n      prefix = \"c\";\n    }\n\n    let i = 1;\n    while (document.getElementById(prefix + i) !== null) {\n      i += 1;\n    }\n    return prefix + i;\n  }\n\n  private cleanupWhiteSpace(element: Element): void {\n    const level = this.getLevel(0, element);\n    const originalChildren = [...element.children];\n    while (element.childNodes.length > 0) {\n      element.removeChild(element.childNodes.item(0));\n    }\n\n    let first = true;\n    for (const originalChild of originalChildren) {\n      let extraNewLine = \"\";\n      if (level === 0 && !first) {\n        extraNewLine = \"\\n\";\n      }\n      this.addText(element, extraNewLine + this.getIndent(level + 1));\n      element.appendChild(originalChild);\n      first = false;\n    }\n    this.addText(element, this.getIndent(level));\n  }\n\n  private getIndent(level: number): string {\n    return \"\\n\" + \"  \".repeat(level);\n  }\n\n  private getLevel(offset: number, parent: Element): number {\n    if (parent.parentElement === null) {\n      return offset;\n    } else {\n      return this.getLevel(offset + 1, parent.parentElement);\n    }\n  }\n\n  private addText(parent: Element, data: string): void {\n    parent.appendChild(parent.ownerDocument.createTextNode(data));\n  }\n}\n\nexport default Serializer;\n","import { Relationship, Tip } from \"../model\";\n\nclass Aggregation extends Relationship {\n  toTip: Tip = Tip.DIAMOND;\n\n  getTagName(): string {\n    return \"Aggregation\";\n  }\n}\n\nexport default Aggregation;\n","import { LinePattern, Relationship } from \"../model\";\n\nclass Anchor extends Relationship {\n  linePattern: LinePattern = LinePattern.DOTS;\n\n  getTagName(): string {\n    return \"Anchor\";\n  }\n}\n\nexport default Anchor;\n","import { Relationship } from \"../model\";\n\nclass Association extends Relationship {\n  getTagName(): string {\n    return \"Association\";\n  }\n}\n\nexport default Association;\n","import { Classifier } from \"../model\";\n\nclass Class extends Classifier {\n  getTagName(): string {\n    return \"Class\";\n  }\n}\n\nexport default Class;\n","import { Classifier, Shape } from \"../model\";\n\nclass Component extends Classifier {\n  shape: Shape = Shape.COMPONENT;\n\n  getTagName(): string {\n    return \"Component\";\n  }\n}\n\nexport default Component;\n","import { Relationship, Tip } from \"../model\";\n\nclass Composition extends Relationship {\n  toTip: Tip = Tip.FILLED_DIAMOND;\n\n  getTagName(): string {\n    return \"Composition\";\n  }\n}\n\nexport default Composition;\n","import { Classifier } from \"../model\";\n\nclass DataType extends Classifier {\n  getTagName(): string {\n    return \"DataType\";\n  }\n}\n\nexport default DataType;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Dependency extends Relationship {\n  toTip: Tip = Tip.ARROW;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n\n  getTagName(): string {\n    return \"Dependency\";\n  }\n}\n\nexport default Dependency;\n","import { Relationship, Tip } from \"../model\";\n\nclass DirectedAssociation extends Relationship {\n  toTip: Tip = Tip.ARROW;\n\n  getTagName(): string {\n    return \"DirectedAssociation\";\n  }\n}\n\nexport default DirectedAssociation;\n","import { Classifier } from \"../model\";\n\nclass Enumeration extends Classifier {\n  getTagName(): string {\n    return \"Enumeration\";\n  }\n}\n\nexport default Enumeration;\n","import { Relationship, Tip } from \"../model\";\n\nclass Generalization extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n\n  getTagName(): string {\n    return \"Generalization\";\n  }\n}\n\nexport default Generalization;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Implementation extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n\n  getTagName(): string {\n    return \"Implementation\";\n  }\n}\n\nexport default Implementation;\n","import { Classifier } from \"../model\";\n\nclass Interface extends Classifier {\n  getTagName(): string {\n    return \"Interface\";\n  }\n}\n\nexport default Interface;\n","import { Classifier, Shape } from \"../model\";\n\nclass Note extends Classifier {\n  shape: Shape = Shape.NOTE;\n\n  getTagName(): string {\n    return \"Note\";\n  }\n}\n\nexport default Note;\n","import { Classifier, Shape } from \"../model\";\n\nclass Package extends Classifier {\n  shape: Shape = Shape.FOLDER;\n\n  getTagName(): string {\n    return \"Package\";\n  }\n}\n\nexport default Package;\n","import { Classifier } from \"../model\";\n\nclass Primitive extends Classifier {\n  getTagName(): string {\n    return \"Primitive\";\n  }\n}\n\nexport default Primitive;\n","import FileSerializer from \"./FileSerializer\";\nimport UMLSerializer from \"./UMLSerializer\";\n\nexport const serializer = new UMLSerializer();\nexport const fileSerializer = new FileSerializer();\n","import Serializer from \"./Serializer\";\nimport * as Model from \"../model\";\nimport * as UML from \"../uml\";\n\nclass UMLSerializer extends Serializer {\n  protected parseElementSwitch(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Aggregation\":\n        return this.parseRelationship(UML.Aggregation, element);\n      case \"Anchor\":\n        return this.parseRelationship(UML.Anchor, element);\n      case \"Association\":\n        return this.parseRelationship(UML.Association, element);\n      case \"Class\":\n        return this.parseClassifier(UML.Class, element);\n      case \"Component\":\n        return this.parseClassifier(UML.Component, element);\n      case \"Composition\":\n        return this.parseRelationship(UML.Composition, element);\n      case \"DataType\":\n        return this.parseClassifier(UML.DataType, element);\n      case \"Dependency\":\n        return this.parseRelationship(UML.Dependency, element);\n      case \"DirectedAssociation\":\n        return this.parseRelationship(UML.DirectedAssociation, element);\n      case \"Enumeration\":\n        return this.parseClassifier(UML.Enumeration, element);\n      case \"Generalization\":\n        return this.parseRelationship(UML.Generalization, element);\n      case \"Implementation\":\n        return this.parseRelationship(UML.Implementation, element);\n      case \"Interface\":\n        return this.parseClassifier(UML.Interface, element);\n      case \"Note\":\n        return this.parseClassifier(UML.Note, element);\n      case \"Package\":\n        return this.parseClassifier(UML.Package, element);\n      case \"Primitive\":\n        return this.parseClassifier(UML.Primitive, element);\n      default:\n        return super.parseElementSwitch(element);\n    }\n  }\n}\n\nexport default UMLSerializer;\n","const ASCII_LOWER_A = 97;\nconst ASCII_CAPITAL_A = 65;\nconst ASCII_EQ = 61;\nconst ASCII_ZERO = 48;\nconst ASCII_SLASH = 47;\nconst ASCII_PLUS = 43;\n\nconst BASE64_EQ = 0;\nconst BASE64_LOWER_A = 26;\nconst BASE64_ZERO = 52;\nconst BASE64_PLUS = 62;\nconst BASE64_SLASH = 63;\n\nfunction byteToASCII(byte: number): number {\n  const isUpperCaseLetter = byte < BASE64_LOWER_A;\n  if (isUpperCaseLetter) {\n    return byte + ASCII_CAPITAL_A;\n  }\n  const isLowerCaseLetter = byte < BASE64_ZERO;\n  if (isLowerCaseLetter) {\n    return byte - BASE64_LOWER_A + ASCII_LOWER_A;\n  }\n  const isNumber = byte < BASE64_PLUS;\n  if (isNumber) {\n    return byte - BASE64_ZERO + ASCII_ZERO;\n  }\n  if (byte === BASE64_PLUS) {\n    return ASCII_PLUS;\n  } else {\n    return ASCII_SLASH;\n  }\n}\n\nfunction asciiToByte(ascii: number): number {\n  const isLowerCaseLetter = ascii >= ASCII_LOWER_A;\n  if (isLowerCaseLetter) {\n    return ascii - ASCII_LOWER_A + BASE64_LOWER_A;\n  }\n  const isUpperCaseLetter = ascii >= ASCII_CAPITAL_A;\n  if (isUpperCaseLetter) {\n    return ascii - ASCII_CAPITAL_A;\n  }\n  if (ascii === ASCII_EQ) {\n    return BASE64_EQ;\n  }\n  const isNumber = ascii >= ASCII_ZERO;\n  if (isNumber) {\n    return ascii - ASCII_ZERO + BASE64_ZERO;\n  }\n  if (ascii === ASCII_PLUS) {\n    return BASE64_PLUS;\n  } else {\n    return BASE64_SLASH;\n  }\n}\n\nfunction threeToFourBytes(input1: number, input2: number, input3: number): number[] {\n  const output1 = input1 >>> 2;\n  const output2 = ((input1 & 0b11) << 4) | (input2 >>> 4);\n  const output3 = ((input2 & 0b1111) << 2) | (input3 >>> 6);\n  const output4 = input3 & 0b111111;\n  return [output1, output2, output3, output4];\n}\n\nfunction fourToThreeBytes(\n  input1: number,\n  input2: number,\n  input3: number,\n  input4: number,\n): number[] {\n  const output1 = (input1 << 2) | (input2 >>> 4);\n  const output2 = ((input2 & 0b1111) << 4) | (input3 >>> 2);\n  const output3 = ((input3 & 0b11) << 6) | input4;\n  return [output1, output2, output3];\n}\n\nfunction encodeString(output: number[]): string {\n  return String.fromCharCode(...output.map(byteToASCII));\n}\n\nexport function encode(input: Uint8Array): string {\n  const output = [];\n  let i;\n  for (i = 0; i < input.length - 2; i += 3) {\n    output.push(...threeToFourBytes(input[i], input[i + 1], input[i + 2]));\n  }\n\n  if (i === input.length - 2) {\n    output.push(...threeToFourBytes(input[i], input[i + 1], 0));\n    return encodeString(output).slice(0, -1) + \"=\";\n  }\n  if (i === input.length - 1) {\n    output.push(...threeToFourBytes(input[i], 0, 0));\n    return encodeString(output).slice(0, -2) + \"==\";\n  }\n\n  return encodeString(output);\n}\n\nexport function decode(encoded: string): Uint8Array {\n  if (encoded.length % 4 !== 0) {\n    throw new Error(\"Base64 has incorrect length.\");\n  }\n\n  const endsWith2Eq = encoded.slice(-2) === \"==\";\n  const endsWith1Eq = !endsWith2Eq && encoded.slice(-1) === \"=\";\n  const input = new Array(encoded.length)\n    .fill(0)\n    .map((_, i) => encoded.charCodeAt(i))\n    .map(asciiToByte);\n  const output = [];\n  for (let i = 0; i < input.length - 3; i += 4) {\n    output.push(...fourToThreeBytes(input[i], input[i + 1], input[i + 2], input[i + 3]));\n  }\n  if (endsWith2Eq) {\n    return new Uint8Array(output.slice(0, -2));\n  } else if (endsWith1Eq) {\n    return new Uint8Array(output.slice(0, -1));\n  } else {\n    return new Uint8Array(output);\n  }\n}\n","const enc = new TextEncoder();\nconst dec = new TextDecoder();\n\nexport function encode(str: string): Uint8Array {\n  return enc.encode(str);\n}\n\nexport function decode(utf8: Uint8Array): string {\n  return dec.decode(utf8);\n}\n","import { fileSerializer } from \"../serializer\";\nimport { SerializableFile } from \"../utils\";\nimport * as Base64 from \"./base64\";\nimport * as Pako from \"pako\";\nimport * as UTF8 from \"./utf8\";\n\nexport function encode(file: SerializableFile): string {\n  const string = fileSerializer.saveToString(file);\n  const utf8 = UTF8.encode(string);\n  const deflated = Pako.deflate(utf8);\n  return Base64.encode(deflated);\n}\n\nexport function decode(hash: string): SerializableFile {\n  const deflated = Base64.decode(hash);\n  const utf8 = Pako.inflate(deflated);\n  const string = UTF8.decode(utf8);\n  return fileSerializer.loadFromString(string);\n}\n","import { useEffect } from \"react\";\n\nfunction useDocumentTitle(title: string): void {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import { useRef } from \"react\";\n\nfunction useId(prefix: string): string {\n  const ref = useRef(`${prefix}-${Math.random().toString(36).substring(2)}`);\n\n  return ref.current!;\n}\n\nexport default useId;\n","import { useEffect, useRef } from \"react\";\n\nfunction useShortcut(shortcut: string | undefined, handler: () => void): void {\n  const ref = useRef(handler);\n\n  useEffect(() => {\n    function keypressHandler(event: KeyboardEvent) {\n      if (shortcut !== undefined && matchesShortcut(shortcut, event)) {\n        event.preventDefault();\n        ref.current();\n      }\n    }\n\n    document.addEventListener(\"keydown\", keypressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keypressHandler);\n    };\n  }, [shortcut]);\n\n  useEffect(() => {\n    ref.current = handler;\n  });\n}\n\nfunction matchesShortcut(shortcut: string, event: KeyboardEvent) {\n  let result = true;\n\n  const elements = shortcut.split(\"-\");\n  for (const element of elements) {\n    if (element === \"Ctrl\") {\n      result = result && event.ctrlKey;\n    } else if (element === \"Shift\") {\n      result = result && event.shiftKey;\n    } else if (element === \"Alt\") {\n      result = result && event.altKey;\n    } else {\n      result = result && event.key.toLowerCase() === element.toLowerCase();\n    }\n  }\n\n  return result;\n}\n\nexport default useShortcut;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction ContainerFluid({ children }: Props) {\n  return <div className=\"container-fluid\">{children}</div>;\n}\n\nexport default ContainerFluid;\n","function DropdownDivider() {\n  return (\n    <li>\n      <hr className=\"dropdown-divider\" />\n    </li>\n  );\n}\n\nexport default DropdownDivider;\n","import { useIntl } from \"react-intl\";\n\ninterface Props {\n  shortcut: string;\n}\n\nfunction Shortcut({ shortcut }: Props) {\n  const intl = useIntl();\n  const parts = new Map([\n    [\"Alt\", intl.formatMessage({ id: \"shortcut.alt\", defaultMessage: \"Alt\" })],\n    [\"Ctrl\", intl.formatMessage({ id: \"shortcut.ctrl\", defaultMessage: \"Ctrl\" })],\n    [\"Delete\", intl.formatMessage({ id: \"shortcut.delete\", defaultMessage: \"Delete\" })],\n    [\"Shift\", intl.formatMessage({ id: \"shortcut.shift\", defaultMessage: \"Shift\" })],\n  ]);\n\n  const text = shortcut\n    .split(\"-\")\n    .map((part) => parts.get(part) ?? part)\n    .join(\" \");\n\n  return <span className=\"text-muted float-end\">{text}</span>;\n}\n\nexport default Shortcut;\n","import classNames from \"classnames\";\nimport { MouseEvent, ReactNode } from \"react\";\nimport { useShortcut } from \"../../hooks\";\nimport Shortcut from \"./Shortcut\";\n\ninterface Props {\n  onClick?: () => void;\n  shortcut?: string;\n  active?: boolean;\n  children?: ReactNode;\n}\n\nfunction DropdownItem({ onClick, shortcut, active, children }: Props) {\n  function handleClick(event: MouseEvent) {\n    event.preventDefault();\n    onClick?.();\n  }\n\n  useShortcut(shortcut, () => {\n    onClick?.();\n  });\n\n  return (\n    <li>\n      <button\n        onClick={handleClick}\n        className={classNames(\"btn btn-link dropdown-item\", { active })}\n      >\n        {children}\n        {shortcut && <Shortcut shortcut={shortcut} />}\n      </button>\n    </li>\n  );\n}\n\nexport default DropdownItem;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface Props {\n  placement?: string;\n  labelledBy: string;\n  children?: ReactNode;\n}\n\nfunction DropdownMenu({ placement = \"start\", labelledBy, children }: Props) {\n  return (\n    <ul\n      className={classNames(\"dropdown-menu\", `dropdown-menu-${placement}`)}\n      aria-labelledby={labelledBy}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport default DropdownMenu;\n","import { Dropdown } from \"bootstrap\";\nimport classNames from \"classnames\";\nimport { ReactNode, useRef } from \"react\";\n\ninterface Props {\n  id?: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownToggle({ id, className, children }: Props) {\n  const dropdown = useRef<Dropdown | null>(null);\n\n  function handleRef(element: HTMLButtonElement | null): void {\n    if (element === null) {\n      dropdown.current?.dispose();\n      dropdown.current = null;\n    } else {\n      dropdown.current = new Dropdown(element);\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      ref={handleRef}\n      aria-expanded=\"false\"\n      data-bs-toggle=\"dropdown\"\n      className={classNames(\"btn\", \"btn-link\", \"dropdown-toggle\", className)}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default DropdownToggle;\n","import CodeMirror from \"codemirror\";\nimport { MutableRefObject, useEffect, useRef } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/xml-hint\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchtags\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/theme/nord.css\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"./Editor.css\";\n\ninterface Props {\n  language: \"css\" | \"xml\";\n  value: string;\n  schema?: any;\n  onChange?: (value: string) => void;\n}\n\nfunction completeAfter(cm: CodeMirror.Editor, pred?: () => boolean) {\n  if (pred?.())\n    setTimeout(() => {\n      if (!cm.state.completionActive) cm.showHint({ completeSingle: false });\n    }, 100);\n  return CodeMirror.Pass;\n}\n\nfunction completeIfAfterLt(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const cur = cm.getCursor();\n    return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === \"<\";\n  });\n}\n\nfunction completeIfInTag(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const tok = cm.getTokenAt(cm.getCursor());\n    if (\n      tok.type === \"string\" &&\n      (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)\n    )\n      return false;\n    const inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n    return inner.tagName;\n  });\n}\n\nfunction Editor({ language, value, schema, onChange }: Props) {\n  const onChangeRef = useRef(onChange);\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const editor = useRef<CodeMirror.Editor>(null) as MutableRefObject<CodeMirror.Editor>;\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    const mode = language === \"xml\" ? \"xml\" : \"text/x-scss\";\n    const hintOptions = { schemaInfo: schema } as any;\n    const codeMirror = CodeMirror.fromTextArea(ref.current!, {\n      mode,\n      lineNumbers: true,\n      theme: \"nord\",\n      matchTags: true,\n      autocorrect: true,\n      tabSize: 2,\n      extraKeys: {\n        \"'<'\": completeAfter,\n        \"'/'\": completeIfAfterLt,\n        \"' '\": completeIfInTag,\n        \"'='\": completeIfInTag,\n        \"Ctrl-Space\": \"autocomplete\",\n        \"Ctrl-/\": \"toggleComment\",\n      },\n      hintOptions,\n    });\n    editor.current = codeMirror;\n\n    return () => {\n      codeMirror.toTextArea();\n    };\n  }, [language, schema]);\n\n  useEffect(() => {\n    if (editor.current!.getValue() !== value) {\n      editor.current!.setValue(value);\n    }\n\n    function handleChange() {\n      const newValue = editor.current!.getValue();\n      if (newValue !== value) {\n        onChangeRef.current?.(newValue);\n      }\n    }\n\n    editor.current!.on(\"change\", handleChange);\n    return () => {\n      editor.current!.off(\"change\", handleChange);\n    };\n  }, [value]);\n\n  return <textarea ref={ref} defaultValue={value} />;\n}\n\nexport default Editor;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  href: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction ExternalLink({ href, className, children }: Props) {\n  return (\n    <a href={href} className={className} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  );\n}\n\nexport default ExternalLink;\n","import classNames from \"classnames\";\nimport \"./Flag.css\";\n\ninterface Props {\n  country: string;\n}\n\nfunction Flag({ country }: Props) {\n  return <span className={classNames(\"Flag me-2\", country)} />;\n}\n\nexport default Flag;\n","import iconUrl from \"bootstrap-icons/bootstrap-icons.svg\";\nimport { Color } from \"../../css\";\nimport \"./Icon.css\";\n\ninterface Props {\n  name: string;\n  color?: Color;\n  size?: number;\n}\n\nfunction Icon({ name, color = Color.DARK, size = 20 }: Props) {\n  return (\n    <svg className=\"Icon me-2\" width={size} height={size} fill={color.toHexString()}>\n      <use xlinkHref={`${iconUrl}#${name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/logo.4da087a9.png\";","import { ReactNode } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport ContainerFluid from \"./ContainerFluid\";\nimport logo from \"./logo.png\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction MenuBar({ children }: Props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ gridArea: \"menu\" }}>\n      <ContainerFluid>\n        <span className=\"navbar-brand\">\n          <img alt=\"Logo\" src={logo} height={32} width={32} className=\"d-inline-block align-top\" />{\" \"}\n          <FormattedMessage id=\"title\" defaultMessage=\"UML Editor\" />\n        </span>\n        <ul className=\"navbar-nav me-auto d-flex flex-grow-1\">{children}</ul>\n      </ContainerFluid>\n    </nav>\n  );\n}\n\nexport default MenuBar;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface Props {\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction NavItem({ className, children }: Props) {\n  return <li className={classNames(\"nav-item\", className)}>{children}</li>;\n}\n\nexport default NavItem;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { useId } from \"../../hooks\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport DropdownToggle from \"./DropdownToggle\";\nimport NavItem from \"./NavItem\";\n\ninterface Props {\n  active?: boolean;\n  placement?: string;\n  title: ReactNode;\n  children?: ReactNode;\n}\n\nfunction Menu({ active = false, placement, title, children }: Props) {\n  const id = useId(\"Menu\");\n\n  return (\n    <NavItem className=\"dropdown\">\n      <DropdownToggle id={id} className={classNames(\"nav-link\", { active })}>\n        {title}\n      </DropdownToggle>\n      <DropdownMenu placement={placement} labelledBy={id}>\n        {children}\n      </DropdownMenu>\n    </NavItem>\n  );\n}\n\nexport default Menu;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Element, Relationship } from \"../../model\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onDeleteElement: Dispatch<Element>;\n}\n\nfunction DeleteElement({ file, onDeleteElement }: Props) {\n  function handleClick(): void {\n    for (const element of file.model) {\n      if (element.isSelected()) {\n        onDeleteElement(element);\n      } else if (element instanceof Relationship) {\n        if (element.to.isSelected() || element.from.isSelected()) {\n          onDeleteElement(element);\n        }\n      }\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Delete\">\n      <Icon name=\"file-x\" /> <FormattedMessage id=\"edit.delete\" defaultMessage=\"Delete\" />\n    </DropdownItem>\n  );\n}\n\nexport default DeleteElement;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Element } from \"../../model\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onAddElement: Dispatch<Element>;\n}\n\nfunction DuplicateElement({ file, onAddElement }: Props) {\n  function handleClick(): void {\n    const elementsToDuplicate = new Set<Element>();\n    for (const element of file.model) {\n      if (element.isSelected()) {\n        elementsToDuplicate.add(element);\n        element.setSelected(false);\n      }\n    }\n\n    for (const element of elementsToDuplicate) {\n      const clone = element.clone();\n      clone.setSelected(true);\n      for (const child of element.getChildren()) {\n        const childClone = child.clone();\n        clone.addChild(childClone);\n      }\n      onAddElement(clone);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-D\">\n      <Icon name=\"files\" /> <FormattedMessage id=\"edit.duplicate\" defaultMessage=\"Duplicate\" />\n    </DropdownItem>\n  );\n}\n\nexport default DuplicateElement;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../../constants\";\nimport { SerializableFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileNew({ onFileChange }: Props) {\n  const intl = useIntl();\n\n  function handleClick() {\n    const untitled = intl.formatMessage({ id: \"untitled\", defaultMessage: \"Untitled\" });\n    const message = intl.formatMessage({\n      id: \"file.new.message\",\n      defaultMessage: \"Choose a title for the new document\",\n    });\n    const title = window.prompt(message, untitled);\n    if (title !== null) {\n      onFileChange({\n        title,\n        css: INITIAL_CSS,\n        xml: INITIAL_XML,\n      });\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"file-earmark-plus\" /> <FormattedMessage id=\"file.new\" defaultMessage=\"New ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileNew;\n","import { MouseEvent } from \"react\";\nimport { Style } from \"./css\";\nimport { Diagram } from \"./model\";\n\nexport interface Coordinates {\n  readonly x: number;\n  readonly y: number;\n}\n\nexport interface Consumer<T> {\n  (item: T): void;\n}\n\nexport interface Predicate<T> {\n  (item: T): boolean;\n}\n\nexport interface SerializableFile {\n  title: string;\n  xml: string;\n  css: string;\n}\n\nexport interface File extends SerializableFile {\n  model: Diagram;\n  style: Style;\n}\n\nexport interface ViewOptions {\n  grid: boolean;\n}\n\nexport function getMouseCoordinates(event: MouseEvent<HTMLCanvasElement>): Coordinates {\n  const { clientX, clientY } = event;\n  const boundingClientRect = event.currentTarget.getBoundingClientRect();\n\n  const x = clientX - boundingClientRect.x - boundingClientRect.width / 2;\n  const y = clientY - boundingClientRect.y - boundingClientRect.height / 2;\n\n  return { x, y };\n}\n\nexport function subtractCoords(vec1: Coordinates, vec2: Coordinates): Coordinates {\n  const x = vec1.x - vec2.x;\n  const y = vec1.y - vec2.y;\n  return { x, y };\n}\n\nexport function roundCoordsBy(coord: Coordinates, by: number): Coordinates {\n  return {\n    x: Math.round(coord.x / by) * by,\n    y: Math.round(coord.y / by) * by,\n  };\n}\n\nexport function sanitizeFilename(element: string): string {\n  return element.replace(/[^a-zA-Z_-]+/g, \"-\");\n}\n\nexport function downloadFile(filename: string, dataURL: string): void {\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename;\n  downloadLink.href = dataURL;\n  downloadLink.click();\n}\n\nexport function uploadFile(pattern: string): Promise<string> {\n  return new Promise<string>((resolve) => {\n    const uploadInput = document.createElement(\"input\");\n\n    uploadInput.addEventListener(\n      \"change\",\n      () => {\n        if (uploadInput.files!.length > 0) {\n          resolve(uploadInput.files!.item(0)!.text());\n        }\n      },\n      { once: true },\n    );\n\n    uploadInput.type = \"file\";\n    uploadInput.accept = pattern;\n    uploadInput.multiple = false;\n    uploadInput.click();\n  });\n}\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { fileSerializer } from \"../../serializer\";\nimport { SerializableFile, uploadFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileOpen({ onFileChange }: Props) {\n  function handleClick() {\n    uploadFile(\".uml\").then((content) => {\n      const file = fileSerializer.loadFromString(content);\n      onFileChange(file);\n    });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-O\">\n      <Icon name=\"folder\" /> <FormattedMessage id=\"file.open\" defaultMessage=\"Open ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileOpen;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onTitleChange: Dispatch<string>;\n}\n\nfunction FileRename({ file, onTitleChange }: Props) {\n  const intl = useIntl();\n\n  function handleClick(): void {\n    const message = intl.formatMessage({\n      id: \"file.rename.message\",\n      defaultMessage: \"New document title\",\n    });\n    const newTitle = window.prompt(message, file.title);\n    if (newTitle !== null) {\n      onTitleChange(newTitle);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"pencil\" />{\" \"}\n      <FormattedMessage\n        id=\"file.rename\"\n        defaultMessage='Rename \"{title}\" ...'\n        values={{ title: file.title }}\n      />\n    </DropdownItem>\n  );\n}\n\nexport default FileRename;\n","import { FormattedMessage } from \"react-intl\";\nimport { fileSerializer } from \"../../serializer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction FileSave({ file }: Props) {\n  function handleClick() {\n    const content = btoa(fileSerializer.saveToString(file));\n    const url = new URL(`data:text/x-uml;base64,${content}`);\n\n    downloadFile(`${sanitizeFilename(file.title)}.uml`, url.toString());\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-S\">\n      <Icon name=\"cloud-download\" /> <FormattedMessage id=\"file.save\" defaultMessage=\"Save ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileSave;\n","import { Dispatch } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { DropdownItem, Flag } from \"../blocks\";\n\ninterface Props {\n  locale: string;\n  name: string;\n  country?: string;\n  onLocaleChange: Dispatch<string>;\n}\n\nfunction LocaleItem({ locale, name, country = locale, onLocaleChange }: Props) {\n  const intl = useIntl();\n\n  return (\n    <DropdownItem active={intl.locale === locale} onClick={() => onLocaleChange(locale)}>\n      <Flag country={country} /> {name}\n    </DropdownItem>\n  );\n}\n\nexport default LocaleItem;\n","import { Color } from \"../css\";\nimport { Classifier, ClassifierRenderer, Renderer, Shape } from \"../model\";\nimport { PADDING } from \"../constants\";\nimport Canvas from \"./Canvas\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasClassifierRenderer implements ClassifierRenderer {\n  private readonly renderer: Renderer;\n  private readonly context: RenderContext;\n  private readonly canvas: Canvas;\n\n  constructor(renderer: Renderer, context: RenderContext, canvas: Canvas) {\n    this.renderer = renderer;\n    this.context = context;\n    this.canvas = canvas;\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.context.push(\n      classifier.getTagName(),\n      classifier.getWidth() - 2 * PADDING,\n      classifier.getHeight() - 2 * PADDING,\n    );\n\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.applyStyle(classifier);\n    this.drawShape(classifier);\n    this.canvas.fill();\n    this.canvas.stroke();\n    this.canvas.clip();\n\n    this.canvas.translate(PADDING, PADDING);\n    for (const child of classifier.getChildren()) {\n      child.render(this.renderer);\n    }\n\n    this.canvas.restore();\n\n    this.context.pop();\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.drawShape(classifier);\n    const result = this.canvas.isPointInPath(x, y);\n    this.canvas.restore();\n\n    return result;\n  }\n\n  private applyStyle(classifier: Classifier): void {\n    const properties = this.context.getStyleProperties();\n    this.canvas.lineWidth = properties.getFloat(\"line-width\", 1.5);\n    this.canvas.strokeColor = properties.getColor(\"stroke\", Color.DARK);\n    let fill = properties.getColor(\"fill\", Color.WHITE);\n    if (classifier.isHovered()) {\n      fill = fill.mix(Color.INFO, 0.25);\n    }\n    this.canvas.fillColor = fill;\n  }\n\n  private drawShape(classifier: Classifier): void {\n    this.canvas.beginPath();\n    switch (classifier.shape) {\n      case Shape.RECTANGLE:\n        this.drawRectangleShape(classifier);\n        return;\n      case Shape.ELLIPSE:\n        this.drawEllipseShape(classifier);\n        return;\n      case Shape.FOLDER:\n        this.drawFolderShape(classifier);\n        return;\n      case Shape.NOTE:\n        this.drawNoteShape(classifier);\n        return;\n      case Shape.BOX:\n        this.drawBoxShape(classifier);\n        return;\n      case Shape.FILE:\n        this.drawFileShape(classifier);\n        return;\n      case Shape.COMPONENT:\n        this.drawComponentShape(classifier);\n        return;\n    }\n  }\n\n  private drawBoxShape(classifier: Classifier) {\n    const BOX_DEPTH = 20;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.rect(0, 0, w, h);\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(w, 0);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.lineTo(BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w, 0);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w + BOX_DEPTH, h - BOX_DEPTH);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n  }\n\n  private drawRectangleShape(classifier: Classifier) {\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawEllipseShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.ellipse(0, 0, w, h);\n  }\n\n  private drawFolderShape(classifier: Classifier) {\n    const FOLDER_WIDTH = 80;\n    const FOLDER_HEIGHT = 20;\n    this.canvas.rect(0, -FOLDER_HEIGHT, FOLDER_WIDTH, FOLDER_HEIGHT);\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawNoteShape(classifier: Classifier) {\n    const NOTE_SIZE = 30;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w - NOTE_SIZE, h - NOTE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawFileShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const FILE_SIZE = 30;\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(FILE_SIZE, FILE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawComponentShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const COMPONENT_WIDTH = 40;\n    const COMPONENT_HEIGHT = 20;\n    const COMPONENT_Y = (h - COMPONENT_HEIGHT * 3) / 2;\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.rect(COMPONENT_WIDTH / -2, COMPONENT_Y, COMPONENT_WIDTH, COMPONENT_HEIGHT);\n    this.canvas.rect(\n      COMPONENT_WIDTH / -2,\n      COMPONENT_Y + 2 * COMPONENT_HEIGHT,\n      COMPONENT_WIDTH,\n      COMPONENT_HEIGHT,\n    );\n  }\n}\n\nexport default CanvasClassifierRenderer;\n","import { Color } from \"../css\";\nimport { LinePattern, Relationship, RelationshipRenderer, Tip } from \"../model\";\nimport Canvas from \"./Canvas\";\n\nclass CanvasRelationshipRenderer implements RelationshipRenderer {\n  private readonly canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(relationship.getX1(), relationship.getY1());\n    this.canvas.lineTo(relationship.getX2(), relationship.getY2());\n    this.applyRelationshipStyle(relationship);\n    this.canvas.stroke();\n    this.drawFromTip(relationship);\n    this.drawToTip(relationship);\n    this.canvas.restore();\n  }\n\n  private applyRelationshipStyle(relationship: Relationship): void {\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeColor = Color.DARK;\n    this.canvas.fillColor = Color.WHITE;\n    switch (relationship.linePattern) {\n      case LinePattern.SOLID:\n        this.canvas.setLineDash([]);\n        break;\n      case LinePattern.DOTS:\n        this.canvas.setLineDash([2, 2]);\n        break;\n      case LinePattern.SMALL_DASHES:\n        this.canvas.setLineDash([5, 5]);\n        break;\n      case LinePattern.LARGE_DASHES:\n        this.canvas.setLineDash([10, 10]);\n        break;\n      case LinePattern.TIGHT_DASHES:\n        this.canvas.setLineDash([15, 5]);\n        break;\n    }\n  }\n\n  private drawFromTip(relationship: Relationship): void {\n    if (relationship.fromTip !== Tip.NONE) {\n      this.canvas.setLineDash([]);\n      this.canvas.save();\n      this.canvas.translate(relationship.getX1(), relationship.getY1());\n      this.canvas.rotate(relationship.getAngle() + Math.PI);\n      this.drawTip(relationship.fromTip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawToTip(relationship: Relationship): void {\n    if (relationship.toTip !== Tip.NONE) {\n      this.canvas.setLineDash([]);\n      this.canvas.save();\n      this.canvas.translate(relationship.getX2(), relationship.getY2());\n      this.canvas.rotate(relationship.getAngle());\n      this.drawTip(relationship.toTip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawTip(tip: Tip): void {\n    switch (tip) {\n      case Tip.ARROW:\n        this.drawArrow();\n        break;\n      case Tip.TRIANGLE:\n        this.drawTriangle();\n        break;\n      case Tip.FILLED_TRIANGLE:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawTriangle();\n        break;\n      case Tip.DIAMOND:\n        this.drawDiamond();\n        break;\n      case Tip.FILLED_DIAMOND:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawDiamond();\n        break;\n      case Tip.CIRCLE:\n        this.drawCircle();\n        break;\n      case Tip.FILLED_CIRCLE:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawCircle();\n        break;\n    }\n  }\n\n  private drawArrow() {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 8);\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, -8);\n    this.canvas.closePath();\n    this.canvas.stroke();\n  }\n\n  private drawTriangle(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 10);\n    this.canvas.lineTo(-20, -10);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawDiamond(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-15, 8);\n    this.canvas.lineTo(-30, 0);\n    this.canvas.lineTo(-15, -8);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawCircle(): void {\n    this.canvas.beginPath();\n    this.canvas.ellipse(-20, -10, 20, 20);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n}\n\nexport default CanvasRelationshipRenderer;\n","import { Anchor } from \"../model\";\n\nclass Handle {\n  readonly x: number;\n  readonly y: number;\n  readonly anchor: Anchor;\n\n  constructor(x: number, y: number, anchor: Anchor) {\n    this.x = x;\n    this.y = y;\n    this.anchor = anchor;\n  }\n}\n\nexport default Handle;\n","import { Color } from \"../css\";\nimport Canvas from \"./Canvas\";\n\nclass HTML5Canvas implements Canvas {\n  private readonly ctx: CanvasRenderingContext2D;\n\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx;\n  }\n\n  get fillColor(): Color {\n    return Color.fromHexString(String(this.ctx.fillStyle));\n  }\n\n  set fillColor(color: Color) {\n    this.ctx.fillStyle = color.toHexString();\n  }\n\n  get strokeColor(): Color {\n    return Color.fromHexString(String(this.ctx.strokeStyle));\n  }\n\n  set strokeColor(color: Color) {\n    this.ctx.strokeStyle = color.toHexString();\n  }\n\n  get lineWidth(): number {\n    return this.ctx.lineWidth;\n  }\n\n  set lineWidth(width: number) {\n    this.ctx.lineWidth = width;\n  }\n\n  get fontStyle(): string {\n    return this.getFontAttribute(0);\n  }\n\n  set fontStyle(fontStyle: string) {\n    this.updateFontAttribute(0, fontStyle);\n  }\n\n  get fontWeight(): string {\n    return this.getFontAttribute(1);\n  }\n\n  set fontWeight(fontWeight: string) {\n    this.updateFontAttribute(1, fontWeight);\n  }\n\n  get fontSize(): string {\n    return this.getFontAttribute(2);\n  }\n\n  set fontSize(fontSize: string) {\n    this.updateFontAttribute(2, fontSize);\n  }\n\n  get fontFamily(): string {\n    return this.getFontAttribute(3);\n  }\n\n  set fontFamily(fontFamily: string) {\n    this.updateFontAttribute(3, fontFamily);\n  }\n\n  setLineDash(dash: number[]): void {\n    this.ctx.setLineDash(dash);\n  }\n\n  save(): void {\n    this.ctx.save();\n  }\n\n  restore(): void {\n    this.ctx.restore();\n  }\n\n  translate(x: number, y: number): void {\n    this.ctx.translate(x, y);\n  }\n\n  rotate(angle: number): void {\n    this.ctx.rotate(angle);\n  }\n\n  beginPath(): void {\n    this.ctx.beginPath();\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    this.ctx.rect(x, y, width, height);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number): void {\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    this.ctx.ellipse(x + radiusX, y + radiusY, radiusX, radiusY, 0, 0, Math.PI * 2);\n  }\n\n  moveTo(x: number, y: number): void {\n    this.ctx.moveTo(x, y);\n  }\n\n  lineTo(x: number, y: number): void {\n    this.ctx.lineTo(x, y);\n  }\n\n  isPointInPath(x: number, y: number): boolean {\n    return this.ctx.isPointInPath(x, y);\n  }\n\n  closePath(): void {\n    this.ctx.closePath();\n  }\n\n  fill(): void {\n    this.ctx.fill();\n  }\n\n  stroke(): void {\n    this.ctx.stroke();\n  }\n\n  clip(): void {\n    this.ctx.clip();\n  }\n\n  fillText(text: string, anchor: \"start\" | \"middle\" | \"end\", x: number, y: number): void {\n    const metrics = this.ctx.measureText(text);\n    const anchorY = y + metrics.fontBoundingBoxAscent;\n    let anchorX = x;\n    if (anchor === \"middle\") {\n      anchorX = anchorX + metrics.width / 2;\n    } else if (anchor === \"end\") {\n      anchorX = anchorX + metrics.width;\n    }\n    this.ctx.fillText(text, anchorX, anchorY);\n  }\n\n  private getFontAttribute(index: number): string {\n    return this.ctx.font.split(\" \", 4)[index];\n  }\n\n  private updateFontAttribute(index: number, value: string): void {\n    const attrs = this.ctx.font.split(\" \", 4);\n    attrs[index] = value;\n    this.ctx.font = attrs.join(\" \");\n  }\n}\n\nexport default HTML5Canvas;\n","import { PropertyMap, Style } from \"../css\";\n\nclass RenderContext {\n  private readonly width: number[];\n  private readonly height: number[];\n  private readonly context: string[];\n  private readonly style: Style;\n\n  constructor(canvasWidth: number, canvasHeight: number, style: Style) {\n    this.width = [canvasWidth];\n    this.height = [canvasHeight];\n    this.context = [];\n    this.style = style;\n  }\n\n  push(name: string, width?: number, height?: number): void {\n    this.context.unshift(name);\n    this.width.unshift(width ?? this.getWidth());\n    this.height.unshift(height ?? this.getHeight());\n  }\n\n  pop(): void {\n    this.context.shift();\n    this.width.shift();\n    this.height.shift();\n  }\n\n  getName(): string {\n    return this.context[0];\n  }\n\n  getWidth(): number {\n    return this.width[0];\n  }\n\n  getHeight(): number {\n    return this.height[0];\n  }\n\n  getStyleProperties(): PropertyMap {\n    return this.style.getProperties([...this.context].reverse());\n  }\n}\n\nexport default RenderContext;\n","import { GRID, HANDLE_RADIUS, PADDING } from \"../constants\";\nimport { Color, Style } from \"../css\";\nimport {\n  Anchor,\n  Classifier,\n  Diagram,\n  Relationship,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasOptions from \"./CanvasOptions\";\nimport CanvasRelationshipRenderer from \"./CanvasRelationshipRenderer\";\nimport Handle from \"./Handle\";\nimport HTML5Canvas from \"./HTML5Canvas\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n  private readonly classifierRenderer: CanvasClassifierRenderer;\n  private readonly relationshipRenderer: CanvasRelationshipRenderer;\n  private readonly translateX: number;\n  private readonly translateY: number;\n\n  constructor(canvas: HTMLCanvasElement, style: Style, options: CanvasOptions) {\n    this.context = new RenderContext(canvas.width, canvas.height, style);\n    this.translateX = options.translateX;\n    this.translateY = options.translateY;\n    this.canvas = canvas.getContext(\"2d\")!;\n    const html5Canvas = new HTML5Canvas(this.canvas);\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, html5Canvas);\n    this.relationshipRenderer = new CanvasRelationshipRenderer(html5Canvas);\n  }\n\n  clear(): void {\n    this.canvas.clearRect(0, 0, this.context.getWidth(), this.context.getHeight());\n  }\n\n  renderGrid(): void {\n    const minX = -Math.floor(this.translateX / GRID) * GRID;\n    const maxX = Math.floor(this.context.getWidth() - this.translateX / GRID) * GRID;\n    const minY = -Math.floor(this.translateY / GRID) * GRID;\n    const maxY = Math.floor(this.context.getHeight() - this.translateY / GRID) * GRID;\n\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    this.canvas.beginPath();\n    this.canvas.strokeStyle = \"#00000033\";\n    for (let x = minX; x < maxX; x += GRID) {\n      this.canvas.moveTo(x, -this.translateY);\n      this.canvas.lineTo(x, this.context.getHeight() - this.translateY);\n    }\n    for (let y = minY; y < maxY; y += GRID) {\n      this.canvas.moveTo(-this.translateX, y);\n      this.canvas.lineTo(this.context.getWidth() - this.translateX, y);\n    }\n    this.canvas.stroke();\n    this.canvas.restore();\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n    this.renderHandles(diagram);\n    this.canvas.restore();\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.relationshipRenderer.renderRelationship(relationship);\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"14pt\", \"left\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"14pt\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.stroke();\n    this.canvas.restore();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"12pt\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  private drawText(text: string, size: string, align: \"left\" | \"center\") {\n    const properties = this.context.getStyleProperties();\n    const weight = properties.getString(\"font-weight\", \"normal\");\n    const style = properties.getString(\"font-style\", \"normal\");\n    const family = properties.getString(\"font-family\", \"Arial, Helvetica, system-ui, sans-serif\");\n\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.font = `${style} ${weight} ${size} ${family}`;\n    this.canvas.fillStyle = properties.getColor(\"color\", Color.DARK).toHexString();\n    const metrics = this.canvas.measureText(text);\n    const x = align === \"center\" ? (this.context.getWidth() - metrics.width) / 2 : 0;\n    this.canvas.fillText(text, x, metrics.fontBoundingBoxAscent);\n    this.canvas.restore();\n  }\n\n  private renderHandles(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.fillStyle = \"white\";\n    this.canvas.strokeStyle = \"black\";\n    this.canvas.lineWidth = 1;\n\n    for (const { x, y } of this.getHandles(diagram)) {\n      this.renderHandleAtPoint(x, y);\n    }\n\n    this.canvas.restore();\n  }\n\n  private *getHandles(diagram: Diagram): Generator<Handle> {\n    for (const child of diagram.getChildren()) {\n      if (child instanceof Classifier && child.isSelected()) {\n        yield* this.getClassifierHandles(child);\n      }\n    }\n  }\n\n  private renderHandleAtPoint(x: number, y: number): void {\n    this.canvas.beginPath();\n    this.canvas.rect(x - HANDLE_RADIUS, y - HANDLE_RADIUS, HANDLE_RADIUS * 2, HANDLE_RADIUS * 2);\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  findHandleForPoint(diagram: Diagram, x: number, y: number): Handle | undefined {\n    for (const handle of this.getHandles(diagram)) {\n      if (this.isPointInHandle(handle, x, y)) {\n        return handle;\n      }\n    }\n    return undefined;\n  }\n\n  private isPointInHandle(handle: Handle, x: number, y: number): boolean {\n    return Math.abs(x - handle.x) <= HANDLE_RADIUS && Math.abs(y - handle.y) <= HANDLE_RADIUS;\n  }\n\n  private *getClassifierHandles(classifier: Classifier): Generator<Handle> {\n    const x1 = classifier.getLeft();\n    const x2 = classifier.getRight();\n    const y1 = classifier.getTop();\n    const y2 = classifier.getBottom();\n\n    yield new Handle(x1, y1, Anchor.NW);\n    yield new Handle(classifier.getCenterX(), y1, Anchor.N);\n    yield new Handle(x2, y1, Anchor.NE);\n    yield new Handle(x1, classifier.getCenterY(), Anchor.W);\n    yield new Handle(x2, classifier.getCenterY(), Anchor.E);\n    yield new Handle(x1, y2, Anchor.SW);\n    yield new Handle(classifier.getCenterX(), y2, Anchor.S);\n    yield new Handle(x2, y2, Anchor.SE);\n  }\n}\n\nexport default CanvasRenderer;\n","import { Color } from \"../css\";\nimport Canvas from \"./Canvas\";\n\nclass SVGCanvas implements Canvas {\n  fillColor = Color.WHITE;\n  strokeColor = Color.DARK;\n  lineWidth = 1;\n  fontFamily = \"system-ui\";\n  fontSize = \"1rem\";\n  fontStyle = \"normal\";\n  fontWeight = \"normal\";\n  private readonly document: Document;\n  private readonly stack: SVGElement[];\n  private readonly paths: SVGElement[] = [];\n  private readonly saved: SVGElement[] = [];\n  private path?: SVGPathElement;\n  private dash: number[] = [];\n\n  constructor(container: SVGElement) {\n    this.document = container.ownerDocument;\n    this.stack = [container];\n  }\n\n  setLineDash(dash: number[]): void {\n    this.dash = dash;\n  }\n\n  save(): void {\n    this.saved.push(this.getContainer());\n  }\n\n  restore(): void {\n    const saved = this.saved.pop()!;\n    this.stack.splice(this.stack.indexOf(saved) + 1);\n  }\n\n  translate(x: number, y: number): void {\n    const svg = this.createSVG(\"g\");\n    svg.setAttribute(\"transform\", `translate(${x},${y})`);\n    this.getContainer().append(svg);\n\n    this.stack.push(svg);\n  }\n\n  rotate(angle: number): void {\n    const svg = this.createSVG(\"g\");\n    svg.setAttribute(\"transform\", `rotate(${this.radiansToDegrees(angle)})`);\n    this.getContainer().append(svg);\n\n    this.stack.push(svg);\n  }\n\n  beginPath(): void {\n    this.paths.splice(0);\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    const rect = this.createSVG(\"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"height\", String(height));\n    this.paths.push(rect);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number): void {\n    const ellipse = this.createSVG(\"ellipse\");\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    ellipse.setAttribute(\"cx\", String(x + radiusX));\n    ellipse.setAttribute(\"cy\", String(y + radiusY));\n    ellipse.setAttribute(\"rx\", String(radiusX));\n    ellipse.setAttribute(\"ry\", String(radiusY));\n    this.paths.push(ellipse);\n  }\n\n  moveTo(x: number, y: number): void {\n    this.path = this.createSVG(\"path\");\n    this.path.setAttribute(\"d\", `M${x},${y}`);\n    this.paths.push(this.path);\n  }\n\n  lineTo(x: number, y: number): void {\n    const data = this.path!.getAttribute(\"d\");\n    this.path!.setAttribute(\"d\", `${data} L${x},${y}`);\n  }\n\n  closePath(): void {\n    const data = this.path!.getAttribute(\"d\");\n    this.path!.setAttribute(\"d\", `${data} Z`);\n  }\n\n  isPointInPath(x: number, y: number): boolean {\n    return false;\n  }\n\n  fill(): void {\n    this.appendPaths();\n    for (const path of this.paths) {\n      path.setAttribute(\"fill\", this.fillColor.toHexString());\n    }\n  }\n\n  stroke(): void {\n    this.appendPaths();\n    for (const path of this.paths) {\n      path.setAttribute(\"stroke\", this.strokeColor.toHexString());\n      path.setAttribute(\"stroke-width\", String(this.lineWidth));\n      path.setAttribute(\"stroke-dasharray\", this.dash.join(\" \"));\n    }\n  }\n\n  clip(): void {}\n\n  fillText(text: string, anchor: \"start\" | \"middle\" | \"end\", x: number, y: number): void {\n    const textEl = this.createSVG(\"text\");\n    textEl.setAttribute(\"x\", String(x));\n    textEl.setAttribute(\"y\", String(y + 10));\n    textEl.setAttribute(\"text-anchor\", anchor);\n    textEl.setAttribute(\"font-family\", this.fontFamily);\n    textEl.setAttribute(\"font-size\", this.fontSize);\n    textEl.setAttribute(\"font-style\", this.fontStyle);\n    textEl.setAttribute(\"font-weight\", this.fontWeight);\n    textEl.appendChild(this.document.createTextNode(this.encodeUTF8(text)));\n    this.paths.push(textEl);\n    this.fill();\n  }\n\n  private encodeUTF8(text: string): string {\n    const textEncoder = new TextEncoder();\n    const encoded = textEncoder.encode(text);\n    return String.fromCharCode(...encoded);\n  }\n\n  private appendPaths(): void {\n    this.getContainer().append(...this.paths);\n  }\n\n  private getContainer(): SVGElement {\n    return this.stack[this.stack.length - 1];\n  }\n\n  private createSVG<K extends keyof SVGElementTagNameMap>(element: K): SVGElementTagNameMap[K] {\n    return this.document.createElementNS(\"http://www.w3.org/2000/svg\", element);\n  }\n\n  private radiansToDegrees(angle: number): number {\n    return (180 * angle) / Math.PI;\n  }\n}\n\nexport default SVGCanvas;\n","import { PADDING } from \"../constants\";\nimport { Color, Style } from \"../css\";\nimport {\n  Classifier,\n  ClassifierRenderer,\n  Diagram,\n  Relationship,\n  RelationshipRenderer,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasRelationshipRenderer from \"./CanvasRelationshipRenderer\";\nimport RenderContext from \"./RenderContext\";\nimport SVGCanvas from \"./SVGCanvas\";\n\nclass SVGRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: SVGCanvas;\n  private readonly classifierRenderer: ClassifierRenderer;\n  private readonly relationshipRenderer: RelationshipRenderer;\n\n  constructor(svg: SVGSVGElement, style: Style) {\n    this.context = new RenderContext(svg.width.baseVal.value, svg.height.baseVal.value, style);\n    this.canvas = new SVGCanvas(svg);\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, this.canvas);\n    this.relationshipRenderer = new CanvasRelationshipRenderer(this.canvas);\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.relationshipRenderer.renderRelationship(relationship);\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"14pt\", \"start\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"14pt\", \"middle\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"12pt\", \"middle\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeColor = Color.DARK;\n    this.canvas.stroke();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  private drawText(text: string, size: string, align: \"start\" | \"middle\") {\n    const properties = this.context.getStyleProperties();\n    this.canvas.fontWeight = properties.getString(\"font-weight\", \"normal\");\n    this.canvas.fontStyle = properties.getString(\"font-style\", \"normal\");\n    this.canvas.fontSize = properties.getString(\"font-size\", size);\n    this.canvas.fontFamily = properties.getString(\n      \"font-family\",\n      \"Arial, Helvetica, system-ui, sans-serif\",\n    );\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.fillColor = properties.getColor(\"color\", Color.DARK);\n    const x = align === \"middle\" ? this.context.getWidth() / 2 : 0;\n    this.canvas.fillText(text, align, x, 4);\n    this.canvas.restore();\n  }\n}\n\nexport default SVGRenderer;\n","import { FormattedMessage } from \"react-intl\";\nimport { MARGIN } from \"../../constants\";\nimport { CanvasRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction PNGExport({ file }: Props) {\n  function handleClick() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = file.model.getWidth() + 2 * MARGIN;\n    canvas.height = file.model.getHeight() + 2 * MARGIN;\n\n    const renderer = new CanvasRenderer(canvas, file.style, {\n      translateX: MARGIN - file.model.getLeft(),\n      translateY: MARGIN - file.model.getTop(),\n    });\n    renderer.renderDiagram(file.model);\n\n    const dataURL = canvas.toDataURL(\"image/png\");\n    downloadFile(`${sanitizeFilename(file.title)}.png`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-E\">\n      <Icon name=\"image\" /> <FormattedMessage id=\"export.png\" defaultMessage=\"As PNG ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default PNGExport;\n","import { FormattedMessage } from \"react-intl\";\nimport { MARGIN } from \"../../constants\";\nimport { SVGRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction SVGExport({ file }: Props) {\n  function handleClick() {\n    const viewBox = [\n      file.model.getLeft() - MARGIN,\n      file.model.getTop() - MARGIN,\n      file.model.getWidth() + 2 * MARGIN,\n      file.model.getHeight() + 2 * MARGIN,\n    ].join(\" \");\n    const root = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    root.setAttribute(\"width\", String(file.model.getWidth() + 2 * MARGIN));\n    root.setAttribute(\"height\", String(file.model.getHeight() + 2 * MARGIN));\n    root.setAttribute(\"viewBox\", viewBox);\n\n    const renderer = new SVGRenderer(root, file.style);\n    renderer.renderDiagram(file.model);\n\n    const xmlSerializer = new XMLSerializer();\n    const svg = xmlSerializer.serializeToString(root);\n    const dataURL = new URL(`data:image/svg+xml;base64,${btoa(svg)}`).toString();\n    downloadFile(`${sanitizeFilename(file.title)}.svg`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-Shift-E\">\n      <Icon name=\"code-slash\" /> <FormattedMessage id=\"export.svg\" defaultMessage=\"As SVG ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default SVGExport;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ViewOptions } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n}\n\nfunction ToggleGrid({ viewOptions, onViewOptionsChange }: Props) {\n  const { grid } = viewOptions;\n  const icon = grid ? \"grid-3x3-gap-fill\" : \"grid-3x3-gap\";\n\n  function handleClick() {\n    onViewOptionsChange({ ...viewOptions, grid: !grid });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Alt-G\">\n      <Icon name={icon} /> <FormattedMessage id=\"view.grid\" defaultMessage=\"Toggle Grid\" />\n    </DropdownItem>\n  );\n}\n\nexport default ToggleGrid;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Element } from \"../../model\";\nimport { File, SerializableFile, ViewOptions } from \"../../utils\";\nimport { DropdownDivider, ExternalLink, Icon, Menu, MenuBar, NavItem } from \"../blocks\";\nimport DeleteElement from \"./DeleteElement\";\nimport DuplicateElement from \"./DuplicateElement\";\nimport FileNew from \"./FileNew\";\nimport FileOpen from \"./FileOpen\";\nimport FileRename from \"./FileRename\";\nimport FileSave from \"./FileSave\";\nimport LocaleItem from \"./LocaleItem\";\nimport PNGExport from \"./PNGExport\";\nimport SVGExport from \"./SVGExport\";\nimport ToggleGrid from \"./ToggleGrid\";\n\ninterface Props {\n  file: File;\n  viewOptions: ViewOptions;\n  onFileChange: Dispatch<SerializableFile>;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n  onLocaleChange: Dispatch<string>;\n  onAddElement: Dispatch<Element>;\n  onDeleteElement: Dispatch<Element>;\n}\n\nfunction AppMenu({\n  file,\n  viewOptions,\n  onFileChange,\n  onViewOptionsChange,\n  onLocaleChange,\n  onAddElement,\n  onDeleteElement,\n}: Props) {\n  const intl = useIntl();\n\n  return (\n    <MenuBar>\n      <Menu title={intl.formatMessage({ id: \"file\", defaultMessage: \"File\" })}>\n        <FileNew onFileChange={onFileChange} />\n        <DropdownDivider />\n        <FileOpen onFileChange={onFileChange} />\n        <FileSave file={file} />\n        <DropdownDivider />\n        <FileRename file={file} onTitleChange={(title) => onFileChange({ ...file, title })} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"edit\", defaultMessage: \"Edit\" })}>\n        <DuplicateElement file={file} onAddElement={onAddElement} />\n        <DeleteElement file={file} onDeleteElement={onDeleteElement} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"view\", defaultMessage: \"View\" })}>\n        <ToggleGrid viewOptions={viewOptions} onViewOptionsChange={onViewOptionsChange} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"export\", defaultMessage: \"Export\" })}>\n        <PNGExport file={file} />\n        <SVGExport file={file} />\n      </Menu>\n\n      <div className=\"flex-grow-1\" />\n\n      <NavItem>\n        <ExternalLink className=\"nav-link\" href=\"https://github.com/ksm2/uml-editor\">\n          <Icon name=\"github\" />\n          <FormattedMessage id=\"github\" defaultMessage=\"GitHub\" />\n        </ExternalLink>\n      </NavItem>\n      <Menu\n        placement=\"end\"\n        title={\n          <>\n            <Icon name=\"globe\" />\n            <FormattedMessage id=\"lang\" defaultMessage=\"Language\" />\n          </>\n        }\n      >\n        <LocaleItem locale=\"de\" name=\"Deutsch\" onLocaleChange={onLocaleChange} />\n        <LocaleItem locale=\"en\" name=\"English\" onLocaleChange={onLocaleChange} country=\"uk\" />\n      </Menu>\n    </MenuBar>\n  );\n}\n\nexport default AppMenu;\n","import { MouseEvent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { GRID } from \"../../constants\";\nimport { Style } from \"../../css\";\nimport { Anchor, Classifier, Diagram, Element, Rectangle } from \"../../model\";\nimport { CanvasRenderer, Handle } from \"../../renderer\";\nimport {\n  Coordinates,\n  getMouseCoordinates,\n  roundCoordsBy,\n  subtractCoords,\n  ViewOptions,\n} from \"../../utils\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  diagram: Diagram;\n  style: Style;\n  onChange?: (element: Element) => void;\n}\n\nfunction createRenderer(canvas: HTMLCanvasElement, style: Style): CanvasRenderer {\n  return new CanvasRenderer(canvas, style, {\n    translateX: canvas.width / 2,\n    translateY: canvas.height / 2,\n  });\n}\n\nfunction Canvas({ viewOptions, diagram, style, onChange }: Props) {\n  const options = useRef(viewOptions);\n  const div = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const mouseDownCoords = useRef<Coordinates>(null) as MutableRefObject<Coordinates | null>;\n  const mouseDownRectangle = useRef<Rectangle>(null) as MutableRefObject<Rectangle | null>;\n  const mouseDownObject = useRef<Handle | Element>(null) as MutableRefObject<\n    Handle | Element | null\n  >;\n\n  useEffect(() => {\n    options.current = viewOptions;\n  });\n\n  useEffect(() => {\n    function onResize() {\n      const rect = div.current!.getBoundingClientRect();\n      canvas.current!.width = Math.trunc(rect.width);\n      canvas.current!.height = Math.trunc(rect.height);\n\n      const renderer = createRenderer(canvas.current!, style);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [viewOptions, diagram, style]);\n\n  function setCursor(cursor: string): void {\n    canvas.current!.style.cursor = cursor;\n  }\n\n  function handleHandleUpdate(target: Classifier, handle: Handle, deltaX: number, deltaY: number) {\n    if (handle.anchor === Anchor.W || handle.anchor === Anchor.NW || handle.anchor === Anchor.SW) {\n      target.setWidth(mouseDownRectangle.current!.width - deltaX);\n      target.setLeft(mouseDownRectangle.current!.x + deltaX);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.E || handle.anchor === Anchor.NE || handle.anchor === Anchor.SE) {\n      target.setWidth(mouseDownRectangle.current!.width + deltaX);\n      target.setLeft(mouseDownRectangle.current!.x);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.N || handle.anchor === Anchor.NW || handle.anchor === Anchor.NE) {\n      target.setHeight(mouseDownRectangle.current!.height - deltaY);\n      target.setTop(mouseDownRectangle.current!.y + deltaY);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.S || handle.anchor === Anchor.SW || handle.anchor === Anchor.SE) {\n      target.setHeight(mouseDownRectangle.current!.height + deltaY);\n      target.setTop(mouseDownRectangle.current!.y);\n      onChange?.(target);\n    }\n  }\n\n  function handleLeftMouseButtonMove(x: number, y: number) {\n    const target = diagram.find((el) => el.isSelected());\n    if (target instanceof Classifier) {\n      const { x: deltaX, y: deltaY } = roundCoordsBy(\n        subtractCoords({ x, y }, mouseDownCoords.current!),\n        GRID,\n      );\n      if (mouseDownObject.current === target) {\n        target.setLeft(mouseDownRectangle.current!.x + deltaX);\n        target.setTop(mouseDownRectangle.current!.y + deltaY);\n        onChange?.(target);\n        return;\n      }\n      if (mouseDownObject.current instanceof Handle) {\n        handleHandleUpdate(target, mouseDownObject.current, deltaX, deltaY);\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    if (event.buttons & 1) {\n      handleLeftMouseButtonMove(x, y);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n      return;\n    }\n\n    for (const element of diagram) {\n      element.setHovered(false);\n    }\n\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined) {\n      setCursor(`${Anchor[handle.anchor].toLowerCase()}-resize`);\n    } else {\n      setCursor(\"default\");\n\n      for (const classifier of diagram) {\n        if (classifier instanceof Classifier) {\n          const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n          if (isInClassifier) {\n            classifier.setHovered(true);\n            break;\n          }\n        }\n      }\n    }\n\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function renderMouseDown(renderer: CanvasRenderer, x: number, y: number) {\n    const selectedElement = diagram.find((el) => el.isSelected());\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined && selectedElement instanceof Classifier) {\n      mouseDownRectangle.current = selectedElement.getRectangle();\n      mouseDownCoords.current = { x, y };\n      mouseDownObject.current = handle;\n      return;\n    }\n\n    selectedElement?.setSelected(false);\n    for (const classifier of diagram) {\n      if (classifier instanceof Classifier) {\n        const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n        if (isInClassifier) {\n          classifier.setSelected(true);\n          mouseDownRectangle.current = classifier.getRectangle();\n          mouseDownCoords.current = { x, y };\n          mouseDownObject.current = classifier;\n          return;\n        }\n      }\n    }\n  }\n\n  function handleMouseDown(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    renderMouseDown(renderer, x, y);\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function handleMouseUp() {\n    mouseDownRectangle.current = null;\n    mouseDownCoords.current = null;\n    mouseDownObject.current = null;\n  }\n\n  return (\n    <div\n      ref={div}\n      className=\"Canvas\"\n      style={{\n        backgroundColor: \"hsl(220 9% 92% / 1)\",\n        gridArea: \"canvas\",\n      }}\n    >\n      <canvas\n        ref={canvas}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </div>\n  );\n}\n\nexport default Canvas;\n","import { Editor } from \"../blocks\";\n\ninterface Props {\n  css: string;\n  onChange?: (css: string) => void;\n}\n\nfunction CSSEditor({ css, onChange }: Props) {\n  return (\n    <div className=\"CSSEditor\" style={{ gridArea: \"css\", position: \"relative\" }}>\n      <Editor language=\"css\" value={css} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default CSSEditor;\n","import { MessageFormatElement } from \"intl-messageformat-parser\";\nimport React, { Dispatch, ReactNode, useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport DE_MESSAGES from \"../../i18n/de.json\";\nimport EN_MESSAGES from \"../../i18n/en.json\";\n\ninterface Props {\n  children?: (onLocaleChange: Dispatch<string>) => ReactNode;\n}\n\nfunction getMessagesForLocale(locale: string): Record<string, MessageFormatElement[]> {\n  switch (locale) {\n    case \"de\":\n      return DE_MESSAGES;\n    default:\n      return EN_MESSAGES;\n  }\n}\n\nfunction LocaleSwitch({ children }: Props) {\n  const [locale, setLocale] = useState(navigator.language.substring(0, 2));\n\n  return (\n    <IntlProvider messages={getMessagesForLocale(locale)} locale={locale} defaultLocale=\"en\">\n      {children?.(setLocale)}\n    </IntlProvider>\n  );\n}\n\nexport default LocaleSwitch;\n","import { Anchor, LinePattern, Shape, Tip } from \"../../model\";\n\nconst anchorSchema = Object.keys(Anchor)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst shapeSchema = Object.keys(Shape)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst tipSchema = Object.keys(Tip)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst linePatternSchema = Object.keys(LinePattern)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst classifierSchema = {\n  children: [\"Title\", \"Separator\", \"Method\", \"Stereotype\"],\n  attrs: {\n    x: null,\n    y: null,\n    width: null,\n    height: null,\n    anchor: anchorSchema,\n    shape: shapeSchema,\n  },\n};\n\nconst relationshipSchema = {\n  attrs: {\n    from: null,\n    fromTip: tipSchema,\n    to: null,\n    toTip: tipSchema,\n    linePattern: linePatternSchema,\n  },\n};\n\nconst classifiers = {\n  Class: classifierSchema,\n  Classifier: classifierSchema,\n  Component: classifierSchema,\n  DataType: classifierSchema,\n  Enumeration: classifierSchema,\n  Interface: classifierSchema,\n  Note: classifierSchema,\n  Object: classifierSchema,\n  Package: classifierSchema,\n  Primitive: classifierSchema,\n};\n\nconst relationships = {\n  Aggregation: relationshipSchema,\n  Anchor: relationshipSchema,\n  Association: relationshipSchema,\n  Composition: relationshipSchema,\n  Dependency: relationshipSchema,\n  DirectedAssociation: relationshipSchema,\n  Generalization: relationshipSchema,\n  Implementation: relationshipSchema,\n  Relationship: relationshipSchema,\n};\n\nconst schema = {\n  \"!top\": [\"Diagram\"],\n  \"!attrs\": {\n    id: null,\n    class: null,\n  },\n  Diagram: {\n    children: [...Object.keys(classifiers), ...Object.keys(relationships)],\n  },\n  ...classifiers,\n  ...relationships,\n};\n\nexport default schema;\n","import { Editor } from \"../blocks\";\nimport { xmlSchema } from \"../schemas\";\n\ninterface Props {\n  xml: string;\n  onChange: (xml: string) => void;\n}\n\nfunction XMLEditor({ xml, onChange }: Props) {\n  return (\n    <div className=\"XMLEditor\" style={{ gridArea: \"xml\", position: \"relative\" }}>\n      <Editor language=\"xml\" value={xml} schema={xmlSchema} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default XMLEditor;\n","import React, { Dispatch, useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../constants\";\nimport { parser, Style } from \"../css\";\nimport { decode, encode } from \"../encoding\";\nimport { useDocumentTitle } from \"../hooks\";\nimport { Diagram, Element } from \"../model\";\nimport { serializer } from \"../serializer\";\nimport { SerializableFile, ViewOptions } from \"../utils\";\nimport { AppMenu, Canvas, CSSEditor, XMLEditor } from \"./widgets\";\nimport \"./App.css\";\n\ninterface Props {\n  onLocaleChange: Dispatch<string>;\n}\n\nfunction App({ onLocaleChange }: Props) {\n  const intl = useIntl();\n  const untitledMsg = intl.formatMessage({ id: \"untitled\", defaultMessage: \"Untitled\" });\n  const titleMsg = intl.formatMessage({ id: \"title\", defaultMessage: \"UML Editor\" });\n\n  const [viewOptions, setViewOptions] = useState<ViewOptions>({ grid: false });\n  const [diagram, setDiagram] = useState(() => new Diagram());\n  const [style, setStyle] = useState(() => new Style());\n  const [title, setTitle] = useState(untitledMsg);\n  const [xml, setXml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n\n  useDocumentTitle(`${title} - ${titleMsg}`);\n\n  function forceRerender(): void {\n    setViewOptions({ ...viewOptions });\n  }\n\n  function handleXmlChange(xml: string): void {\n    const diagram = serializer.deserialize(xml);\n    setDiagram(diagram);\n    setXml(xml);\n  }\n\n  function handleCssChange(css: string): void {\n    const style = parser.parseFromString(css);\n    setStyle(style);\n    setCss(css);\n  }\n\n  function handleCanvasChange(element: Element): void {\n    serializer.updateElement(element);\n    const xml = serializer.serialize(diagram);\n    setXml(xml);\n  }\n\n  function handleAddElement(element: Element): void {\n    diagram.addChild(element);\n    handleCanvasChange(diagram);\n    forceRerender();\n  }\n\n  function handleDeleteElement(element: Element): void {\n    diagram.deleteChild(element);\n    handleCanvasChange(diagram);\n    forceRerender();\n  }\n\n  function handleFileChange(file: SerializableFile): void {\n    const diagram = serializer.deserialize(file.xml);\n    const style = parser.parseFromString(file.css);\n    setTitle(file.title);\n    setCss(file.css);\n    setXml(file.xml);\n    setDiagram(diagram);\n    setStyle(style);\n  }\n\n  useEffect(() => {\n    let docXml = INITIAL_XML;\n    let docCss = INITIAL_CSS;\n    if (window.location.hash.startsWith(\"#/?doc=\")) {\n      const hash = window.location.hash.slice(\"#/?doc=\".length);\n      const file = decode(hash);\n      if (file.xml && file.css) {\n        docXml = file.xml;\n        docCss = file.css;\n        setTitle(file.title);\n      }\n    }\n\n    const diagram = serializer.deserialize(docXml);\n    const style = parser.parseFromString(docCss);\n    setDiagram(diagram);\n    setStyle(style);\n    setXml(docXml);\n    setCss(docCss);\n  }, []);\n\n  useEffect(() => {\n    const hash = encode({ title, xml, css });\n    window.location.hash = `/?doc=${hash}`;\n  }, [title, xml, css]);\n\n  return (\n    <div className=\"App bg-secondary\">\n      <AppMenu\n        file={{ title, model: diagram, style, xml, css }}\n        viewOptions={viewOptions}\n        onFileChange={handleFileChange}\n        onViewOptionsChange={setViewOptions}\n        onLocaleChange={onLocaleChange}\n        onAddElement={handleAddElement}\n        onDeleteElement={handleDeleteElement}\n      />\n      <XMLEditor xml={xml} onChange={handleXmlChange} />\n      <CSSEditor css={css} onChange={handleCssChange} />\n      <Canvas\n        viewOptions={viewOptions}\n        diagram={diagram}\n        style={style}\n        onChange={handleCanvasChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { LocaleSwitch } from \"./components/widgets\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <LocaleSwitch>{(onLocaleChange) => <App onLocaleChange={onLocaleChange} />}</LocaleSwitch>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}