{"version":3,"sources":["constants.ts","css/Color.ts","css/CSSToken.ts","parsing/Parser.ts","parsing/Tokenizer.ts","css/CSSTokenizer.ts","css/Property.ts","css/PropertyMap.ts","css/Style.ts","css/Rule.ts","css/Selector.ts","css/index.ts","css/CSSParser.ts","hooks/useDocumentTitle.ts","hooks/useId.ts","hooks/useShortcut.ts","model/Anchor.ts","renderer/anchors.ts","model/AbstractElement.ts","model/Shape.ts","model/LinePattern.ts","model/Classifier.ts","model/Diagram.ts","model/Tip.ts","model/Relationship.ts","model/Separator.ts","model/Stereotype.ts","model/Text.ts","model/Title.ts","serializer/FileSerializer.ts","serializer/Serializer.ts","uml/Aggregation.ts","uml/Anchor.ts","uml/Association.ts","uml/Class.ts","uml/Component.ts","uml/Composition.ts","uml/DataType.ts","uml/Dependency.ts","uml/DirectedAssociation.ts","uml/Enumeration.ts","uml/Generalization.ts","uml/Implementation.ts","uml/Interface.ts","uml/Note.ts","uml/Package.ts","uml/Primitive.ts","serializer/index.ts","serializer/UMLSerializer.ts","components/blocks/ContainerFluid.tsx","components/blocks/DropdownDivider.tsx","components/blocks/Shortcut.tsx","components/blocks/DropdownItem.tsx","components/blocks/DropdownMenu.tsx","components/blocks/DropdownToggle.tsx","components/blocks/Editor.tsx","components/blocks/Flag.tsx","components/blocks/Icon.tsx","components/blocks/logo.png","components/blocks/MenuBar.tsx","components/blocks/Menu.tsx","components/widgets/DuplicateElement.tsx","components/widgets/FileNew.tsx","utils.ts","components/widgets/FileOpen.tsx","components/widgets/FileRename.tsx","components/widgets/FileSave.tsx","components/widgets/ToggleGrid.tsx","renderer/CanvasClassifierRenderer.ts","renderer/CanvasRelationshipRenderer.ts","renderer/Handle.ts","renderer/HTML5Canvas.ts","renderer/RenderContext.ts","renderer/CanvasRenderer.ts","renderer/SVGCanvas.ts","renderer/SVGRenderer.ts","components/widgets/PNGExport.tsx","components/widgets/SVGExport.tsx","components/widgets/AppMenu.tsx","components/widgets/Canvas.tsx","components/widgets/CSSEditor.tsx","components/widgets/LocaleSwitch.tsx","components/schemas/xmlSchema.ts","components/widgets/XMLEditor.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GRID","PADDING","MARGIN","HANDLE_RADIUS","INITIAL_XML","INITIAL_CSS","Color","red","green","blue","this","sanitizeComponent","intToHex","other","percentage","otherFactor","clamp","thisFactor","hexString","parseInt","slice","min","max","value","clamped","Math","round","toString","padStart","BLUE","fromHexString","INDIGO","PURPLE","PINK","RED","ORANGE","YELLOW","GREEN","TEAL","CYAN","WHITE","GRAY","GRAY_DARK","PRIMARY","SECONDARY","SUCCESS","INFO","WARNING","DANGER","LIGHT","DARK","CSSToken","Parser","tokenizer","tokens","index","string","tokenize","parse","kind","token","Error","parsers","parser","parseOptional","undefined","result","Set","oldIndex","add","call","err","Tokenizer","subject","length","next","newIndex","push","search","match","startsWith","CSSTokenizer","matches","COLOR","NUMBER","LBRACE","RBRACE","COLON","SEMI","DOT","HASH","IDENTIFIER","ERROR","Property","key","Symbol","iterator","PropertyMap","properties","map","Map","property","entries","set","fallback","get","Style","rules","context","head","tail","hasTail","rule","selector","tag","addAll","getProperties","Rule","Selector","classes","id","parseRuleSet","parseSet","parseRule","parseSelector","consume","parsePropertySet","parseClassSet","parseOptionalId","parseProperty","parseIdentifier","parseOneOf","parseColor","parseNumber","parseIdentifierValue","parseClass","parseId","color","number","parseFloat","identifier","useDocumentTitle","title","useEffect","document","useId","prefix","useRef","random","substring","current","useShortcut","Anchor","shortcut","handler","ref","keypressHandler","event","elements","split","element","ctrlKey","shiftKey","altKey","toLowerCase","matchesShortcut","preventDefault","addEventListener","removeEventListener","qsin","anchor","NNW","SSW","N","S","NNE","SSE","qcos","ENE","WNW","E","W","ESE","WSW","Shape","AbstractElement","children","hovered","selected","child","delete","reverse","LinePattern","Classifier","x","y","width","height","shape","RECTANGLE","getLeft","getTop","left","top","renderer","renderClassifier","constructor","Object","getPrototypeOf","Diagram","renderDiagram","predicate","findElement","getChildren","getRight","getBottom","reduceClassifiers","acc","classifier","Infinity","bottom","right","reducer","seed","Tip","Relationship","from","fromAnchor","to","toAnchor","fromTip","NONE","toTip","linePattern","SOLID","getWidth","getHeight","atan2","getY2","getY1","getX2","getX1","renderRelationship","Separator","renderSeparator","Stereotype","renderStereotype","Text","text","renderText","Title","renderTitle","FileSerializer","file","header","model","xml","style","css","joinSections","content","splitSections","headerString","parseHeader","sections","str","trim","join","expectedNumber","Serializer","serializer","elementMap","DOMParser","XMLSerializer","clear","parseFromString","diagram","parseElement","documentElement","Model","hasElement","root","getElement","serializeToString","xmlElement","setElement","has","parsed","parseElementSwitch","setDiagram","setClassifier","setText","tagName","parseDiagram","parseClassifier","parseRelationship","parseTitle","parseText","parseChildren","updateChildren","parseAnchorAttribute","parseIntAttribute","parseEnumAttribute","setAnchorAttribute","setIntAttribute","getX","getY","relationship","parseClassifierAttribute","parseTipAttribute","parseLinePatternAttribute","textContent","target","addChild","console","error","childElement","getOrCreateElement","createElement","attribute","hasAttribute","getAttribute","elementById","ownerDocument","getElementById","setEnumAttribute","enumClass","item","Reflect","toUpperCase","enumValue","setAttribute","Number","isNaN","String","removeAttribute","values","parent","newElement","getTagName","generateId","trailElementEnd","addText","getIndent","getLevel","appendChild","i","childNodes","lastNode","remove","level","repeat","offset","parentElement","data","createTextNode","Aggregation","DIAMOND","DOTS","Association","Class","Component","COMPONENT","Composition","FILLED_DIAMOND","DataType","Dependency","ARROW","TIGHT_DASHES","DirectedAssociation","Enumeration","Generalization","TRIANGLE","Implementation","Interface","Note","NOTE","Package","FOLDER","Primitive","UML","fileSerializer","ContainerFluid","className","DropdownDivider","Shortcut","intl","useIntl","parts","formatMessage","defaultMessage","part","DropdownItem","onClick","classNames","DropdownMenu","placement","labelledBy","aria-labelledby","DropdownToggle","dropdown","dispose","Dropdown","aria-expanded","data-bs-toggle","completeAfter","cm","pred","setTimeout","state","completionActive","showHint","completeSingle","CodeMirror","Pass","completeIfAfterLt","cur","getCursor","getRange","Pos","line","ch","completeIfInTag","tok","getTokenAt","type","test","charAt","innerMode","getMode","Editor","language","schema","onChange","onChangeRef","editor","mode","hintOptions","schemaInfo","codeMirror","fromTextArea","lineNumbers","theme","matchTags","autocorrect","tabSize","extraKeys","toTextArea","handleChange","newValue","getValue","setValue","on","off","defaultValue","Flag","country","Icon","name","size","fill","toHexString","xlinkHref","iconUrl","MenuBar","gridArea","alt","src","logo","Menu","active","DuplicateElement","onAddElement","elementsToDuplicate","isSelected","setSelected","clone","childClone","FileNew","onFileChange","untitled","message","window","prompt","getMouseCoordinates","clientX","clientY","boundingClientRect","currentTarget","getBoundingClientRect","sanitizeFilename","replace","downloadFile","filename","dataURL","downloadLink","download","href","click","FileOpen","pattern","Promise","resolve","uploadInput","files","once","accept","multiple","then","loadFromString","FileRename","onTitleChange","newTitle","FileSave","btoa","saveToString","url","URL","ToggleGrid","viewOptions","onViewOptionsChange","grid","icon","CanvasClassifierRenderer","canvas","save","translate","applyStyle","drawShape","stroke","clip","render","restore","pop","isPointInPath","getStyleProperties","lineWidth","getFloat","strokeColor","getColor","isHovered","mix","fillColor","beginPath","drawRectangleShape","ELLIPSE","drawEllipseShape","drawFolderShape","drawNoteShape","BOX","drawBoxShape","FILE","drawFileShape","drawComponentShape","BOX_DEPTH","w","h","rect","moveTo","lineTo","closePath","ellipse","NOTE_SIZE","FILE_SIZE","COMPONENT_WIDTH","COMPONENT_HEIGHT","COMPONENT_Y","CanvasRelationshipRenderer","applyRelationshipStyle","drawFromTip","drawToTip","setLineDash","SMALL_DASHES","LARGE_DASHES","rotate","getAngle","PI","drawTip","tip","drawArrow","drawTriangle","FILLED_TRIANGLE","drawDiamond","CIRCLE","drawCircle","FILLED_CIRCLE","Handle","HTML5Canvas","ctx","dash","angle","radiusX","radiusY","metrics","measureText","anchorY","fontBoundingBoxAscent","anchorX","fillText","font","attrs","fillStyle","strokeStyle","getFontAttribute","fontStyle","updateFontAttribute","fontWeight","fontSize","fontFamily","RenderContext","canvasWidth","canvasHeight","unshift","shift","CanvasRenderer","options","classifierRenderer","relationshipRenderer","translateX","translateY","getContext","html5Canvas","clearRect","minX","floor","maxX","minY","maxY","renderHandles","isPointInClassifier","drawText","separator","stereotype","contextName","getName","align","weight","getString","family","getHandles","renderHandleAtPoint","getClassifierHandles","handle","isPointInHandle","abs","x1","x2","y1","y2","NW","getCenterX","NE","getCenterY","SW","SE","SVGCanvas","container","stack","paths","saved","path","getContainer","splice","indexOf","svg","createSVG","append","radiansToDegrees","appendPaths","textEl","encodeUTF8","encoded","TextEncoder","encode","fromCharCode","createElementNS","SVGRenderer","baseVal","PNGExport","toDataURL","SVGExport","viewBox","AppMenu","onLocaleChange","createRenderer","Canvas","div","mouseDownCoords","mouseDownRectangle","mouseDownObject","setCursor","cursor","handleLeftMouseButtonMove","coord","by","vec1","vec2","find","el","deltaX","deltaY","setLeft","setTop","setWidth","setHeight","handleHandleUpdate","onResize","trunc","renderGrid","backgroundColor","onMouseMove","buttons","setHovered","findHandleForPoint","onMouseDown","selectedElement","getRectangle","renderMouseDown","onMouseUp","CSSEditor","position","getMessagesForLocale","locale","DE_MESSAGES","EN_MESSAGES","LocaleSwitch","useState","navigator","setLocale","messages","defaultLocale","anchorSchema","keys","filter","it","shapeSchema","tipSchema","classifierSchema","relationshipSchema","classifiers","relationships","class","XMLEditor","xmlSchema","App","setViewOptions","setStyle","setTitle","setXml","setCss","handleCanvasChange","updateElement","serialize","deserialize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.472cb77b.chunk.js","sourcesContent":["export const GRID = 20;\nexport const PADDING = 10;\nexport const MARGIN = 10;\nexport const HANDLE_RADIUS = 4.5;\nexport const INITIAL_XML = `\\\n<Diagram>\n  <Interface id=\"i1\" anchor=\"s\" y=\"-60\">\n    <Stereotype/>\n    <Title>Visitor</Title>\n  </Interface>\n\n  <Class id=\"c1\" anchor=\"n\" y=\"60\" width=\"400\">\n    <Stereotype/>\n    <Title>Concrete Visitor</Title>\n    <Separator/>\n    <Text>visitSomething(something: Something)</Text>\n  </Class>\n\n  <Implementation from=\"c1\" to=\"i1\" fromAnchor=\"n\" toAnchor=\"s\"/>\n</Diagram>\n`;\nexport const INITIAL_CSS = `\\\nInterface {\n  Title {\n    font-style: italic;\n  }\n}\n\nClass {\n  Title {\n    font-weight: bold;\n  }\n}\n`;\n","class Color {\n  readonly red: number;\n  readonly green: number;\n  readonly blue: number;\n\n  static readonly BLUE = Color.fromHexString(\"#0d6efd\");\n  static readonly INDIGO = Color.fromHexString(\"#6610f2\");\n  static readonly PURPLE = Color.fromHexString(\"#6f42c1\");\n  static readonly PINK = Color.fromHexString(\"#d63384\");\n  static readonly RED = Color.fromHexString(\"#dc3545\");\n  static readonly ORANGE = Color.fromHexString(\"#fd7e14\");\n  static readonly YELLOW = Color.fromHexString(\"#ffc107\");\n  static readonly GREEN = Color.fromHexString(\"#198754\");\n  static readonly TEAL = Color.fromHexString(\"#20c997\");\n  static readonly CYAN = Color.fromHexString(\"#0dcaf0\");\n  static readonly WHITE = Color.fromHexString(\"#ffffff\");\n  static readonly GRAY = Color.fromHexString(\"#6c757d\");\n  static readonly GRAY_DARK = Color.fromHexString(\"#343a40\");\n  static readonly PRIMARY = Color.fromHexString(\"#0d6efd\");\n  static readonly SECONDARY = Color.fromHexString(\"#6c757d\");\n  static readonly SUCCESS = Color.fromHexString(\"#198754\");\n  static readonly INFO = Color.CYAN;\n  static readonly WARNING = Color.YELLOW;\n  static readonly DANGER = Color.RED;\n  static readonly LIGHT = Color.fromHexString(\"#f8f9fa\");\n  static readonly DARK = Color.fromHexString(\"#212529\");\n\n  constructor(red: number, green: number, blue: number) {\n    this.red = Color.sanitizeComponent(red);\n    this.green = Color.sanitizeComponent(green);\n    this.blue = Color.sanitizeComponent(blue);\n  }\n\n  static fromHexString(hexString: string): Color {\n    const red = parseInt(hexString.slice(1, 3), 16);\n    const green = parseInt(hexString.slice(3, 5), 16);\n    const blue = parseInt(hexString.slice(5, 7), 16);\n    return new Color(red, green, blue);\n  }\n\n  private static clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n  }\n\n  private static sanitizeComponent(value: number): number {\n    const clamped = Color.clamp(0, 255, value);\n    return Math.round(clamped);\n  }\n\n  private static intToHex(value: number): string {\n    return value.toString(16).padStart(2, \"0\");\n  }\n\n  toHexString(): string {\n    return `#${Color.intToHex(this.red)}${Color.intToHex(this.green)}${Color.intToHex(this.blue)}`;\n  }\n\n  mix(other: Color, percentage: number): Color {\n    const otherFactor = Color.clamp(0, 1, percentage);\n    const thisFactor = 1 - otherFactor;\n    const red = thisFactor * this.red + otherFactor * other.red;\n    const green = thisFactor * this.green + otherFactor * other.green;\n    const blue = thisFactor * this.blue + otherFactor * other.blue;\n    return new Color(red, green, blue);\n  }\n}\n\nexport default Color;\n","enum CSSToken {\n  LBRACE,\n  RBRACE,\n  COLON,\n  SEMI,\n  DOT,\n  HASH,\n  COLOR,\n  NUMBER,\n  IDENTIFIER,\n  ERROR,\n}\n\nexport default CSSToken;\n","import Token from \"./Token\";\nimport Tokenizer from \"./Tokenizer\";\n\nabstract class Parser<T, D> {\n  private readonly tokenizer: Tokenizer<T>;\n  private tokens: Token<T>[] = [];\n  private index = 0;\n\n  constructor(tokenizer: Tokenizer<T>) {\n    this.tokenizer = tokenizer;\n  }\n\n  parseFromString(string: string): D {\n    this.index = 0;\n    this.tokens = this.tokenizer.tokenize(string);\n    return this.parse();\n  }\n\n  protected abstract parse(): D;\n\n  protected consume(kind: T): Token<T> {\n    const token = this.tokens[this.index];\n    if (token.kind === kind) {\n      this.index += 1;\n      return token;\n    } else {\n      throw new Error(`Expected ${kind}, but was ${token.kind}`);\n    }\n  }\n\n  protected parseOneOf<U1, U2, U3>(\n    parser1: () => U1,\n    parser2: () => U2,\n    parser3: () => U3,\n  ): U1 | U2 | U3;\n  protected parseOneOf<U1, U2>(parser1: () => U1, parser2: () => U2): U1 | U2;\n  protected parseOneOf<U1>(parser1: () => U1): U1;\n  protected parseOneOf(...parsers: Array<() => unknown>): unknown {\n    for (const parser of parsers) {\n      const value = this.parseOptional(parser);\n      if (value !== undefined) {\n        return value;\n      }\n    }\n\n    throw new Error(\"None of the one ofs matched\");\n  }\n\n  protected parseSet<U>(parser: () => U): Set<U> {\n    const result = new Set<U>();\n    while (true) {\n      const oldIndex = this.index;\n      try {\n        result.add(parser.call(this));\n      } catch (err) {\n        this.index = oldIndex;\n        return result;\n      }\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any tokens\");\n      }\n    }\n  }\n\n  protected parseOptional<U>(parser: () => U): U | undefined {\n    const oldIndex = this.index;\n    let result;\n    try {\n      result = parser.call(this);\n    } catch (err) {\n      this.index = oldIndex;\n      return undefined;\n    }\n\n    const newIndex = this.index;\n    if (newIndex <= oldIndex) {\n      throw new Error(\"Did not consume any tokens\");\n    }\n\n    return result;\n  }\n}\n\nexport default Parser;\n","import Token from \"./Token\";\n\nabstract class Tokenizer<T> {\n  private subject = \"\";\n  private index = 0;\n\n  tokenize(subject: string): Token<T>[] {\n    this.subject = subject;\n    this.index = 0;\n    const tokens = [];\n    while (this.index < this.subject.length) {\n      const oldIndex = this.index;\n      const kind = this.next();\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any characters\");\n      }\n\n      if (kind === null) {\n        continue;\n      }\n\n      const value = this.subject.slice(oldIndex, newIndex);\n      tokens.push({ kind, value });\n    }\n\n    return tokens;\n  }\n\n  protected abstract next(): T | null;\n\n  protected matches(search: RegExp): boolean {\n    const match = this.subject.slice(this.index).match(search);\n    if (match === null) {\n      return false;\n    }\n\n    this.index += match[0].length;\n    return true;\n  }\n\n  protected startsWith(search: string): boolean {\n    if (this.subject.startsWith(search, this.index)) {\n      this.index += search.length;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default Tokenizer;\n","import { Tokenizer } from \"../parsing\";\nimport CSSToken from \"./CSSToken\";\n\nclass CSSTokenizer extends Tokenizer<CSSToken> {\n  protected next(): CSSToken | null {\n    // Whitespace\n    if (this.matches(/^\\s+/)) return null;\n\n    // Comments\n    if (this.matches(/^\\/\\/[^\\r\\n]*/)) return null;\n    if (this.matches(/^\\/\\*.*?\\*\\//)) return null;\n\n    // Literals\n    if (this.matches(/^#[0-9a-fA-F]{6}|^#[0-9a-fA-F]{3}/)) return CSSToken.COLOR;\n    if (this.matches(/^\\d+(\\.\\d*)?|^\\.\\d+/)) return CSSToken.NUMBER;\n\n    // Operators\n    if (this.startsWith(\"{\")) return CSSToken.LBRACE;\n    if (this.startsWith(\"}\")) return CSSToken.RBRACE;\n    if (this.startsWith(\":\")) return CSSToken.COLON;\n    if (this.startsWith(\";\")) return CSSToken.SEMI;\n    if (this.startsWith(\".\")) return CSSToken.DOT;\n    if (this.startsWith(\"#\")) return CSSToken.HASH;\n\n    if (this.matches(/^[a-zA-Z]+(-[a-zA-Z]+)*/)) return CSSToken.IDENTIFIER;\n\n    // Fallback\n    this.matches(/^./);\n    return CSSToken.ERROR;\n  }\n}\n\nexport default CSSTokenizer;\n","class Property {\n  readonly key: string;\n  readonly value: unknown;\n\n  constructor(key: string, value: unknown) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport default Property;\n","import Color from \"./Color\";\nimport Property from \"./Property\";\n\nclass PropertyMap implements Iterable<[string, unknown]> {\n  protected readonly map: Map<string, unknown>;\n\n  constructor(properties = new Set<Property>()) {\n    this.map = new Map<string, unknown>(\n      [...properties].map((property) => [property.key, property.value] as const),\n    );\n  }\n\n  [Symbol.iterator](): Iterator<[string, unknown]> {\n    return this.map.entries();\n  }\n\n  addAll(map: PropertyMap): this {\n    for (const [key, value] of map) {\n      this.map.set(key, value);\n    }\n    return this;\n  }\n\n  getString(key: string, fallback: string): string {\n    const value = this.map.get(key);\n    if (typeof value === \"string\") {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getColor(key: string, fallback: Color): Color {\n    const value = this.map.get(key);\n    if (value instanceof Color) {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getFloat(key: string, fallback: number): number {\n    const value = this.map.get(key);\n    if (typeof value === \"number\") {\n      return value;\n    }\n\n    return fallback;\n  }\n}\n\nexport default PropertyMap;\n","import PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\n\nclass Style {\n  readonly rules: Set<Rule>;\n\n  constructor(rules = new Set<Rule>()) {\n    this.rules = rules;\n  }\n\n  getProperties(context: string[]): PropertyMap {\n    const result = new PropertyMap();\n    const [head, ...tail] = context;\n    const hasTail = tail.length > 0;\n    for (const rule of this.rules) {\n      if (rule.selector.tag === head) {\n        const properties = new PropertyMap(rule.properties);\n        if (hasTail) {\n          properties.addAll(this.getProperties(tail));\n          properties.addAll(rule.getProperties(tail));\n        }\n        result.addAll(properties);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default Style;\n","import Style from \"./Style\";\nimport Property from \"./Property\";\nimport Selector from \"./Selector\";\n\nclass Rule extends Style {\n  readonly selector: Selector;\n  readonly properties: Set<Property>;\n\n  constructor(selector: Selector, properties: Set<Property>, rules: Set<Rule>) {\n    super(rules);\n    this.selector = selector;\n    this.properties = properties;\n  }\n}\n\nexport default Rule;\n","class Selector {\n  readonly tag: string;\n  readonly classes: Set<string>;\n  readonly id?: string;\n\n  constructor(tag: string, classes: Set<string>, id?: string) {\n    this.tag = tag;\n    this.classes = classes;\n    this.id = id;\n  }\n}\n\nexport default Selector;\n","import Color from \"./Color\";\nimport CSSParser from \"./CSSParser\";\nimport Property from \"./Property\";\nimport PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nexport { Color, CSSParser, Property, PropertyMap, Rule, Selector, Style };\n\nexport const parser = new CSSParser();\n","import { Parser } from \"../parsing\";\nimport Color from \"./Color\";\nimport CSSToken from \"./CSSToken\";\nimport CSSTokenizer from \"./CSSTokenizer\";\nimport Property from \"./Property\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nclass CSSParser extends Parser<CSSToken, Style> {\n  constructor() {\n    super(new CSSTokenizer());\n  }\n\n  protected parse(): Style {\n    return new Style(this.parseRuleSet());\n  }\n\n  private parseRuleSet(): Set<Rule> {\n    return this.parseSet(this.parseRule);\n  }\n\n  protected parseRule(): Rule {\n    const selector = this.parseSelector();\n    this.consume(CSSToken.LBRACE);\n    const properties = this.parsePropertySet();\n    const rules = this.parseRuleSet();\n    this.consume(CSSToken.RBRACE);\n\n    return new Rule(selector, properties, rules);\n  }\n\n  private parseSelector(): Selector {\n    const tag = this.consume(CSSToken.IDENTIFIER);\n    const classes = this.parseClassSet();\n    const id = this.parseOptionalId();\n\n    return new Selector(tag.value, classes, id);\n  }\n\n  private parsePropertySet(): Set<Property> {\n    return this.parseSet(this.parseProperty);\n  }\n\n  private parseProperty(): Property {\n    const key = this.parseIdentifier();\n    this.consume(CSSToken.COLON);\n\n    const value = this.parseOneOf(this.parseColor, this.parseNumber, this.parseIdentifierValue);\n    this.consume(CSSToken.SEMI);\n\n    return new Property(key, value);\n  }\n\n  private parseClassSet(): Set<string> {\n    return this.parseSet(this.parseClass);\n  }\n\n  private parseClass(): string {\n    this.consume(CSSToken.DOT);\n    const className = this.consume(CSSToken.IDENTIFIER);\n    return className.value;\n  }\n\n  private parseOptionalId(): string | undefined {\n    return this.parseOptional(this.parseId);\n  }\n\n  private parseId(): string {\n    this.consume(CSSToken.HASH);\n    const id = this.consume(CSSToken.IDENTIFIER);\n    return id.value;\n  }\n\n  private parseColor(): Color {\n    const color = this.consume(CSSToken.COLOR);\n    return Color.fromHexString(color.value);\n  }\n\n  private parseNumber(): number {\n    const number = this.consume(CSSToken.NUMBER);\n    return parseFloat(number.value);\n  }\n\n  private parseIdentifierValue(): string | Color {\n    const identifier = this.parseIdentifier();\n    switch (identifier) {\n      case \"blue\":\n        return Color.BLUE;\n      case \"indigo\":\n        return Color.INDIGO;\n      case \"purple\":\n        return Color.PURPLE;\n      case \"pink\":\n        return Color.PINK;\n      case \"red\":\n        return Color.RED;\n      case \"orange\":\n        return Color.ORANGE;\n      case \"yellow\":\n        return Color.YELLOW;\n      case \"green\":\n        return Color.GREEN;\n      case \"teal\":\n        return Color.TEAL;\n      case \"cyan\":\n        return Color.CYAN;\n      case \"white\":\n        return Color.WHITE;\n      case \"gray\":\n        return Color.GRAY;\n      case \"gray-dark\":\n        return Color.GRAY_DARK;\n      case \"primary\":\n        return Color.PRIMARY;\n      case \"secondary\":\n        return Color.SECONDARY;\n      case \"success\":\n        return Color.SUCCESS;\n      case \"info\":\n        return Color.INFO;\n      case \"warning\":\n        return Color.WARNING;\n      case \"danger\":\n        return Color.DANGER;\n      case \"light\":\n        return Color.LIGHT;\n      case \"dark\":\n        return Color.DARK;\n      default:\n        return identifier;\n    }\n  }\n\n  private parseIdentifier(): string {\n    const identifier = this.consume(CSSToken.IDENTIFIER);\n    return identifier.value;\n  }\n}\n\nexport default CSSParser;\n","import { useEffect } from \"react\";\n\nfunction useDocumentTitle(title: string): void {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import { useRef } from \"react\";\n\nfunction useId(prefix: string): string {\n  const ref = useRef(`${prefix}-${Math.random().toString(36).substring(2)}`);\n\n  return ref.current!;\n}\n\nexport default useId;\n","import { useEffect, useRef } from \"react\";\n\nfunction useShortcut(shortcut: string | undefined, handler: () => void): void {\n  const ref = useRef(handler);\n\n  useEffect(() => {\n    function keypressHandler(event: KeyboardEvent) {\n      if (shortcut !== undefined && matchesShortcut(shortcut, event)) {\n        event.preventDefault();\n        ref.current();\n      }\n    }\n\n    document.addEventListener(\"keydown\", keypressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keypressHandler);\n    };\n  }, [shortcut]);\n\n  useEffect(() => {\n    ref.current = handler;\n  });\n}\n\nfunction matchesShortcut(shortcut: string, event: KeyboardEvent) {\n  let result = true;\n\n  const elements = shortcut.split(\"-\");\n  for (const element of elements) {\n    if (element === \"Ctrl\") {\n      result = result && event.ctrlKey;\n    } else if (element === \"Shift\") {\n      result = result && event.shiftKey;\n    } else if (element === \"Alt\") {\n      result = result && event.altKey;\n    } else {\n      result = result && event.key.toLowerCase() === element.toLowerCase();\n    }\n  }\n\n  return result;\n}\n\nexport default useShortcut;\n","enum Anchor {\n  N,\n  NNE,\n  NE,\n  ENE,\n  E,\n  ESE,\n  SE,\n  SSE,\n  S,\n  SSW,\n  SW,\n  WSW,\n  W,\n  WNW,\n  NW,\n  NNW,\n}\n\nexport default Anchor;\n","import { Anchor } from \"../model\";\n\nexport function qsin(anchor: Anchor): number {\n  if ((anchor + 6) % 16 < 5) {\n    return 0;\n  }\n\n  if ((anchor + 14) % 16 < 5) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.NNW:\n    case Anchor.SSW:\n      return 1 / 4;\n    case Anchor.N:\n    case Anchor.S:\n      return 1 / 2;\n    case Anchor.NNE:\n    case Anchor.SSE:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n\nexport function qcos(anchor: Anchor): number {\n  if ((anchor + 2) % 16 < 5) {\n    return 0;\n  }\n\n  if ((anchor + 10) % 16 < 5) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.ENE:\n    case Anchor.WNW:\n      return 1 / 4;\n    case Anchor.E:\n    case Anchor.W:\n      return 1 / 2;\n    case Anchor.ESE:\n    case Anchor.WSW:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n","import Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nabstract class AbstractElement implements Element {\n  private readonly children = new Set<Element>();\n  private hovered = false;\n  private selected = false;\n\n  abstract render(renderer: Renderer): void;\n\n  abstract getTagName(): string;\n\n  abstract clone(): Element;\n\n  getChildren(): readonly Element[] {\n    return [...this.children];\n  }\n\n  addChild(child: Element): this {\n    this.children.add(child);\n    return this;\n  }\n\n  deleteChild(child: Element): boolean {\n    return this.children.delete(child);\n  }\n\n  *[Symbol.iterator](): Iterator<Element> {\n    for (const child of [...this.children].reverse()) {\n      yield* child;\n    }\n    yield this;\n  }\n\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.hovered = hovered;\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n\n  setSelected(selected: boolean): void {\n    this.selected = selected;\n  }\n}\n\nexport default AbstractElement;\n","enum Shape {\n  RECTANGLE,\n  ELLIPSE,\n  NOTE,\n  FOLDER,\n  BOX,\n  FILE,\n  COMPONENT,\n}\n\nexport default Shape;\n","enum LinePattern {\n  SOLID,\n  DOTS,\n  SMALL_DASHES,\n  LARGE_DASHES,\n  TIGHT_DASHES,\n}\n\nexport default LinePattern;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Rectangle from \"./Rectangle\";\nimport Renderer from \"./Renderer\";\nimport Shape from \"./Shape\";\n\nclass Classifier extends AbstractElement {\n  readonly anchor: Anchor;\n  x: number;\n  y: number;\n  private width: number;\n  private height: number;\n  shape: Shape = Shape.RECTANGLE;\n\n  constructor(anchor: Anchor, x: number, y: number, width: number, height: number) {\n    super();\n    this.anchor = anchor;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getTagName(): string {\n    return \"Classifier\";\n  }\n\n  getRectangle(): Rectangle {\n    return {\n      x: this.getLeft(),\n      y: this.getTop(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setHeight(height: number): void {\n    this.height = height;\n  }\n\n  getLeft(): number {\n    return this.x - this.width * qsin(this.anchor);\n  }\n\n  setLeft(left: number): void {\n    this.x = left + this.width * qsin(this.anchor);\n  }\n\n  getCenterX(): number {\n    return this.getLeft() + this.width / 2;\n  }\n\n  getRight(): number {\n    return this.getLeft() + this.width;\n  }\n\n  getTop(): number {\n    return this.y - this.height * qcos(this.anchor);\n  }\n\n  setTop(top: number): void {\n    this.y = top + this.height * qcos(this.anchor);\n  }\n\n  getCenterY(): number {\n    return this.getTop() + this.height / 2;\n  }\n\n  getBottom(): number {\n    return this.getTop() + this.height;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderClassifier(this);\n  }\n\n  clone(): Classifier {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.anchor, this.x + 20, this.y + 20, this.width, this.height);\n  }\n}\n\nexport default Classifier;\n","import { Predicate } from \"../utils\";\nimport AbstractElement from \"./AbstractElement\";\nimport Classifier from \"./Classifier\";\nimport Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nclass Diagram extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderDiagram(this);\n  }\n\n  getTagName(): string {\n    return \"Diagram\";\n  }\n\n  clone(): Diagram {\n    return new Diagram();\n  }\n\n  find(predicate: Predicate<Element>): Element | undefined {\n    return this.findElement(this, predicate);\n  }\n\n  private findElement(element: Element, predicate: Predicate<Element>): Element | undefined {\n    const result = predicate(element);\n    if (result) {\n      return element;\n    }\n\n    for (const child of element.getChildren()) {\n      const result = this.findElement(child, predicate);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    return undefined;\n  }\n\n  getWidth(): number {\n    return this.getRight() - this.getLeft();\n  }\n\n  getHeight(): number {\n    return this.getBottom() - this.getTop();\n  }\n\n  getTop(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const top = classifier.getTop();\n      return acc > top ? top : acc;\n    }, Infinity);\n  }\n\n  getBottom(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const bottom = classifier.getBottom();\n      return acc < bottom ? bottom : acc;\n    }, -Infinity);\n  }\n\n  getLeft(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const left = classifier.getLeft();\n      return acc > left ? left : acc;\n    }, Infinity);\n  }\n\n  getRight(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const right = classifier.getRight();\n      return acc < right ? right : acc;\n    }, -Infinity);\n  }\n\n  private reduceClassifiers(\n    reducer: (acc: number, classifier: Classifier) => number,\n    seed: number,\n  ): number {\n    let acc = seed;\n    for (const classifier of this.getChildren()) {\n      if (classifier instanceof Classifier) {\n        acc = reducer(acc, classifier);\n      }\n    }\n\n    if (acc === seed) {\n      return 0;\n    }\n\n    return acc;\n  }\n}\n\nexport default Diagram;\n","enum Tip {\n  NONE,\n  ARROW,\n  TRIANGLE,\n  FILLED_TRIANGLE,\n  DIAMOND,\n  FILLED_DIAMOND,\n  CIRCLE,\n  FILLED_CIRCLE,\n}\n\nexport default Tip;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Classifier from \"./Classifier\";\nimport LinePattern from \"./LinePattern\";\nimport Renderer from \"./Renderer\";\nimport Tip from \"./Tip\";\n\nclass Relationship extends AbstractElement {\n  from: Classifier;\n  fromAnchor: Anchor;\n  fromTip: Tip = Tip.NONE;\n  to: Classifier;\n  toAnchor: Anchor;\n  toTip: Tip = Tip.NONE;\n  linePattern: LinePattern = LinePattern.SOLID;\n\n  constructor(from: Classifier, fromAnchor: Anchor, to: Classifier, toAnchor: Anchor) {\n    super();\n    this.from = from;\n    this.fromAnchor = fromAnchor;\n    this.to = to;\n    this.toAnchor = toAnchor;\n  }\n\n  getX1(): number {\n    return this.from.getLeft() + qsin(this.fromAnchor) * this.from.getWidth();\n  }\n\n  getY1(): number {\n    return this.from.getTop() + qcos(this.fromAnchor) * this.from.getHeight();\n  }\n\n  getX2(): number {\n    return this.to.getLeft() + qsin(this.toAnchor) * this.to.getWidth();\n  }\n\n  getY2(): number {\n    return this.to.getTop() + qcos(this.toAnchor) * this.to.getHeight();\n  }\n\n  getAngle(): number {\n    return Math.atan2(this.getY2() - this.getY1(), this.getX2() - this.getX1());\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderRelationship(this);\n  }\n\n  getTagName(): string {\n    return \"Relationship\";\n  }\n\n  clone(): Relationship {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.from, this.fromAnchor, this.to, this.toAnchor);\n  }\n}\n\nexport default Relationship;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Separator extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderSeparator(this);\n  }\n\n  getTagName(): string {\n    return \"Separator\";\n  }\n\n  clone(): Separator {\n    return new Separator();\n  }\n}\n\nexport default Separator;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Stereotype extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderStereotype(this);\n  }\n\n  getTagName(): string {\n    return \"Stereotype\";\n  }\n\n  clone(): Stereotype {\n    return new Stereotype();\n  }\n}\n\nexport default Stereotype;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Text extends AbstractElement {\n  readonly text: string;\n\n  constructor(text: string) {\n    super();\n    this.text = text;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderText(this);\n  }\n\n  getTagName(): string {\n    return \"Text\";\n  }\n\n  clone(): Text {\n    const { constructor } = Object.getPrototypeOf(this);\n    return new constructor(this.text);\n  }\n}\n\nexport default Text;\n","import Text from \"./Text\";\nimport Renderer from \"./Renderer\";\n\nclass Title extends Text {\n  render(renderer: Renderer): void {\n    renderer.renderTitle(this);\n  }\n\n  getTagName(): string {\n    return \"Title\";\n  }\n}\n\nexport default Title;\n","import { SerializableFile } from \"../utils\";\n\nclass FileSerializer {\n  saveToString(file: SerializableFile): string {\n    const header = `title: ${file.title}`;\n    const model = file.xml;\n    const style = file.css;\n    return this.joinSections(header, model, style);\n  }\n\n  loadFromString(content: string): SerializableFile {\n    const [headerString, model, style] = this.splitSections(content, 3);\n    const header = this.parseHeader(headerString);\n    return {\n      title: header.title ?? \"Untitled\",\n      xml: model,\n      css: style,\n    };\n  }\n\n  private joinSections(...sections: string[]): string {\n    return sections.map((str) => str.trim()).join(\"\\n---\\n\") + \"\\n\";\n  }\n\n  private splitSections(content: string, expectedNumber: number): string[] {\n    const sections = content.split(\"\\n---\\n\");\n    if (sections.length !== expectedNumber) {\n      throw new Error(`Expected ${expectedNumber} sections`);\n    }\n\n    return sections;\n  }\n\n  private parseHeader(headerString: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    for (const line of headerString.split(/\\r\\n|[\\r\\n]/)) {\n      const [key, value] = line.split(/:\\s*/, 2);\n      result[key] = value;\n    }\n\n    return result;\n  }\n}\n\nexport default FileSerializer;\n","import * as Model from \"../model\";\n\ninterface Class<T> {\n  new (...args: any[]): T;\n}\n\nclass Serializer {\n  private readonly parser: DOMParser;\n  private readonly serializer: XMLSerializer;\n  private readonly elementMap = new Map<Element, Model.Element>();\n\n  constructor() {\n    this.parser = new DOMParser();\n    this.serializer = new XMLSerializer();\n  }\n\n  deserialize(xml: string): Model.Diagram {\n    this.elementMap.clear();\n    const document = this.parser.parseFromString(xml, \"text/xml\");\n    const diagram = this.parseElement(document.documentElement);\n    if (!(diagram instanceof Model.Diagram)) {\n      return new Model.Diagram();\n    }\n\n    return diagram;\n  }\n\n  serialize(diagram: Model.Diagram): string {\n    if (this.hasElement(diagram)) {\n      const root = this.getElement(diagram)!;\n      return this.serializer.serializeToString(root);\n    }\n\n    return \"\";\n  }\n\n  updateElement(element: Model.Element): void {\n    if (this.hasElement(element)) {\n      const xmlElement = this.getElement(element)!;\n      this.setElement(xmlElement, element);\n    }\n  }\n\n  private parseElement(element: Element): Model.Element {\n    if (this.elementMap.has(element)) {\n      return this.elementMap.get(element)!;\n    }\n\n    const parsed = this.parseElementSwitch(element);\n    this.elementMap.set(element, parsed);\n    return parsed;\n  }\n\n  private setElement(xmlElement: Element, element: Model.Element) {\n    if (element instanceof Model.Diagram) {\n      this.setDiagram(xmlElement, element);\n    } else if (element instanceof Model.Classifier) {\n      this.setClassifier(xmlElement, element);\n    } else if (element instanceof Model.Text) {\n      this.setText(xmlElement, element);\n    }\n  }\n\n  protected parseElementSwitch(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Diagram\":\n        return this.parseDiagram(element);\n      case \"Classifier\":\n        return this.parseClassifier(Model.Classifier, element);\n      case \"Relationship\":\n        return this.parseRelationship(Model.Relationship, element);\n      case \"Title\":\n        return this.parseTitle(element);\n      case \"Text\":\n        return this.parseText(element);\n      case \"Separator\":\n        return new Model.Separator();\n      case \"Stereotype\":\n        return new Model.Stereotype();\n    }\n\n    throw new Error(`Unknown tag: ${element.tagName}`);\n  }\n\n  private parseDiagram(element: Element): Model.Diagram {\n    const diagram = new Model.Diagram();\n    this.parseChildren(element, diagram);\n    return diagram;\n  }\n\n  private setDiagram(element: Element, diagram: Model.Diagram): void {\n    this.updateChildren(element, diagram);\n  }\n\n  protected parseClassifier<C extends Model.Classifier>(\n    constructor: Class<C>,\n    element: Element,\n  ): C {\n    const anchor = this.parseAnchorAttribute(element, \"anchor\");\n    const x = this.parseIntAttribute(element, \"x\", 0);\n    const y = this.parseIntAttribute(element, \"y\", 0);\n    const width = this.parseIntAttribute(element, \"width\", 200);\n    const height = this.parseIntAttribute(element, \"height\", 120);\n    const classifier = new constructor(anchor, x, y, width, height);\n    classifier.shape = this.parseEnumAttribute(Model.Shape, element, \"shape\", classifier.shape);\n    this.parseChildren(element, classifier);\n    return classifier;\n  }\n\n  protected setClassifier(element: Element, classifier: Model.Classifier): void {\n    this.setAnchorAttribute(element, \"anchor\", classifier.anchor);\n    this.setIntAttribute(element, \"x\", 0, classifier.getX());\n    this.setIntAttribute(element, \"y\", 0, classifier.getY());\n    this.setIntAttribute(element, \"width\", 200, classifier.getWidth());\n    this.setIntAttribute(element, \"height\", 120, classifier.getHeight());\n    this.updateChildren(element, classifier);\n  }\n\n  protected parseRelationship<R extends Model.Relationship>(\n    constructor: Class<R>,\n    element: Element,\n  ): R {\n    const from = this.parseClassifierAttribute(element, \"from\");\n    const fromAnchor = this.parseAnchorAttribute(element, \"fromAnchor\");\n    const to = this.parseClassifierAttribute(element, \"to\");\n    const toAnchor = this.parseAnchorAttribute(element, \"toAnchor\");\n    const relationship = new constructor(from, fromAnchor, to, toAnchor);\n    relationship.fromTip = this.parseTipAttribute(element, \"fromTip\", relationship.fromTip);\n    relationship.toTip = this.parseTipAttribute(element, \"toTip\", relationship.toTip);\n    relationship.linePattern = this.parseLinePatternAttribute(\n      element,\n      \"linePattern\",\n      relationship.linePattern,\n    );\n    return relationship;\n  }\n\n  private parseTitle(element: Element): Model.Title {\n    const text = element.textContent ?? \"\";\n    return new Model.Title(text);\n  }\n\n  private parseText(element: Element): Model.Text {\n    const text = element.textContent ?? \"\";\n    return new Model.Text(text);\n  }\n\n  private setText(element: Element, text: Model.Text) {\n    element.textContent = text.text;\n  }\n\n  private parseChildren(element: Element, target: Model.Element) {\n    for (const child of element.children) {\n      try {\n        target.addChild(this.parseElement(child));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  private updateChildren(element: Element, target: Model.Element) {\n    for (const child of target.getChildren()) {\n      const childElement = this.getOrCreateElement(element, child);\n      this.setElement(childElement, child);\n    }\n  }\n\n  private getOrCreateElement(element: Element, child: Model.Element): Element {\n    if (this.hasElement(child)) {\n      return this.getElement(child)!;\n    } else {\n      return this.createElement(element, child);\n    }\n  }\n\n  private parseClassifierAttribute(element: Element, attribute: string): Model.Classifier {\n    if (element.hasAttribute(attribute)) {\n      const id = element.getAttribute(attribute)!;\n      const elementById = element.ownerDocument.getElementById(id);\n      if (elementById !== null) {\n        const classifier = this.parseElement(elementById);\n        if (classifier instanceof Model.Classifier) {\n          return classifier;\n        }\n      }\n    }\n\n    throw new Error(\n      `Invalid classifier: <${element.tagName} ${attribute}=\"${element.getAttribute(\n        attribute,\n      )}\" />`,\n    );\n  }\n\n  private parseAnchorAttribute(element: Element, attribute: string): Model.Anchor {\n    return this.parseEnumAttribute(Model.Anchor, element, attribute, Model.Anchor.S);\n  }\n\n  private setAnchorAttribute(element: Element, attribute: string, anchor: Model.Anchor) {\n    this.setEnumAttribute(Model.Anchor, element, attribute, anchor);\n  }\n\n  private parseTipAttribute(element: Element, attribute: string, fallback: Model.Tip): Model.Tip {\n    return this.parseEnumAttribute(Model.Tip, element, attribute, fallback);\n  }\n\n  private parseLinePatternAttribute(\n    element: Element,\n    attribute: string,\n    fallback: Model.LinePattern,\n  ): Model.LinePattern {\n    return this.parseEnumAttribute(Model.LinePattern, element, attribute, fallback);\n  }\n\n  private parseEnumAttribute<E>(\n    enumClass: Record<string, unknown>,\n    element: Element,\n    attribute: string,\n    fallback: E,\n  ): E {\n    if (element.hasAttribute(attribute)) {\n      const value = element.getAttribute(attribute)!;\n      const item = Reflect.get(enumClass, value.toUpperCase());\n      if (item !== undefined) {\n        return item;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setEnumAttribute(\n    enumClass: Record<number, string>,\n    element: Element,\n    attribute: string,\n    enumValue: number,\n  ): void {\n    const value = enumClass[enumValue].toLowerCase();\n    element.setAttribute(attribute, value);\n  }\n\n  private parseIntAttribute(element: Element, attribute: string, fallback: number): number {\n    if (element.hasAttribute(attribute)) {\n      const value = parseInt(element.getAttribute(attribute)!, 10);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setIntAttribute(\n    element: Element,\n    attribute: string,\n    fallback: number,\n    value: number,\n  ): void {\n    if (value !== fallback) {\n      element.setAttribute(attribute, String(value));\n    } else {\n      element.removeAttribute(attribute);\n    }\n  }\n\n  private hasElement(element: Model.Element): boolean {\n    for (const value of this.elementMap.values()) {\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getElement(element: Model.Element): Element | undefined {\n    for (const [xmlElement, el] of this.elementMap) {\n      if (el === element) {\n        return xmlElement;\n      }\n    }\n    return undefined;\n  }\n\n  private createElement(parent: Element, element: Model.Element): Element {\n    const newElement = parent.ownerDocument.createElement(element.getTagName());\n    const id = this.generateId(parent.ownerDocument, element);\n    newElement.setAttribute(\"id\", id);\n    this.elementMap.set(newElement, element);\n\n    this.trailElementEnd(parent);\n    this.addText(parent, this.getIndent(this.getLevel(1, parent)));\n    parent.appendChild(newElement);\n    this.addText(parent, this.getIndent(this.getLevel(0, parent)));\n\n    return newElement;\n  }\n\n  private generateId(document: Document, element: Model.Element): string {\n    let prefix = element.getTagName().toLowerCase();\n    if (prefix === \"interface\") {\n      prefix = \"i\";\n    } else if (prefix === \"class\") {\n      prefix = \"c\";\n    }\n\n    let i = 1;\n    while (document.getElementById(prefix + i) !== null) {\n      i += 1;\n    }\n    return prefix + i;\n  }\n\n  private trailElementEnd(element: Element): void {\n    const { childNodes } = element;\n    if (childNodes.length > 0) {\n      const lastNode = childNodes.item(childNodes.length - 1);\n      if (lastNode instanceof Text) {\n        lastNode.remove();\n      }\n    }\n  }\n\n  private getIndent(level: number): string {\n    return \"\\n\" + \"  \".repeat(level);\n  }\n\n  private getLevel(offset: number, parent: Element): number {\n    if (parent.parentElement === null) {\n      return offset;\n    } else {\n      return this.getLevel(offset + 1, parent.parentElement);\n    }\n  }\n\n  private addText(parent: Element, data: string): void {\n    parent.appendChild(parent.ownerDocument.createTextNode(data));\n  }\n}\n\nexport default Serializer;\n","import { Relationship, Tip } from \"../model\";\n\nclass Aggregation extends Relationship {\n  toTip: Tip = Tip.DIAMOND;\n\n  getTagName(): string {\n    return \"Aggregation\";\n  }\n}\n\nexport default Aggregation;\n","import { LinePattern, Relationship } from \"../model\";\n\nclass Anchor extends Relationship {\n  linePattern: LinePattern = LinePattern.DOTS;\n\n  getTagName(): string {\n    return \"Anchor\";\n  }\n}\n\nexport default Anchor;\n","import { Relationship } from \"../model\";\n\nclass Association extends Relationship {\n  getTagName(): string {\n    return \"Association\";\n  }\n}\n\nexport default Association;\n","import { Classifier } from \"../model\";\n\nclass Class extends Classifier {\n  getTagName(): string {\n    return \"Class\";\n  }\n}\n\nexport default Class;\n","import { Classifier, Shape } from \"../model\";\n\nclass Component extends Classifier {\n  shape: Shape = Shape.COMPONENT;\n\n  getTagName(): string {\n    return \"Component\";\n  }\n}\n\nexport default Component;\n","import { Relationship, Tip } from \"../model\";\n\nclass Composition extends Relationship {\n  toTip: Tip = Tip.FILLED_DIAMOND;\n\n  getTagName(): string {\n    return \"Composition\";\n  }\n}\n\nexport default Composition;\n","import { Classifier } from \"../model\";\n\nclass DataType extends Classifier {\n  getTagName(): string {\n    return \"DataType\";\n  }\n}\n\nexport default DataType;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Dependency extends Relationship {\n  toTip: Tip = Tip.ARROW;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n\n  getTagName(): string {\n    return \"Dependency\";\n  }\n}\n\nexport default Dependency;\n","import { Relationship, Tip } from \"../model\";\n\nclass DirectedAssociation extends Relationship {\n  toTip: Tip = Tip.ARROW;\n\n  getTagName(): string {\n    return \"DirectedAssociation\";\n  }\n}\n\nexport default DirectedAssociation;\n","import { Classifier } from \"../model\";\n\nclass Enumeration extends Classifier {\n  getTagName(): string {\n    return \"Enumeration\";\n  }\n}\n\nexport default Enumeration;\n","import { Relationship, Tip } from \"../model\";\n\nclass Generalization extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n\n  getTagName(): string {\n    return \"Generalization\";\n  }\n}\n\nexport default Generalization;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Implementation extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n\n  getTagName(): string {\n    return \"Implementation\";\n  }\n}\n\nexport default Implementation;\n","import { Classifier } from \"../model\";\n\nclass Interface extends Classifier {\n  getTagName(): string {\n    return \"Interface\";\n  }\n}\n\nexport default Interface;\n","import { Classifier, Shape } from \"../model\";\n\nclass Note extends Classifier {\n  shape: Shape = Shape.NOTE;\n\n  getTagName(): string {\n    return \"Note\";\n  }\n}\n\nexport default Note;\n","import { Classifier, Shape } from \"../model\";\n\nclass Package extends Classifier {\n  shape: Shape = Shape.FOLDER;\n\n  getTagName(): string {\n    return \"Package\";\n  }\n}\n\nexport default Package;\n","import { Classifier } from \"../model\";\n\nclass Primitive extends Classifier {\n  getTagName(): string {\n    return \"Primitive\";\n  }\n}\n\nexport default Primitive;\n","import FileSerializer from \"./FileSerializer\";\nimport UMLSerializer from \"./UMLSerializer\";\n\nexport const serializer = new UMLSerializer();\nexport const fileSerializer = new FileSerializer();\n","import Serializer from \"./Serializer\";\nimport * as Model from \"../model\";\nimport * as UML from \"../uml\";\n\nclass UMLSerializer extends Serializer {\n  protected parseElementSwitch(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Aggregation\":\n        return this.parseRelationship(UML.Aggregation, element);\n      case \"Anchor\":\n        return this.parseRelationship(UML.Anchor, element);\n      case \"Association\":\n        return this.parseRelationship(UML.Association, element);\n      case \"Class\":\n        return this.parseClassifier(UML.Class, element);\n      case \"Component\":\n        return this.parseClassifier(UML.Component, element);\n      case \"Composition\":\n        return this.parseRelationship(UML.Composition, element);\n      case \"DataType\":\n        return this.parseClassifier(UML.DataType, element);\n      case \"Dependency\":\n        return this.parseRelationship(UML.Dependency, element);\n      case \"DirectedAssociation\":\n        return this.parseRelationship(UML.DirectedAssociation, element);\n      case \"Enumeration\":\n        return this.parseClassifier(UML.Enumeration, element);\n      case \"Generalization\":\n        return this.parseRelationship(UML.Generalization, element);\n      case \"Implementation\":\n        return this.parseRelationship(UML.Implementation, element);\n      case \"Interface\":\n        return this.parseClassifier(UML.Interface, element);\n      case \"Note\":\n        return this.parseClassifier(UML.Note, element);\n      case \"Package\":\n        return this.parseClassifier(UML.Package, element);\n      case \"Primitive\":\n        return this.parseClassifier(UML.Primitive, element);\n      default:\n        return super.parseElementSwitch(element);\n    }\n  }\n}\n\nexport default UMLSerializer;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction ContainerFluid({ children }: Props) {\n  return <div className=\"container-fluid\">{children}</div>;\n}\n\nexport default ContainerFluid;\n","function DropdownDivider() {\n  return (\n    <li>\n      <hr className=\"dropdown-divider\" />\n    </li>\n  );\n}\n\nexport default DropdownDivider;\n","import { useIntl } from \"react-intl\";\n\ninterface Props {\n  shortcut: string;\n}\n\nfunction Shortcut({ shortcut }: Props) {\n  const intl = useIntl();\n  const parts = new Map([\n    [\"Ctrl\", intl.formatMessage({ id: \"shortcut.ctrl\", defaultMessage: \"Ctrl\" })],\n    [\"Alt\", intl.formatMessage({ id: \"shortcut.alt\", defaultMessage: \"Alt\" })],\n    [\"Shift\", intl.formatMessage({ id: \"shortcut.shift\", defaultMessage: \"Shift\" })],\n  ]);\n\n  const text = shortcut\n    .split(\"-\")\n    .map((part) => parts.get(part) ?? part)\n    .join(\" \");\n\n  return <span className=\"text-muted float-end\">{text}</span>;\n}\n\nexport default Shortcut;\n","import classNames from \"classnames\";\nimport { MouseEvent, ReactNode } from \"react\";\nimport { useShortcut } from \"../../hooks\";\nimport Shortcut from \"./Shortcut\";\n\ninterface Props {\n  onClick?: () => void;\n  shortcut?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownItem({ onClick, shortcut, children }: Props) {\n  function handleClick(event: MouseEvent) {\n    event.preventDefault();\n    onClick?.();\n  }\n\n  useShortcut(shortcut, () => {\n    onClick?.();\n  });\n\n  return (\n    <li>\n      <button onClick={handleClick} className={classNames(\"btn\", \"btn-link\", \"dropdown-item\")}>\n        {children}\n        {shortcut && <Shortcut shortcut={shortcut} />}\n      </button>\n    </li>\n  );\n}\n\nexport default DropdownItem;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface Props {\n  placement?: string;\n  labelledBy: string;\n  children?: ReactNode;\n}\n\nfunction DropdownMenu({ placement = \"start\", labelledBy, children }: Props) {\n  return (\n    <ul\n      className={classNames(\"dropdown-menu\", `dropdown-menu-${placement}`)}\n      aria-labelledby={labelledBy}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport default DropdownMenu;\n","import { Dropdown } from \"bootstrap\";\nimport classNames from \"classnames\";\nimport { ReactNode, useRef } from \"react\";\n\ninterface Props {\n  id?: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownToggle({ id, className, children }: Props) {\n  const dropdown = useRef<Dropdown | null>(null);\n\n  function handleRef(element: HTMLButtonElement | null): void {\n    if (element === null) {\n      dropdown.current?.dispose();\n      dropdown.current = null;\n    } else {\n      dropdown.current = new Dropdown(element);\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      ref={handleRef}\n      aria-expanded=\"false\"\n      data-bs-toggle=\"dropdown\"\n      className={classNames(\"btn\", \"btn-link\", \"dropdown-toggle\", className)}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default DropdownToggle;\n","import CodeMirror from \"codemirror\";\nimport { MutableRefObject, useEffect, useRef } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/xml-hint\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchtags\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/theme/nord.css\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"./Editor.css\";\n\ninterface Props {\n  language: \"css\" | \"xml\";\n  value: string;\n  schema?: any;\n  onChange?: (value: string) => void;\n}\n\nfunction completeAfter(cm: CodeMirror.Editor, pred?: () => boolean) {\n  if (pred?.())\n    setTimeout(() => {\n      if (!cm.state.completionActive) cm.showHint({ completeSingle: false });\n    }, 100);\n  return CodeMirror.Pass;\n}\n\nfunction completeIfAfterLt(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const cur = cm.getCursor();\n    return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === \"<\";\n  });\n}\n\nfunction completeIfInTag(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const tok = cm.getTokenAt(cm.getCursor());\n    if (\n      tok.type === \"string\" &&\n      (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)\n    )\n      return false;\n    const inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n    return inner.tagName;\n  });\n}\n\nfunction Editor({ language, value, schema, onChange }: Props) {\n  const onChangeRef = useRef(onChange);\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const editor = useRef<CodeMirror.Editor>(null) as MutableRefObject<CodeMirror.Editor>;\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    const mode = language === \"xml\" ? \"xml\" : \"text/x-scss\";\n    const hintOptions = { schemaInfo: schema } as any;\n    const codeMirror = CodeMirror.fromTextArea(ref.current!, {\n      mode,\n      lineNumbers: true,\n      theme: \"nord\",\n      matchTags: true,\n      autocorrect: true,\n      tabSize: 2,\n      extraKeys: {\n        \"'<'\": completeAfter,\n        \"'/'\": completeIfAfterLt,\n        \"' '\": completeIfInTag,\n        \"'='\": completeIfInTag,\n        \"Ctrl-Space\": \"autocomplete\",\n        \"Ctrl-/\": \"toggleComment\",\n      },\n      hintOptions,\n    });\n    editor.current = codeMirror;\n\n    return () => {\n      codeMirror.toTextArea();\n    };\n  }, [language, schema]);\n\n  useEffect(() => {\n    if (editor.current!.getValue() !== value) {\n      editor.current!.setValue(value);\n    }\n\n    function handleChange() {\n      const newValue = editor.current!.getValue();\n      if (newValue !== value) {\n        onChangeRef.current?.(newValue);\n      }\n    }\n\n    editor.current!.on(\"change\", handleChange);\n    return () => {\n      editor.current!.off(\"change\", handleChange);\n    };\n  }, [value]);\n\n  return <textarea ref={ref} defaultValue={value} />;\n}\n\nexport default Editor;\n","import classNames from \"classnames\";\nimport \"./Flag.css\";\n\ninterface Props {\n  country: string;\n}\n\nfunction Flag({ country }: Props) {\n  return <span className={classNames(\"Flag me-2\", country)} />;\n}\n\nexport default Flag;\n","import iconUrl from \"bootstrap-icons/bootstrap-icons.svg\";\nimport { Color } from \"../../css\";\nimport \"./Icon.css\";\n\ninterface Props {\n  name: string;\n  color?: Color;\n  size?: number;\n}\n\nfunction Icon({ name, color = Color.DARK, size = 20 }: Props) {\n  return (\n    <svg className=\"Icon me-2\" width={size} height={size} fill={color.toHexString()}>\n      <use xlinkHref={`${iconUrl}#${name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/logo.4da087a9.png\";","import { ReactNode } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport ContainerFluid from \"./ContainerFluid\";\nimport logo from \"./logo.png\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction MenuBar({ children }: Props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ gridArea: \"menu\" }}>\n      <ContainerFluid>\n        <span className=\"navbar-brand\">\n          <img alt=\"Logo\" src={logo} height={32} width={32} className=\"d-inline-block align-top\" />{\" \"}\n          <FormattedMessage id=\"title\" defaultMessage=\"UML Editor\" />\n        </span>\n        <ul className=\"navbar-nav me-auto d-flex flex-grow-1\">{children}</ul>\n      </ContainerFluid>\n    </nav>\n  );\n}\n\nexport default MenuBar;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { useId } from \"../../hooks\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport DropdownToggle from \"./DropdownToggle\";\n\ninterface Props {\n  active?: boolean;\n  placement?: string;\n  title: ReactNode;\n  children?: ReactNode;\n}\n\nfunction Menu({ active = false, placement, title, children }: Props) {\n  const id = useId(\"Menu\");\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <DropdownToggle id={id} className={classNames(\"nav-link\", { active })}>\n        {title}\n      </DropdownToggle>\n      <DropdownMenu placement={placement} labelledBy={id}>\n        {children}\n      </DropdownMenu>\n    </li>\n  );\n}\n\nexport default Menu;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Element } from \"../../model\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onAddElement: Dispatch<Element>;\n}\n\nfunction DuplicateElement({ file, onAddElement }: Props) {\n  function handleClick(): void {\n    const elementsToDuplicate = new Set<Element>();\n    for (const element of file.model) {\n      if (element.isSelected()) {\n        elementsToDuplicate.add(element);\n        element.setSelected(false);\n      }\n    }\n\n    for (const element of elementsToDuplicate) {\n      const clone = element.clone();\n      clone.setSelected(true);\n      for (const child of element.getChildren()) {\n        const childClone = child.clone();\n        clone.addChild(childClone);\n      }\n      onAddElement(clone);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-D\">\n      <Icon name=\"files\" /> <FormattedMessage id=\"edit.duplicate\" defaultMessage=\"Duplicate\" />\n    </DropdownItem>\n  );\n}\n\nexport default DuplicateElement;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../../constants\";\nimport { SerializableFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileNew({ onFileChange }: Props) {\n  const intl = useIntl();\n\n  function handleClick() {\n    const untitled = intl.formatMessage({ id: \"untitled\", defaultMessage: \"Untitled\" });\n    const message = intl.formatMessage({\n      id: \"file.new.message\",\n      defaultMessage: \"Choose a title for the new document\",\n    });\n    const title = window.prompt(message, untitled);\n    if (title !== null) {\n      onFileChange({\n        title,\n        css: INITIAL_CSS,\n        xml: INITIAL_XML,\n      });\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"file-earmark-plus\" /> <FormattedMessage id=\"file.new\" defaultMessage=\"New ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileNew;\n","import { MouseEvent } from \"react\";\nimport { Style } from \"./css\";\nimport { Diagram } from \"./model\";\n\nexport interface Coordinates {\n  readonly x: number;\n  readonly y: number;\n}\n\nexport interface Consumer<T> {\n  (item: T): void;\n}\n\nexport interface Predicate<T> {\n  (item: T): boolean;\n}\n\nexport interface SerializableFile {\n  title: string;\n  xml: string;\n  css: string;\n}\n\nexport interface File extends SerializableFile {\n  model: Diagram;\n  style: Style;\n}\n\nexport interface ViewOptions {\n  grid: boolean;\n}\n\nexport function getMouseCoordinates(event: MouseEvent<HTMLCanvasElement>): Coordinates {\n  const { clientX, clientY } = event;\n  const boundingClientRect = event.currentTarget.getBoundingClientRect();\n\n  const x = clientX - boundingClientRect.x - boundingClientRect.width / 2;\n  const y = clientY - boundingClientRect.y - boundingClientRect.height / 2;\n\n  return { x, y };\n}\n\nexport function subtractCoords(vec1: Coordinates, vec2: Coordinates): Coordinates {\n  const x = vec1.x - vec2.x;\n  const y = vec1.y - vec2.y;\n  return { x, y };\n}\n\nexport function roundCoordsBy(coord: Coordinates, by: number): Coordinates {\n  return {\n    x: Math.round(coord.x / by) * by,\n    y: Math.round(coord.y / by) * by,\n  };\n}\n\nexport function sanitizeFilename(element: string): string {\n  return element.replace(/[^a-zA-Z_-]+/g, \"-\");\n}\n\nexport function downloadFile(filename: string, dataURL: string): void {\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename;\n  downloadLink.href = dataURL;\n  downloadLink.click();\n}\n\nexport function uploadFile(pattern: string): Promise<string> {\n  return new Promise<string>((resolve) => {\n    const uploadInput = document.createElement(\"input\");\n\n    uploadInput.addEventListener(\n      \"change\",\n      () => {\n        if (uploadInput.files!.length > 0) {\n          resolve(uploadInput.files!.item(0)!.text());\n        }\n      },\n      { once: true },\n    );\n\n    uploadInput.type = \"file\";\n    uploadInput.accept = pattern;\n    uploadInput.multiple = false;\n    uploadInput.click();\n  });\n}\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { fileSerializer } from \"../../serializer\";\nimport { SerializableFile, uploadFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileOpen({ onFileChange }: Props) {\n  function handleClick() {\n    uploadFile(\".uml\").then((content) => {\n      const file = fileSerializer.loadFromString(content);\n      onFileChange(file);\n    });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-O\">\n      <Icon name=\"folder\" /> <FormattedMessage id=\"file.open\" defaultMessage=\"Open ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileOpen;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onTitleChange: Dispatch<string>;\n}\n\nfunction FileRename({ file, onTitleChange }: Props) {\n  const intl = useIntl();\n\n  function handleClick(): void {\n    const message = intl.formatMessage({\n      id: \"file.rename.message\",\n      defaultMessage: \"New document title\",\n    });\n    const newTitle = window.prompt(message, file.title);\n    if (newTitle !== null) {\n      onTitleChange(newTitle);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"pencil\" />{\" \"}\n      <FormattedMessage\n        id=\"file.rename\"\n        defaultMessage='Rename \"{title}\" ...'\n        values={{ title: file.title }}\n      />\n    </DropdownItem>\n  );\n}\n\nexport default FileRename;\n","import { FormattedMessage } from \"react-intl\";\nimport { fileSerializer } from \"../../serializer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction FileSave({ file }: Props) {\n  function handleClick() {\n    const content = btoa(fileSerializer.saveToString(file));\n    const url = new URL(`data:text/x-uml;base64,${content}`);\n\n    downloadFile(`${sanitizeFilename(file.title)}.uml`, url.toString());\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-S\">\n      <Icon name=\"cloud-download\" /> <FormattedMessage id=\"file.save\" defaultMessage=\"Save ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default FileSave;\n","import { Dispatch } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ViewOptions } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n}\n\nfunction ToggleGrid({ viewOptions, onViewOptionsChange }: Props) {\n  const { grid } = viewOptions;\n  const icon = grid ? \"grid-3x3-gap-fill\" : \"grid-3x3-gap\";\n\n  function handleClick() {\n    onViewOptionsChange({ ...viewOptions, grid: !grid });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Alt-G\">\n      <Icon name={icon} /> <FormattedMessage id=\"view.grid\" defaultMessage=\"Toggle Grid\" />\n    </DropdownItem>\n  );\n}\n\nexport default ToggleGrid;\n","import { Color } from \"../css\";\nimport { Classifier, ClassifierRenderer, Renderer, Shape } from \"../model\";\nimport { PADDING } from \"../constants\";\nimport Canvas from \"./Canvas\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasClassifierRenderer implements ClassifierRenderer {\n  private readonly renderer: Renderer;\n  private readonly context: RenderContext;\n  private readonly canvas: Canvas;\n\n  constructor(renderer: Renderer, context: RenderContext, canvas: Canvas) {\n    this.renderer = renderer;\n    this.context = context;\n    this.canvas = canvas;\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.context.push(\n      classifier.getTagName(),\n      classifier.getWidth() - 2 * PADDING,\n      classifier.getHeight() - 2 * PADDING,\n    );\n\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.applyStyle(classifier);\n    this.drawShape(classifier);\n    this.canvas.fill();\n    this.canvas.stroke();\n    this.canvas.clip();\n\n    this.canvas.translate(PADDING, PADDING);\n    for (const child of classifier.getChildren()) {\n      child.render(this.renderer);\n    }\n\n    this.canvas.restore();\n\n    this.context.pop();\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.drawShape(classifier);\n    const result = this.canvas.isPointInPath(x, y);\n    this.canvas.restore();\n\n    return result;\n  }\n\n  private applyStyle(classifier: Classifier): void {\n    const properties = this.context.getStyleProperties();\n    this.canvas.lineWidth = properties.getFloat(\"line-width\", 1.5);\n    this.canvas.strokeColor = properties.getColor(\"stroke\", Color.DARK);\n    let fill = properties.getColor(\"fill\", Color.WHITE);\n    if (classifier.isHovered()) {\n      fill = fill.mix(Color.INFO, 0.25);\n    }\n    this.canvas.fillColor = fill;\n  }\n\n  private drawShape(classifier: Classifier): void {\n    this.canvas.beginPath();\n    switch (classifier.shape) {\n      case Shape.RECTANGLE:\n        this.drawRectangleShape(classifier);\n        return;\n      case Shape.ELLIPSE:\n        this.drawEllipseShape(classifier);\n        return;\n      case Shape.FOLDER:\n        this.drawFolderShape(classifier);\n        return;\n      case Shape.NOTE:\n        this.drawNoteShape(classifier);\n        return;\n      case Shape.BOX:\n        this.drawBoxShape(classifier);\n        return;\n      case Shape.FILE:\n        this.drawFileShape(classifier);\n        return;\n      case Shape.COMPONENT:\n        this.drawComponentShape(classifier);\n        return;\n    }\n  }\n\n  private drawBoxShape(classifier: Classifier) {\n    const BOX_DEPTH = 20;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.rect(0, 0, w, h);\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(w, 0);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.lineTo(BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w, 0);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w + BOX_DEPTH, h - BOX_DEPTH);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n  }\n\n  private drawRectangleShape(classifier: Classifier) {\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawEllipseShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.ellipse(0, 0, w, h);\n  }\n\n  private drawFolderShape(classifier: Classifier) {\n    const FOLDER_WIDTH = 80;\n    const FOLDER_HEIGHT = 20;\n    this.canvas.rect(0, -FOLDER_HEIGHT, FOLDER_WIDTH, FOLDER_HEIGHT);\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawNoteShape(classifier: Classifier) {\n    const NOTE_SIZE = 30;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w - NOTE_SIZE, h - NOTE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawFileShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const FILE_SIZE = 30;\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(FILE_SIZE, FILE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawComponentShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const COMPONENT_WIDTH = 40;\n    const COMPONENT_HEIGHT = 20;\n    const COMPONENT_Y = (h - COMPONENT_HEIGHT * 3) / 2;\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.rect(COMPONENT_WIDTH / -2, COMPONENT_Y, COMPONENT_WIDTH, COMPONENT_HEIGHT);\n    this.canvas.rect(\n      COMPONENT_WIDTH / -2,\n      COMPONENT_Y + 2 * COMPONENT_HEIGHT,\n      COMPONENT_WIDTH,\n      COMPONENT_HEIGHT,\n    );\n  }\n}\n\nexport default CanvasClassifierRenderer;\n","import { Color } from \"../css\";\nimport { LinePattern, Relationship, RelationshipRenderer, Tip } from \"../model\";\nimport Canvas from \"./Canvas\";\n\nclass CanvasRelationshipRenderer implements RelationshipRenderer {\n  private readonly canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(relationship.getX1(), relationship.getY1());\n    this.canvas.lineTo(relationship.getX2(), relationship.getY2());\n    this.applyRelationshipStyle(relationship);\n    this.canvas.stroke();\n    this.drawFromTip(relationship);\n    this.drawToTip(relationship);\n    this.canvas.restore();\n  }\n\n  private applyRelationshipStyle(relationship: Relationship): void {\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeColor = Color.DARK;\n    this.canvas.fillColor = Color.WHITE;\n    switch (relationship.linePattern) {\n      case LinePattern.SOLID:\n        this.canvas.setLineDash([]);\n        break;\n      case LinePattern.DOTS:\n        this.canvas.setLineDash([2, 2]);\n        break;\n      case LinePattern.SMALL_DASHES:\n        this.canvas.setLineDash([5, 5]);\n        break;\n      case LinePattern.LARGE_DASHES:\n        this.canvas.setLineDash([10, 10]);\n        break;\n      case LinePattern.TIGHT_DASHES:\n        this.canvas.setLineDash([15, 5]);\n        break;\n    }\n  }\n\n  private drawFromTip(relationship: Relationship): void {\n    if (relationship.fromTip !== Tip.NONE) {\n      this.canvas.setLineDash([]);\n      this.canvas.save();\n      this.canvas.translate(relationship.getX1(), relationship.getY1());\n      this.canvas.rotate(relationship.getAngle() + Math.PI);\n      this.drawTip(relationship.fromTip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawToTip(relationship: Relationship): void {\n    if (relationship.toTip !== Tip.NONE) {\n      this.canvas.setLineDash([]);\n      this.canvas.save();\n      this.canvas.translate(relationship.getX2(), relationship.getY2());\n      this.canvas.rotate(relationship.getAngle());\n      this.drawTip(relationship.toTip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawTip(tip: Tip): void {\n    switch (tip) {\n      case Tip.ARROW:\n        this.drawArrow();\n        break;\n      case Tip.TRIANGLE:\n        this.drawTriangle();\n        break;\n      case Tip.FILLED_TRIANGLE:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawTriangle();\n        break;\n      case Tip.DIAMOND:\n        this.drawDiamond();\n        break;\n      case Tip.FILLED_DIAMOND:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawDiamond();\n        break;\n      case Tip.CIRCLE:\n        this.drawCircle();\n        break;\n      case Tip.FILLED_CIRCLE:\n        this.canvas.fillColor = this.canvas.strokeColor;\n        this.drawCircle();\n        break;\n    }\n  }\n\n  private drawArrow() {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 8);\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, -8);\n    this.canvas.closePath();\n    this.canvas.stroke();\n  }\n\n  private drawTriangle(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 10);\n    this.canvas.lineTo(-20, -10);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawDiamond(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-15, 8);\n    this.canvas.lineTo(-30, 0);\n    this.canvas.lineTo(-15, -8);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawCircle(): void {\n    this.canvas.beginPath();\n    this.canvas.ellipse(-20, -10, 20, 20);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n}\n\nexport default CanvasRelationshipRenderer;\n","import { Anchor } from \"../model\";\n\nclass Handle {\n  readonly x: number;\n  readonly y: number;\n  readonly anchor: Anchor;\n\n  constructor(x: number, y: number, anchor: Anchor) {\n    this.x = x;\n    this.y = y;\n    this.anchor = anchor;\n  }\n}\n\nexport default Handle;\n","import { Color } from \"../css\";\nimport Canvas from \"./Canvas\";\n\nclass HTML5Canvas implements Canvas {\n  private readonly ctx: CanvasRenderingContext2D;\n\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx;\n  }\n\n  get fillColor(): Color {\n    return Color.fromHexString(String(this.ctx.fillStyle));\n  }\n\n  set fillColor(color: Color) {\n    this.ctx.fillStyle = color.toHexString();\n  }\n\n  get strokeColor(): Color {\n    return Color.fromHexString(String(this.ctx.strokeStyle));\n  }\n\n  set strokeColor(color: Color) {\n    this.ctx.strokeStyle = color.toHexString();\n  }\n\n  get lineWidth(): number {\n    return this.ctx.lineWidth;\n  }\n\n  set lineWidth(width: number) {\n    this.ctx.lineWidth = width;\n  }\n\n  get fontStyle(): string {\n    return this.getFontAttribute(0);\n  }\n\n  set fontStyle(fontStyle: string) {\n    this.updateFontAttribute(0, fontStyle);\n  }\n\n  get fontWeight(): string {\n    return this.getFontAttribute(1);\n  }\n\n  set fontWeight(fontWeight: string) {\n    this.updateFontAttribute(1, fontWeight);\n  }\n\n  get fontSize(): string {\n    return this.getFontAttribute(2);\n  }\n\n  set fontSize(fontSize: string) {\n    this.updateFontAttribute(2, fontSize);\n  }\n\n  get fontFamily(): string {\n    return this.getFontAttribute(3);\n  }\n\n  set fontFamily(fontFamily: string) {\n    this.updateFontAttribute(3, fontFamily);\n  }\n\n  setLineDash(dash: number[]): void {\n    this.ctx.setLineDash(dash);\n  }\n\n  save(): void {\n    this.ctx.save();\n  }\n\n  restore(): void {\n    this.ctx.restore();\n  }\n\n  translate(x: number, y: number): void {\n    this.ctx.translate(x, y);\n  }\n\n  rotate(angle: number): void {\n    this.ctx.rotate(angle);\n  }\n\n  beginPath(): void {\n    this.ctx.beginPath();\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    this.ctx.rect(x, y, width, height);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number): void {\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    this.ctx.ellipse(x + radiusX, y + radiusY, radiusX, radiusY, 0, 0, Math.PI * 2);\n  }\n\n  moveTo(x: number, y: number): void {\n    this.ctx.moveTo(x, y);\n  }\n\n  lineTo(x: number, y: number): void {\n    this.ctx.lineTo(x, y);\n  }\n\n  isPointInPath(x: number, y: number): boolean {\n    return this.ctx.isPointInPath(x, y);\n  }\n\n  closePath(): void {\n    this.ctx.closePath();\n  }\n\n  fill(): void {\n    this.ctx.fill();\n  }\n\n  stroke(): void {\n    this.ctx.stroke();\n  }\n\n  clip(): void {\n    this.ctx.clip();\n  }\n\n  fillText(text: string, anchor: \"start\" | \"middle\" | \"end\", x: number, y: number): void {\n    const metrics = this.ctx.measureText(text);\n    const anchorY = y + metrics.fontBoundingBoxAscent;\n    let anchorX = x;\n    if (anchor === \"middle\") {\n      anchorX = anchorX + metrics.width / 2;\n    } else if (anchor === \"end\") {\n      anchorX = anchorX + metrics.width;\n    }\n    this.ctx.fillText(text, anchorX, anchorY);\n  }\n\n  private getFontAttribute(index: number): string {\n    return this.ctx.font.split(\" \", 4)[index];\n  }\n\n  private updateFontAttribute(index: number, value: string): void {\n    const attrs = this.ctx.font.split(\" \", 4);\n    attrs[index] = value;\n    this.ctx.font = attrs.join(\" \");\n  }\n}\n\nexport default HTML5Canvas;\n","import { PropertyMap, Style } from \"../css\";\n\nclass RenderContext {\n  private readonly width: number[];\n  private readonly height: number[];\n  private readonly context: string[];\n  private readonly style: Style;\n\n  constructor(canvasWidth: number, canvasHeight: number, style: Style) {\n    this.width = [canvasWidth];\n    this.height = [canvasHeight];\n    this.context = [];\n    this.style = style;\n  }\n\n  push(name: string, width?: number, height?: number): void {\n    this.context.unshift(name);\n    this.width.unshift(width ?? this.getWidth());\n    this.height.unshift(height ?? this.getHeight());\n  }\n\n  pop(): void {\n    this.context.shift();\n    this.width.shift();\n    this.height.shift();\n  }\n\n  getName(): string {\n    return this.context[0];\n  }\n\n  getWidth(): number {\n    return this.width[0];\n  }\n\n  getHeight(): number {\n    return this.height[0];\n  }\n\n  getStyleProperties(): PropertyMap {\n    return this.style.getProperties([...this.context].reverse());\n  }\n}\n\nexport default RenderContext;\n","import { GRID, HANDLE_RADIUS, PADDING } from \"../constants\";\nimport { Color, Style } from \"../css\";\nimport {\n  Anchor,\n  Classifier,\n  Diagram,\n  Relationship,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasOptions from \"./CanvasOptions\";\nimport CanvasRelationshipRenderer from \"./CanvasRelationshipRenderer\";\nimport Handle from \"./Handle\";\nimport HTML5Canvas from \"./HTML5Canvas\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n  private readonly classifierRenderer: CanvasClassifierRenderer;\n  private readonly relationshipRenderer: CanvasRelationshipRenderer;\n  private readonly translateX: number;\n  private readonly translateY: number;\n\n  constructor(canvas: HTMLCanvasElement, style: Style, options: CanvasOptions) {\n    this.context = new RenderContext(canvas.width, canvas.height, style);\n    this.translateX = options.translateX;\n    this.translateY = options.translateY;\n    this.canvas = canvas.getContext(\"2d\")!;\n    const html5Canvas = new HTML5Canvas(this.canvas);\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, html5Canvas);\n    this.relationshipRenderer = new CanvasRelationshipRenderer(html5Canvas);\n  }\n\n  clear(): void {\n    this.canvas.clearRect(0, 0, this.context.getWidth(), this.context.getHeight());\n  }\n\n  renderGrid(): void {\n    const minX = -Math.floor(this.translateX / GRID) * GRID;\n    const maxX = Math.floor(this.context.getWidth() - this.translateX / GRID) * GRID;\n    const minY = -Math.floor(this.translateY / GRID) * GRID;\n    const maxY = Math.floor(this.context.getHeight() - this.translateY / GRID) * GRID;\n\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    this.canvas.beginPath();\n    this.canvas.strokeStyle = \"#00000033\";\n    for (let x = minX; x < maxX; x += GRID) {\n      this.canvas.moveTo(x, -this.translateY);\n      this.canvas.lineTo(x, this.context.getHeight() - this.translateY);\n    }\n    for (let y = minY; y < maxY; y += GRID) {\n      this.canvas.moveTo(-this.translateX, y);\n      this.canvas.lineTo(this.context.getWidth() - this.translateX, y);\n    }\n    this.canvas.stroke();\n    this.canvas.restore();\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n    this.renderHandles(diagram);\n    this.canvas.restore();\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.relationshipRenderer.renderRelationship(relationship);\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"14pt\", \"left\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"14pt\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.stroke();\n    this.canvas.restore();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"12pt\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  private drawText(text: string, size: string, align: \"left\" | \"center\") {\n    const properties = this.context.getStyleProperties();\n    const weight = properties.getString(\"font-weight\", \"normal\");\n    const style = properties.getString(\"font-style\", \"normal\");\n    const family = properties.getString(\"font-family\", \"Arial, Helvetica, system-ui, sans-serif\");\n\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.font = `${style} ${weight} ${size} ${family}`;\n    this.canvas.fillStyle = properties.getColor(\"color\", Color.DARK).toHexString();\n    const metrics = this.canvas.measureText(text);\n    const x = align === \"center\" ? (this.context.getWidth() - metrics.width) / 2 : 0;\n    this.canvas.fillText(text, x, metrics.fontBoundingBoxAscent);\n    this.canvas.restore();\n  }\n\n  private renderHandles(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.fillStyle = \"white\";\n    this.canvas.strokeStyle = \"black\";\n    this.canvas.lineWidth = 1;\n\n    for (const { x, y } of this.getHandles(diagram)) {\n      this.renderHandleAtPoint(x, y);\n    }\n\n    this.canvas.restore();\n  }\n\n  private *getHandles(diagram: Diagram): Generator<Handle> {\n    for (const child of diagram.getChildren()) {\n      if (child instanceof Classifier && child.isSelected()) {\n        yield* this.getClassifierHandles(child);\n      }\n    }\n  }\n\n  private renderHandleAtPoint(x: number, y: number): void {\n    this.canvas.beginPath();\n    this.canvas.rect(x - HANDLE_RADIUS, y - HANDLE_RADIUS, HANDLE_RADIUS * 2, HANDLE_RADIUS * 2);\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  findHandleForPoint(diagram: Diagram, x: number, y: number): Handle | undefined {\n    for (const handle of this.getHandles(diagram)) {\n      if (this.isPointInHandle(handle, x, y)) {\n        return handle;\n      }\n    }\n    return undefined;\n  }\n\n  private isPointInHandle(handle: Handle, x: number, y: number): boolean {\n    return Math.abs(x - handle.x) <= HANDLE_RADIUS && Math.abs(y - handle.y) <= HANDLE_RADIUS;\n  }\n\n  private *getClassifierHandles(classifier: Classifier): Generator<Handle> {\n    const x1 = classifier.getLeft();\n    const x2 = classifier.getRight();\n    const y1 = classifier.getTop();\n    const y2 = classifier.getBottom();\n\n    yield new Handle(x1, y1, Anchor.NW);\n    yield new Handle(classifier.getCenterX(), y1, Anchor.N);\n    yield new Handle(x2, y1, Anchor.NE);\n    yield new Handle(x1, classifier.getCenterY(), Anchor.W);\n    yield new Handle(x2, classifier.getCenterY(), Anchor.E);\n    yield new Handle(x1, y2, Anchor.SW);\n    yield new Handle(classifier.getCenterX(), y2, Anchor.S);\n    yield new Handle(x2, y2, Anchor.SE);\n  }\n}\n\nexport default CanvasRenderer;\n","import { Color } from \"../css\";\nimport Canvas from \"./Canvas\";\n\nclass SVGCanvas implements Canvas {\n  fillColor = Color.WHITE;\n  strokeColor = Color.DARK;\n  lineWidth = 1;\n  fontFamily = \"system-ui\";\n  fontSize = \"1rem\";\n  fontStyle = \"normal\";\n  fontWeight = \"normal\";\n  private readonly document: Document;\n  private readonly stack: SVGElement[];\n  private readonly paths: SVGElement[] = [];\n  private readonly saved: SVGElement[] = [];\n  private path?: SVGPathElement;\n  private dash: number[] = [];\n\n  constructor(container: SVGElement) {\n    this.document = container.ownerDocument;\n    this.stack = [container];\n  }\n\n  setLineDash(dash: number[]): void {\n    this.dash = dash;\n  }\n\n  save(): void {\n    this.saved.push(this.getContainer());\n  }\n\n  restore(): void {\n    const saved = this.saved.pop()!;\n    this.stack.splice(this.stack.indexOf(saved) + 1);\n  }\n\n  translate(x: number, y: number): void {\n    const svg = this.createSVG(\"g\");\n    svg.setAttribute(\"transform\", `translate(${x},${y})`);\n    this.getContainer().append(svg);\n\n    this.stack.push(svg);\n  }\n\n  rotate(angle: number): void {\n    const svg = this.createSVG(\"g\");\n    svg.setAttribute(\"transform\", `rotate(${this.radiansToDegrees(angle)})`);\n    this.getContainer().append(svg);\n\n    this.stack.push(svg);\n  }\n\n  beginPath(): void {\n    this.paths.splice(0);\n  }\n\n  rect(x: number, y: number, width: number, height: number): void {\n    const rect = this.createSVG(\"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"height\", String(height));\n    this.paths.push(rect);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number): void {\n    const ellipse = this.createSVG(\"ellipse\");\n    const radiusX = width / 2;\n    const radiusY = height / 2;\n    ellipse.setAttribute(\"cx\", String(x + radiusX));\n    ellipse.setAttribute(\"cy\", String(y + radiusY));\n    ellipse.setAttribute(\"rx\", String(radiusX));\n    ellipse.setAttribute(\"ry\", String(radiusY));\n    this.paths.push(ellipse);\n  }\n\n  moveTo(x: number, y: number): void {\n    this.path = this.createSVG(\"path\");\n    this.path.setAttribute(\"d\", `M${x},${y}`);\n    this.paths.push(this.path);\n  }\n\n  lineTo(x: number, y: number): void {\n    const data = this.path!.getAttribute(\"d\");\n    this.path!.setAttribute(\"d\", `${data} L${x},${y}`);\n  }\n\n  closePath(): void {\n    const data = this.path!.getAttribute(\"d\");\n    this.path!.setAttribute(\"d\", `${data} Z`);\n  }\n\n  isPointInPath(x: number, y: number): boolean {\n    return false;\n  }\n\n  fill(): void {\n    this.appendPaths();\n    for (const path of this.paths) {\n      path.setAttribute(\"fill\", this.fillColor.toHexString());\n    }\n  }\n\n  stroke(): void {\n    this.appendPaths();\n    for (const path of this.paths) {\n      path.setAttribute(\"stroke\", this.strokeColor.toHexString());\n      path.setAttribute(\"stroke-width\", String(this.lineWidth));\n      path.setAttribute(\"stroke-dasharray\", this.dash.join(\" \"));\n    }\n  }\n\n  clip(): void {}\n\n  fillText(text: string, anchor: \"start\" | \"middle\" | \"end\", x: number, y: number): void {\n    const textEl = this.createSVG(\"text\");\n    textEl.setAttribute(\"x\", String(x));\n    textEl.setAttribute(\"y\", String(y + 10));\n    textEl.setAttribute(\"text-anchor\", anchor);\n    textEl.setAttribute(\"font-family\", this.fontFamily);\n    textEl.setAttribute(\"font-size\", this.fontSize);\n    textEl.setAttribute(\"font-style\", this.fontStyle);\n    textEl.setAttribute(\"font-weight\", this.fontWeight);\n    textEl.appendChild(this.document.createTextNode(this.encodeUTF8(text)));\n    this.paths.push(textEl);\n    this.fill();\n  }\n\n  private encodeUTF8(text: string): string {\n    const textEncoder = new TextEncoder();\n    const encoded = textEncoder.encode(text);\n    return String.fromCharCode(...encoded);\n  }\n\n  private appendPaths(): void {\n    this.getContainer().append(...this.paths);\n  }\n\n  private getContainer(): SVGElement {\n    return this.stack[this.stack.length - 1];\n  }\n\n  private createSVG<K extends keyof SVGElementTagNameMap>(element: K): SVGElementTagNameMap[K] {\n    return this.document.createElementNS(\"http://www.w3.org/2000/svg\", element);\n  }\n\n  private radiansToDegrees(angle: number): number {\n    return (180 * angle) / Math.PI;\n  }\n}\n\nexport default SVGCanvas;\n","import { PADDING } from \"../constants\";\nimport { Color, Style } from \"../css\";\nimport {\n  Classifier,\n  ClassifierRenderer,\n  Diagram,\n  Relationship,\n  RelationshipRenderer,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasRelationshipRenderer from \"./CanvasRelationshipRenderer\";\nimport RenderContext from \"./RenderContext\";\nimport SVGCanvas from \"./SVGCanvas\";\n\nclass SVGRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: SVGCanvas;\n  private readonly classifierRenderer: ClassifierRenderer;\n  private readonly relationshipRenderer: RelationshipRenderer;\n\n  constructor(svg: SVGSVGElement, style: Style) {\n    this.context = new RenderContext(svg.width.baseVal.value, svg.height.baseVal.value, style);\n    this.canvas = new SVGCanvas(svg);\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, this.canvas);\n    this.relationshipRenderer = new CanvasRelationshipRenderer(this.canvas);\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.relationshipRenderer.renderRelationship(relationship);\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"14pt\", \"start\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"14pt\", \"middle\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"12pt\", \"middle\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeColor = Color.DARK;\n    this.canvas.stroke();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  private drawText(text: string, size: string, align: \"start\" | \"middle\") {\n    const properties = this.context.getStyleProperties();\n    this.canvas.fontWeight = properties.getString(\"font-weight\", \"normal\");\n    this.canvas.fontStyle = properties.getString(\"font-style\", \"normal\");\n    this.canvas.fontSize = properties.getString(\"font-size\", size);\n    this.canvas.fontFamily = properties.getString(\n      \"font-family\",\n      \"Arial, Helvetica, system-ui, sans-serif\",\n    );\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.fillColor = properties.getColor(\"color\", Color.DARK);\n    const x = align === \"middle\" ? this.context.getWidth() / 2 : 0;\n    this.canvas.fillText(text, align, x, 4);\n    this.canvas.restore();\n  }\n}\n\nexport default SVGRenderer;\n","import { FormattedMessage } from \"react-intl\";\nimport { MARGIN } from \"../../constants\";\nimport { CanvasRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction PNGExport({ file }: Props) {\n  function handleClick() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = file.model.getWidth() + 2 * MARGIN;\n    canvas.height = file.model.getHeight() + 2 * MARGIN;\n\n    const renderer = new CanvasRenderer(canvas, file.style, {\n      translateX: MARGIN - file.model.getLeft(),\n      translateY: MARGIN - file.model.getTop(),\n    });\n    renderer.renderDiagram(file.model);\n\n    const dataURL = canvas.toDataURL(\"image/png\");\n    downloadFile(`${sanitizeFilename(file.title)}.png`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-E\">\n      <Icon name=\"image\" /> <FormattedMessage id=\"export.png\" defaultMessage=\"As PNG ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default PNGExport;\n","import { FormattedMessage } from \"react-intl\";\nimport { MARGIN } from \"../../constants\";\nimport { SVGRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction SVGExport({ file }: Props) {\n  function handleClick() {\n    const viewBox = [\n      file.model.getLeft() - MARGIN,\n      file.model.getTop() - MARGIN,\n      file.model.getWidth() + 2 * MARGIN,\n      file.model.getHeight() + 2 * MARGIN,\n    ].join(\" \");\n    const root = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    root.setAttribute(\"width\", String(file.model.getWidth() + 2 * MARGIN));\n    root.setAttribute(\"height\", String(file.model.getHeight() + 2 * MARGIN));\n    root.setAttribute(\"viewBox\", viewBox);\n\n    const renderer = new SVGRenderer(root, file.style);\n    renderer.renderDiagram(file.model);\n\n    const xmlSerializer = new XMLSerializer();\n    const svg = xmlSerializer.serializeToString(root);\n    const dataURL = new URL(`data:image/svg+xml;base64,${btoa(svg)}`).toString();\n    downloadFile(`${sanitizeFilename(file.title)}.svg`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-Shift-E\">\n      <Icon name=\"code-slash\" /> <FormattedMessage id=\"export.svg\" defaultMessage=\"As SVG ...\" />\n    </DropdownItem>\n  );\n}\n\nexport default SVGExport;\n","import { Dispatch } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Element } from \"../../model\";\nimport { ViewOptions, File, SerializableFile } from \"../../utils\";\nimport { DropdownDivider, DropdownItem, Flag, Icon, Menu, MenuBar } from \"../blocks\";\nimport DuplicateElement from \"./DuplicateElement\";\nimport FileNew from \"./FileNew\";\nimport FileOpen from \"./FileOpen\";\nimport FileRename from \"./FileRename\";\nimport FileSave from \"./FileSave\";\nimport ToggleGrid from \"./ToggleGrid\";\nimport PNGExport from \"./PNGExport\";\nimport SVGExport from \"./SVGExport\";\n\ninterface Props {\n  file: File;\n  viewOptions: ViewOptions;\n  onFileChange: Dispatch<SerializableFile>;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n  onLocaleChange: Dispatch<string>;\n  onAddElement: Dispatch<Element>;\n}\n\nfunction AppMenu({\n  file,\n  viewOptions,\n  onFileChange,\n  onViewOptionsChange,\n  onLocaleChange,\n  onAddElement,\n}: Props) {\n  const intl = useIntl();\n\n  return (\n    <MenuBar>\n      <Menu title={intl.formatMessage({ id: \"file\", defaultMessage: \"File\" })}>\n        <FileNew onFileChange={onFileChange} />\n        <DropdownDivider />\n        <FileOpen onFileChange={onFileChange} />\n        <FileSave file={file} />\n        <DropdownDivider />\n        <FileRename file={file} onTitleChange={(title) => onFileChange({ ...file, title })} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"edit\", defaultMessage: \"Edit\" })}>\n        <DuplicateElement file={file} onAddElement={onAddElement} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"view\", defaultMessage: \"View\" })}>\n        <ToggleGrid viewOptions={viewOptions} onViewOptionsChange={onViewOptionsChange} />\n      </Menu>\n\n      <Menu title={intl.formatMessage({ id: \"export\", defaultMessage: \"Export\" })}>\n        <PNGExport file={file} />\n        <SVGExport file={file} />\n      </Menu>\n\n      <div className=\"flex-grow-1\" />\n\n      <Menu placement=\"end\" title={<Icon name=\"globe\" />}>\n        <DropdownItem onClick={() => onLocaleChange(\"de\")}>\n          <Flag country=\"de\" /> Deutsch\n        </DropdownItem>\n        <DropdownItem onClick={() => onLocaleChange(\"en\")}>\n          <Flag country=\"uk\" /> English\n        </DropdownItem>\n      </Menu>\n    </MenuBar>\n  );\n}\n\nexport default AppMenu;\n","import { MouseEvent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { GRID } from \"../../constants\";\nimport { Style } from \"../../css\";\nimport { Anchor, Classifier, Diagram, Element, Rectangle } from \"../../model\";\nimport { CanvasRenderer, Handle } from \"../../renderer\";\nimport {\n  Coordinates,\n  getMouseCoordinates,\n  roundCoordsBy,\n  subtractCoords,\n  ViewOptions,\n} from \"../../utils\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  diagram: Diagram;\n  style: Style;\n  onChange?: (element: Element) => void;\n}\n\nfunction createRenderer(canvas: HTMLCanvasElement, style: Style): CanvasRenderer {\n  return new CanvasRenderer(canvas, style, {\n    translateX: canvas.width / 2,\n    translateY: canvas.height / 2,\n  });\n}\n\nfunction Canvas({ viewOptions, diagram, style, onChange }: Props) {\n  const options = useRef(viewOptions);\n  const div = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const mouseDownCoords = useRef<Coordinates>(null) as MutableRefObject<Coordinates | null>;\n  const mouseDownRectangle = useRef<Rectangle>(null) as MutableRefObject<Rectangle | null>;\n  const mouseDownObject = useRef<Handle | Element>(null) as MutableRefObject<\n    Handle | Element | null\n  >;\n\n  useEffect(() => {\n    options.current = viewOptions;\n  });\n\n  useEffect(() => {\n    function onResize() {\n      const rect = div.current!.getBoundingClientRect();\n      canvas.current!.width = Math.trunc(rect.width);\n      canvas.current!.height = Math.trunc(rect.height);\n\n      const renderer = createRenderer(canvas.current!, style);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [viewOptions, diagram, style]);\n\n  function setCursor(cursor: string): void {\n    canvas.current!.style.cursor = cursor;\n  }\n\n  function handleHandleUpdate(target: Classifier, handle: Handle, deltaX: number, deltaY: number) {\n    if (handle.anchor === Anchor.W || handle.anchor === Anchor.NW || handle.anchor === Anchor.SW) {\n      target.setWidth(mouseDownRectangle.current!.width - deltaX);\n      target.setLeft(mouseDownRectangle.current!.x + deltaX);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.E || handle.anchor === Anchor.NE || handle.anchor === Anchor.SE) {\n      target.setWidth(mouseDownRectangle.current!.width + deltaX);\n      target.setLeft(mouseDownRectangle.current!.x);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.N || handle.anchor === Anchor.NW || handle.anchor === Anchor.NE) {\n      target.setHeight(mouseDownRectangle.current!.height - deltaY);\n      target.setTop(mouseDownRectangle.current!.y + deltaY);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.S || handle.anchor === Anchor.SW || handle.anchor === Anchor.SE) {\n      target.setHeight(mouseDownRectangle.current!.height + deltaY);\n      target.setTop(mouseDownRectangle.current!.y);\n      onChange?.(target);\n    }\n  }\n\n  function handleLeftMouseButtonMove(x: number, y: number) {\n    const target = diagram.find((el) => el.isSelected());\n    if (target instanceof Classifier) {\n      const { x: deltaX, y: deltaY } = roundCoordsBy(\n        subtractCoords({ x, y }, mouseDownCoords.current!),\n        GRID,\n      );\n      if (mouseDownObject.current === target) {\n        target.setLeft(mouseDownRectangle.current!.x + deltaX);\n        target.setTop(mouseDownRectangle.current!.y + deltaY);\n        onChange?.(target);\n        return;\n      }\n      if (mouseDownObject.current instanceof Handle) {\n        handleHandleUpdate(target, mouseDownObject.current, deltaX, deltaY);\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    if (event.buttons & 1) {\n      handleLeftMouseButtonMove(x, y);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n      return;\n    }\n\n    for (const element of diagram) {\n      element.setHovered(false);\n    }\n\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined) {\n      setCursor(`${Anchor[handle.anchor].toLowerCase()}-resize`);\n    } else {\n      setCursor(\"default\");\n\n      for (const classifier of diagram) {\n        if (classifier instanceof Classifier) {\n          const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n          if (isInClassifier) {\n            classifier.setHovered(true);\n            break;\n          }\n        }\n      }\n    }\n\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function renderMouseDown(renderer: CanvasRenderer, x: number, y: number) {\n    const selectedElement = diagram.find((el) => el.isSelected());\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined && selectedElement instanceof Classifier) {\n      mouseDownRectangle.current = selectedElement.getRectangle();\n      mouseDownCoords.current = { x, y };\n      mouseDownObject.current = handle;\n      return;\n    }\n\n    selectedElement?.setSelected(false);\n    for (const classifier of diagram) {\n      if (classifier instanceof Classifier) {\n        const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n        if (isInClassifier) {\n          classifier.setSelected(true);\n          mouseDownRectangle.current = classifier.getRectangle();\n          mouseDownCoords.current = { x, y };\n          mouseDownObject.current = classifier;\n          return;\n        }\n      }\n    }\n  }\n\n  function handleMouseDown(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    renderMouseDown(renderer, x, y);\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function handleMouseUp() {\n    mouseDownRectangle.current = null;\n    mouseDownCoords.current = null;\n    mouseDownObject.current = null;\n  }\n\n  return (\n    <div\n      ref={div}\n      className=\"Canvas\"\n      style={{\n        backgroundColor: \"hsl(220 9% 92% / 1)\",\n        gridArea: \"canvas\",\n      }}\n    >\n      <canvas\n        ref={canvas}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </div>\n  );\n}\n\nexport default Canvas;\n","import { Editor } from \"../blocks\";\n\ninterface Props {\n  css: string;\n  onChange?: (css: string) => void;\n}\n\nfunction CSSEditor({ css, onChange }: Props) {\n  return (\n    <div className=\"CSSEditor\" style={{ gridArea: \"css\", position: \"relative\" }}>\n      <Editor language=\"css\" value={css} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default CSSEditor;\n","import { MessageFormatElement } from \"intl-messageformat-parser\";\nimport React, { Dispatch, ReactNode, useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport DE_MESSAGES from \"../../i18n/de.json\";\nimport EN_MESSAGES from \"../../i18n/en.json\";\n\ninterface Props {\n  children?: (onLocaleChange: Dispatch<string>) => ReactNode;\n}\n\nfunction getMessagesForLocale(locale: string): Record<string, MessageFormatElement[]> {\n  switch (locale) {\n    case \"de\":\n      return DE_MESSAGES;\n    default:\n      return EN_MESSAGES;\n  }\n}\n\nfunction LocaleSwitch({ children }: Props) {\n  const [locale, setLocale] = useState(navigator.language.substring(0, 2));\n\n  return (\n    <IntlProvider messages={getMessagesForLocale(locale)} locale={locale} defaultLocale=\"en\">\n      {children?.(setLocale)}\n    </IntlProvider>\n  );\n}\n\nexport default LocaleSwitch;\n","import { Anchor, LinePattern, Shape, Tip } from \"../../model\";\n\nconst anchorSchema = Object.keys(Anchor)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst shapeSchema = Object.keys(Shape)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst tipSchema = Object.keys(Tip)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst linePatternSchema = Object.keys(LinePattern)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst classifierSchema = {\n  children: [\"Title\", \"Separator\", \"Method\", \"Stereotype\"],\n  attrs: {\n    x: null,\n    y: null,\n    width: null,\n    height: null,\n    anchor: anchorSchema,\n    shape: shapeSchema,\n  },\n};\n\nconst relationshipSchema = {\n  attrs: {\n    from: null,\n    fromTip: tipSchema,\n    to: null,\n    toTip: tipSchema,\n    linePattern: linePatternSchema,\n  },\n};\n\nconst classifiers = {\n  Class: classifierSchema,\n  Classifier: classifierSchema,\n  Component: classifierSchema,\n  DataType: classifierSchema,\n  Enumeration: classifierSchema,\n  Interface: classifierSchema,\n  Note: classifierSchema,\n  Object: classifierSchema,\n  Package: classifierSchema,\n  Primitive: classifierSchema,\n};\n\nconst relationships = {\n  Aggregation: relationshipSchema,\n  Anchor: relationshipSchema,\n  Association: relationshipSchema,\n  Composition: relationshipSchema,\n  Dependency: relationshipSchema,\n  DirectedAssociation: relationshipSchema,\n  Generalization: relationshipSchema,\n  Implementation: relationshipSchema,\n  Relationship: relationshipSchema,\n};\n\nconst schema = {\n  \"!top\": [\"Diagram\"],\n  \"!attrs\": {\n    id: null,\n    class: null,\n  },\n  Diagram: {\n    children: [...Object.keys(classifiers), ...Object.keys(relationships)],\n  },\n  ...classifiers,\n  ...relationships,\n};\n\nexport default schema;\n","import { Editor } from \"../blocks\";\nimport { xmlSchema } from \"../schemas\";\n\ninterface Props {\n  xml: string;\n  onChange: (xml: string) => void;\n}\n\nfunction XMLEditor({ xml, onChange }: Props) {\n  return (\n    <div className=\"XMLEditor\" style={{ gridArea: \"xml\", position: \"relative\" }}>\n      <Editor language=\"xml\" value={xml} schema={xmlSchema} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default XMLEditor;\n","import React, { Dispatch, useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../constants\";\nimport { parser, Style } from \"../css\";\nimport { useDocumentTitle } from \"../hooks\";\nimport { Diagram, Element } from \"../model\";\nimport { serializer } from \"../serializer\";\nimport { SerializableFile, ViewOptions } from \"../utils\";\nimport { AppMenu, Canvas, CSSEditor, XMLEditor } from \"./widgets\";\nimport \"./App.css\";\n\ninterface Props {\n  onLocaleChange: Dispatch<string>;\n}\n\nfunction App({ onLocaleChange }: Props) {\n  const intl = useIntl();\n  const [viewOptions, setViewOptions] = useState<ViewOptions>({ grid: false });\n  const [diagram, setDiagram] = useState(() => new Diagram());\n  const [style, setStyle] = useState(() => new Style());\n  const [title, setTitle] = useState(\"Untitled\");\n  const [xml, setXml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n\n  useDocumentTitle(\n    `${title} - ${intl.formatMessage({ id: \"title\", defaultMessage: \"UML Editor\" })}`,\n  );\n\n  function forceRerender(): void {\n    setViewOptions({ ...viewOptions });\n  }\n\n  function handleXmlChange(xml: string): void {\n    const diagram = serializer.deserialize(xml);\n    setDiagram(diagram);\n    setXml(xml);\n  }\n\n  function handleCssChange(css: string): void {\n    const style = parser.parseFromString(css);\n    setStyle(style);\n    setCss(css);\n  }\n\n  function handleCanvasChange(element: Element): void {\n    serializer.updateElement(element);\n    const xml = serializer.serialize(diagram);\n    setXml(xml);\n  }\n\n  function handleAddElement(element: Element): void {\n    diagram.addChild(element);\n    handleCanvasChange(diagram);\n    forceRerender();\n  }\n\n  function handleFileChange(file: SerializableFile): void {\n    const diagram = serializer.deserialize(file.xml);\n    const style = parser.parseFromString(file.css);\n    setTitle(file.title);\n    setCss(file.css);\n    setXml(file.xml);\n    setDiagram(diagram);\n    setStyle(style);\n  }\n\n  useEffect(() => {\n    const diagram = serializer.deserialize(INITIAL_XML);\n    const style = parser.parseFromString(INITIAL_CSS);\n    setDiagram(diagram);\n    setStyle(style);\n    setXml(INITIAL_XML);\n    setCss(INITIAL_CSS);\n  }, []);\n\n  return (\n    <div className=\"App bg-secondary\">\n      <AppMenu\n        file={{ title, model: diagram, style, xml, css }}\n        viewOptions={viewOptions}\n        onFileChange={handleFileChange}\n        onViewOptionsChange={setViewOptions}\n        onLocaleChange={onLocaleChange}\n        onAddElement={handleAddElement}\n      />\n      <XMLEditor xml={xml} onChange={handleXmlChange} />\n      <CSSEditor css={css} onChange={handleCssChange} />\n      <Canvas\n        viewOptions={viewOptions}\n        diagram={diagram}\n        style={style}\n        onChange={handleCanvasChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { LocaleSwitch } from \"./components/widgets\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <LocaleSwitch>{(onLocaleChange) => <App onLocaleChange={onLocaleChange} />}</LocaleSwitch>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}