{"version":3,"sources":["css/Color.ts","css/CSSToken.ts","parsing/Parser.ts","parsing/Tokenizer.ts","css/CSSTokenizer.ts","css/Property.ts","css/PropertyMap.ts","css/Style.ts","css/Rule.ts","css/Selector.ts","css/index.ts","css/CSSParser.ts","hooks/useDocumentTitle.ts","hooks/useId.ts","model/Anchor.ts","renderer/anchors.ts","model/AbstractElement.ts","model/Shape.ts","model/LinePattern.ts","model/Classifier.ts","model/Diagram.ts","model/Tip.ts","model/Relationship.ts","model/Separator.ts","model/Stereotype.ts","model/Text.ts","model/Title.ts","serializer/Serializer.ts","uml/Aggregation.ts","uml/Anchor.ts","uml/Association.ts","uml/Class.ts","uml/Component.ts","uml/Composition.ts","uml/DataType.ts","uml/Dependency.ts","uml/DirectedAssociation.ts","uml/Enumeration.ts","uml/Generalization.ts","uml/Implementation.ts","uml/Interface.ts","uml/Note.ts","uml/Package.ts","uml/Primitive.ts","serializer/index.ts","serializer/UMLSerializer.ts","components/blocks/ContainerFluid.tsx","components/blocks/DropdownItem.tsx","components/blocks/DropdownMenu.tsx","components/blocks/DropdownToggle.tsx","components/blocks/Editor.tsx","components/blocks/logo.png","components/blocks/MenuBar.tsx","components/blocks/Menu.tsx","components/widgets/FileRename.tsx","renderer/constants.ts","renderer/CanvasClassifierRenderer.ts","renderer/Handle.ts","renderer/RenderContext.ts","renderer/CanvasRenderer.ts","utils.ts","components/widgets/PNGExport.tsx","components/widgets/AppMenu.tsx","components/widgets/Canvas.tsx","components/widgets/CSSEditor.tsx","components/schemas/xmlSchema.ts","components/widgets/XMLEditor.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Color","red","green","blue","this","sanitizeComponent","intToHex","other","percentage","otherFactor","clamp","thisFactor","hexString","parseInt","slice","min","max","value","clamped","Math","round","toString","padStart","CYAN","fromHexString","WHITE","DARK","CSSToken","Parser","tokenizer","tokens","index","string","tokenize","parse","kind","token","Error","parsers","parser","parseOptional","undefined","result","Set","oldIndex","add","call","err","Tokenizer","subject","length","next","newIndex","push","search","match","startsWith","CSSTokenizer","matches","COLOR","NUMBER","LBRACE","RBRACE","COLON","SEMI","DOT","HASH","IDENTIFIER","ERROR","Property","key","Symbol","iterator","PropertyMap","properties","map","Map","property","entries","set","fallback","get","Style","rules","context","head","tail","hasTail","rule","selector","tag","addAll","getProperties","Rule","Selector","classes","id","parseRuleSet","parseSet","parseRule","parseSelector","consume","parsePropertySet","parseClassSet","parseOptionalId","parseProperty","parseIdentifier","parseOneOf","parseColor","parseNumber","parseClass","parseId","color","number","parseFloat","useDocumentTitle","title","useEffect","document","useId","Anchor","prefix","useRef","random","substring","current","qsin","anchor","NNW","SSW","N","S","NNE","SSE","qcos","ENE","WNW","E","W","ESE","WSW","Shape","AbstractElement","children","hovered","selected","child","delete","reverse","LinePattern","Classifier","x","y","width","height","shape","RECTANGLE","getLeft","getTop","left","top","renderer","renderClassifier","Diagram","renderDiagram","predicate","findElement","element","getChildren","getRight","getBottom","reduceClassifiers","acc","classifier","Infinity","bottom","right","reducer","seed","Tip","Relationship","from","fromAnchor","to","toAnchor","fromTip","NONE","toTip","linePattern","SOLID","getWidth","getHeight","atan2","getY2","getY1","getX2","getX1","renderRelationship","Separator","renderSeparator","Stereotype","renderStereotype","Text","text","renderText","Title","renderTitle","Serializer","serializer","elementMap","DOMParser","XMLSerializer","xml","clear","parseFromString","diagram","parseElement","documentElement","Model","hasElement","root","getElement","serializeToString","xmlElement","setClassifier","has","parsed","doParseElement","tagName","parseDiagram","parseClassifier","parseRelationship","parseTitle","parseText","parseChildren","constructor","parseAnchorAttribute","parseIntAttribute","parseEnumAttribute","setIntAttribute","getX","getY","relationship","parseClassifierAttribute","parseTipAttribute","parseLinePatternAttribute","textContent","target","addChild","console","error","attribute","hasAttribute","getAttribute","elementById","ownerDocument","getElementById","enumClass","item","Reflect","toUpperCase","Number","isNaN","setAttribute","String","removeAttribute","values","Aggregation","DIAMOND","DOTS","Association","Class","Component","COMPONENT","Composition","FILLED_DIAMOND","DataType","Dependency","ARROW","TIGHT_DASHES","DirectedAssociation","Enumeration","Generalization","TRIANGLE","Implementation","Interface","Note","NOTE","Package","FOLDER","Primitive","UML","ContainerFluid","className","DropdownItem","onClick","event","preventDefault","classNames","DropdownMenu","labelledBy","aria-labelledby","DropdownToggle","dropdown","ref","dispose","Dropdown","aria-expanded","data-bs-toggle","completeAfter","cm","pred","setTimeout","state","completionActive","showHint","completeSingle","CodeMirror","Pass","completeIfAfterLt","cur","getCursor","getRange","Pos","line","ch","completeIfInTag","tok","getTokenAt","type","test","charAt","innerMode","getMode","Editor","language","schema","onChange","onChangeRef","editor","mode","hintOptions","schemaInfo","codeMirror","fromTextArea","lineNumbers","theme","matchTags","autocorrect","extraKeys","toTextArea","handleChange","newValue","getValue","setValue","on","off","defaultValue","MenuBar","style","gridArea","alt","src","logo","Menu","active","FileRename","onTitleChange","newTitle","window","prompt","PADDING","HANDLE_RADIUS","CanvasClassifierRenderer","canvas","getTagName","save","translate","applyStyle","drawShape","fill","stroke","clip","render","restore","pop","isPointInPath","getStyleProperties","lineWidth","getFloat","strokeStyle","getColor","toHexString","isHovered","mix","fillStyle","beginPath","drawRectangleShape","ELLIPSE","drawEllipseShape","drawFolderShape","drawNoteShape","BOX","drawBoxShape","FILE","drawFileShape","drawComponentShape","BOX_DEPTH","w","h","rect","moveTo","lineTo","closePath","ellipse","PI","NOTE_SIZE","FILE_SIZE","COMPONENT_WIDTH","COMPONENT_HEIGHT","COMPONENT_Y","Handle","RenderContext","canvasWidth","canvasHeight","name","unshift","shift","CanvasRenderer","options","classifierRenderer","translateX","translateY","getContext","clearRect","renderHandles","isPointInClassifier","applyRelationshipStyle","drawFromTip","drawToTip","setLineDash","SMALL_DASHES","LARGE_DASHES","rotate","getAngle","drawTip","drawText","separator","stereotype","contextName","getName","size","align","weight","getString","font","metrics","measureText","fillText","fontBoundingBoxAscent","tip","drawArrow","drawTriangle","FILLED_TRIANGLE","drawDiamond","CIRCLE","drawCircle","FILLED_CIRCLE","getHandles","renderHandleAtPoint","isSelected","getClassifierHandles","handle","isPointInHandle","abs","x1","x2","y1","y2","NW","getCenterX","NE","getCenterY","SW","SE","getMouseCoordinates","clientX","clientY","boundingClientRect","currentTarget","getBoundingClientRect","PNGExport","createElement","dataURL","toDataURL","downloadLink","download","replace","href","click","AppMenu","createRenderer","Canvas","div","mouseDownCoords","mouseDownRectangle","mouseDownObject","setCursor","cursor","handleLeftMouseButtonMove","coord","by","vec1","vec2","find","el","deltaX","deltaY","setLeft","setTop","setWidth","setHeight","handleHandleUpdate","onResize","trunc","addEventListener","removeEventListener","backgroundColor","onMouseMove","buttons","setHovered","findHandleForPoint","toLowerCase","onMouseDown","selectedElement","getRectangle","setSelected","renderMouseDown","onMouseUp","CSSEditor","css","position","anchorSchema","Object","keys","filter","it","shapeSchema","tipSchema","classifierSchema","attrs","relationshipSchema","classifiers","relationships","class","XMLEditor","xmlSchema","App","useState","setDiagram","setStyle","setTitle","setXml","setCss","initialXml","initialCss","deserialize","updateElement","serialize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e7bf765c.chunk.js","sourcesContent":["class Color {\n  readonly red: number;\n  readonly green: number;\n  readonly blue: number;\n\n  static readonly CYAN = Color.fromHexString(\"#0dcaf0\");\n  static readonly WHITE = Color.fromHexString(\"#ffffff\");\n  static readonly DARK = Color.fromHexString(\"#212529\");\n\n  constructor(red: number, green: number, blue: number) {\n    this.red = Color.sanitizeComponent(red);\n    this.green = Color.sanitizeComponent(green);\n    this.blue = Color.sanitizeComponent(blue);\n  }\n\n  static fromHexString(hexString: string): Color {\n    const red = parseInt(hexString.slice(1, 3), 16);\n    const green = parseInt(hexString.slice(3, 5), 16);\n    const blue = parseInt(hexString.slice(5, 7), 16);\n    return new Color(red, green, blue);\n  }\n\n  private static clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n  }\n\n  private static sanitizeComponent(value: number): number {\n    const clamped = Color.clamp(0, 255, value);\n    return Math.round(clamped);\n  }\n\n  private static intToHex(value: number): string {\n    return value.toString(16).padStart(2, \"0\");\n  }\n\n  toHexString(): string {\n    return `#${Color.intToHex(this.red)}${Color.intToHex(this.green)}${Color.intToHex(this.blue)}`;\n  }\n\n  mix(other: Color, percentage: number): Color {\n    const otherFactor = Color.clamp(0, 1, percentage);\n    const thisFactor = 1 - otherFactor;\n    const red = thisFactor * this.red + otherFactor * other.red;\n    const green = thisFactor * this.green + otherFactor * other.green;\n    const blue = thisFactor * this.blue + otherFactor * other.blue;\n    return new Color(red, green, blue);\n  }\n}\n\nexport default Color;\n","enum CSSToken {\n  LBRACE,\n  RBRACE,\n  COLON,\n  SEMI,\n  DOT,\n  HASH,\n  COLOR,\n  NUMBER,\n  IDENTIFIER,\n  ERROR,\n}\n\nexport default CSSToken;\n","import Token from \"./Token\";\nimport Tokenizer from \"./Tokenizer\";\n\nabstract class Parser<T, D> {\n  private readonly tokenizer: Tokenizer<T>;\n  private tokens: Token<T>[] = [];\n  private index = 0;\n\n  constructor(tokenizer: Tokenizer<T>) {\n    this.tokenizer = tokenizer;\n  }\n\n  parseFromString(string: string): D {\n    this.index = 0;\n    this.tokens = this.tokenizer.tokenize(string);\n    return this.parse();\n  }\n\n  protected abstract parse(): D;\n\n  protected consume(kind: T): Token<T> {\n    const token = this.tokens[this.index];\n    if (token.kind === kind) {\n      this.index += 1;\n      return token;\n    } else {\n      throw new Error(`Expected ${kind}, but was ${token.kind}`);\n    }\n  }\n\n  protected parseOneOf<U1, U2, U3>(\n    parser1: () => U1,\n    parser2: () => U2,\n    parser3: () => U3,\n  ): U1 | U2 | U3;\n  protected parseOneOf<U1, U2>(parser1: () => U1, parser2: () => U2): U1 | U2;\n  protected parseOneOf<U1>(parser1: () => U1): U1;\n  protected parseOneOf(...parsers: Array<() => unknown>): unknown {\n    for (const parser of parsers) {\n      const value = this.parseOptional(parser);\n      if (value !== undefined) {\n        return value;\n      }\n    }\n\n    throw new Error(\"None of the one ofs matched\");\n  }\n\n  protected parseSet<U>(parser: () => U): Set<U> {\n    const result = new Set<U>();\n    while (true) {\n      const oldIndex = this.index;\n      try {\n        result.add(parser.call(this));\n      } catch (err) {\n        this.index = oldIndex;\n        return result;\n      }\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any tokens\");\n      }\n    }\n  }\n\n  protected parseOptional<U>(parser: () => U): U | undefined {\n    const oldIndex = this.index;\n    let result;\n    try {\n      result = parser.call(this);\n    } catch (err) {\n      this.index = oldIndex;\n      return undefined;\n    }\n\n    const newIndex = this.index;\n    if (newIndex <= oldIndex) {\n      throw new Error(\"Did not consume any tokens\");\n    }\n\n    return result;\n  }\n}\n\nexport default Parser;\n","import Token from \"./Token\";\n\nabstract class Tokenizer<T> {\n  private subject = \"\";\n  private index = 0;\n\n  tokenize(subject: string): Token<T>[] {\n    this.subject = subject;\n    this.index = 0;\n    const tokens = [];\n    while (this.index < this.subject.length) {\n      const oldIndex = this.index;\n      const kind = this.next();\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any characters\");\n      }\n\n      if (kind === null) {\n        continue;\n      }\n\n      const value = this.subject.slice(oldIndex, newIndex);\n      tokens.push({ kind, value });\n    }\n\n    return tokens;\n  }\n\n  protected abstract next(): T | null;\n\n  protected matches(search: RegExp): boolean {\n    const match = this.subject.slice(this.index).match(search);\n    if (match === null) {\n      return false;\n    }\n\n    this.index += match[0].length;\n    return true;\n  }\n\n  protected startsWith(search: string): boolean {\n    if (this.subject.startsWith(search, this.index)) {\n      this.index += search.length;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default Tokenizer;\n","import { Tokenizer } from \"../parsing\";\nimport CSSToken from \"./CSSToken\";\n\nclass CSSTokenizer extends Tokenizer<CSSToken> {\n  protected next(): CSSToken | null {\n    // Whitespace\n    if (this.matches(/^\\s+/)) return null;\n\n    // Literals\n    if (this.matches(/^#[0-9a-fA-F]{6}|^#[0-9a-fA-F]{3}/)) return CSSToken.COLOR;\n    if (this.matches(/^\\d+(\\.\\d*)?|^\\.\\d+/)) return CSSToken.NUMBER;\n\n    // Operators\n    if (this.startsWith(\"{\")) return CSSToken.LBRACE;\n    if (this.startsWith(\"}\")) return CSSToken.RBRACE;\n    if (this.startsWith(\":\")) return CSSToken.COLON;\n    if (this.startsWith(\";\")) return CSSToken.SEMI;\n    if (this.startsWith(\".\")) return CSSToken.DOT;\n    if (this.startsWith(\"#\")) return CSSToken.HASH;\n\n    if (this.matches(/^[a-zA-Z]+(-[a-zA-Z]+)*/)) return CSSToken.IDENTIFIER;\n\n    // Fallback\n    this.matches(/^./);\n    return CSSToken.ERROR;\n  }\n}\n\nexport default CSSTokenizer;\n","class Property {\n  readonly key: string;\n  readonly value: unknown;\n\n  constructor(key: string, value: unknown) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport default Property;\n","import Color from \"./Color\";\nimport Property from \"./Property\";\n\nclass PropertyMap implements Iterable<[string, unknown]> {\n  protected readonly map: Map<string, unknown>;\n\n  constructor(properties = new Set<Property>()) {\n    this.map = new Map<string, unknown>(\n      [...properties].map((property) => [property.key, property.value] as const),\n    );\n  }\n\n  [Symbol.iterator](): Iterator<[string, unknown]> {\n    return this.map.entries();\n  }\n\n  addAll(map: PropertyMap): this {\n    for (const [key, value] of map) {\n      this.map.set(key, value);\n    }\n    return this;\n  }\n\n  getString(key: string, fallback: string): string {\n    const value = this.map.get(key);\n    if (typeof value === \"string\") {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getColor(key: string, fallback: Color): Color {\n    const value = this.map.get(key);\n    if (value instanceof Color) {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getFloat(key: string, fallback: number): number {\n    const value = this.map.get(key);\n    if (typeof value === \"number\") {\n      return value;\n    }\n\n    return fallback;\n  }\n}\n\nexport default PropertyMap;\n","import PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\n\nclass Style {\n  readonly rules: Set<Rule>;\n\n  constructor(rules = new Set<Rule>()) {\n    this.rules = rules;\n  }\n\n  getProperties(context: string[]): PropertyMap {\n    const result = new PropertyMap();\n    const [head, ...tail] = context;\n    const hasTail = tail.length > 0;\n    for (const rule of this.rules) {\n      if (rule.selector.tag === head) {\n        const properties = new PropertyMap(rule.properties);\n        if (hasTail) {\n          properties.addAll(rule.getProperties(tail));\n        }\n        result.addAll(properties);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default Style;\n","import Style from \"./Style\";\nimport Property from \"./Property\";\nimport Selector from \"./Selector\";\n\nclass Rule extends Style {\n  readonly selector: Selector;\n  readonly properties: Set<Property>;\n\n  constructor(selector: Selector, properties: Set<Property>, rules: Set<Rule>) {\n    super(rules);\n    this.selector = selector;\n    this.properties = properties;\n  }\n}\n\nexport default Rule;\n","class Selector {\n  readonly tag: string;\n  readonly classes: Set<string>;\n  readonly id?: string;\n\n  constructor(tag: string, classes: Set<string>, id?: string) {\n    this.tag = tag;\n    this.classes = classes;\n    this.id = id;\n  }\n}\n\nexport default Selector;\n","import Color from \"./Color\";\nimport CSSParser from \"./CSSParser\";\nimport Property from \"./Property\";\nimport PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nexport { Color, CSSParser, Property, PropertyMap, Rule, Selector, Style };\n\nexport const parser = new CSSParser();\n","import { Parser } from \"../parsing\";\nimport Color from \"./Color\";\nimport CSSToken from \"./CSSToken\";\nimport CSSTokenizer from \"./CSSTokenizer\";\nimport Property from \"./Property\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nclass CSSParser extends Parser<CSSToken, Style> {\n  constructor() {\n    super(new CSSTokenizer());\n  }\n\n  protected parse(): Style {\n    return new Style(this.parseRuleSet());\n  }\n\n  private parseRuleSet(): Set<Rule> {\n    return this.parseSet(this.parseRule);\n  }\n\n  protected parseRule(): Rule {\n    const selector = this.parseSelector();\n    this.consume(CSSToken.LBRACE);\n    const properties = this.parsePropertySet();\n    const rules = this.parseRuleSet();\n    this.consume(CSSToken.RBRACE);\n\n    return new Rule(selector, properties, rules);\n  }\n\n  private parseSelector(): Selector {\n    const tag = this.consume(CSSToken.IDENTIFIER);\n    const classes = this.parseClassSet();\n    const id = this.parseOptionalId();\n\n    return new Selector(tag.value, classes, id);\n  }\n\n  private parsePropertySet(): Set<Property> {\n    return this.parseSet(this.parseProperty);\n  }\n\n  private parseProperty(): Property {\n    const key = this.parseIdentifier();\n    this.consume(CSSToken.COLON);\n\n    const value = this.parseOneOf(this.parseColor, this.parseNumber, this.parseIdentifier);\n    this.consume(CSSToken.SEMI);\n\n    return new Property(key, value);\n  }\n\n  private parseClassSet(): Set<string> {\n    return this.parseSet(this.parseClass);\n  }\n\n  private parseClass(): string {\n    this.consume(CSSToken.DOT);\n    const className = this.consume(CSSToken.IDENTIFIER);\n    return className.value;\n  }\n\n  private parseOptionalId(): string | undefined {\n    return this.parseOptional(this.parseId);\n  }\n\n  private parseId(): string {\n    this.consume(CSSToken.HASH);\n    const id = this.consume(CSSToken.IDENTIFIER);\n    return id.value;\n  }\n\n  private parseColor(): Color {\n    const color = this.consume(CSSToken.COLOR);\n    return Color.fromHexString(color.value);\n  }\n\n  private parseNumber(): number {\n    const number = this.consume(CSSToken.NUMBER);\n    return parseFloat(number.value);\n  }\n\n  private parseIdentifier(): string {\n    const identifier = this.consume(CSSToken.IDENTIFIER);\n    return identifier.value;\n  }\n}\n\nexport default CSSParser;\n","import { useEffect } from \"react\";\n\nfunction useDocumentTitle(title: string): void {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import { useRef } from \"react\";\n\nfunction useId(prefix: string): string {\n  const ref = useRef(`${prefix}-${Math.random().toString(36).substring(2)}`);\n\n  return ref.current!;\n}\n\nexport default useId;\n","enum Anchor {\n  N,\n  NNE,\n  NE,\n  ENE,\n  E,\n  ESE,\n  SE,\n  SSE,\n  S,\n  SSW,\n  SW,\n  WSW,\n  W,\n  WNW,\n  NW,\n  NNW,\n}\n\nexport default Anchor;\n","import { Anchor } from \"../model\";\n\nexport function qsin(anchor: Anchor): number {\n  if ((anchor + 6) % 16 < 5) {\n    return 0;\n  }\n\n  if ((anchor + 14) % 16 < 5) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.NNW:\n    case Anchor.SSW:\n      return 1 / 4;\n    case Anchor.N:\n    case Anchor.S:\n      return 1 / 2;\n    case Anchor.NNE:\n    case Anchor.SSE:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n\nexport function qcos(anchor: Anchor): number {\n  if ((anchor + 2) % 16 < 5) {\n    return 0;\n  }\n\n  if ((anchor + 10) % 16 < 5) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.ENE:\n    case Anchor.WNW:\n      return 1 / 4;\n    case Anchor.E:\n    case Anchor.W:\n      return 1 / 2;\n    case Anchor.ESE:\n    case Anchor.WSW:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n","import Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nabstract class AbstractElement implements Element {\n  private readonly children = new Set<Element>();\n  private hovered = false;\n  private selected = false;\n\n  abstract render(renderer: Renderer): void;\n\n  getChildren(): readonly Element[] {\n    return [...this.children];\n  }\n\n  addChild(child: Element): this {\n    this.children.add(child);\n    return this;\n  }\n\n  deleteChild(child: Element): boolean {\n    return this.children.delete(child);\n  }\n\n  *[Symbol.iterator](): Iterator<Element> {\n    for (const child of [...this.children].reverse()) {\n      yield* child;\n    }\n    yield this;\n  }\n\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.hovered = hovered;\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n\n  setSelected(selected: boolean): void {\n    this.selected = selected;\n  }\n}\n\nexport default AbstractElement;\n","enum Shape {\n  RECTANGLE,\n  ELLIPSE,\n  NOTE,\n  FOLDER,\n  BOX,\n  FILE,\n  COMPONENT,\n}\n\nexport default Shape;\n","enum LinePattern {\n  SOLID,\n  DOTS,\n  SMALL_DASHES,\n  LARGE_DASHES,\n  TIGHT_DASHES,\n}\n\nexport default LinePattern;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Rectangle from \"./Rectangle\";\nimport Renderer from \"./Renderer\";\nimport Shape from \"./Shape\";\n\nclass Classifier extends AbstractElement {\n  private readonly anchor: Anchor;\n  x: number;\n  y: number;\n  private width: number;\n  private height: number;\n  shape: Shape = Shape.RECTANGLE;\n\n  constructor(anchor: Anchor, x: number, y: number, width: number, height: number) {\n    super();\n    this.anchor = anchor;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getTagName(): string {\n    return \"Classifier\";\n  }\n\n  getRectangle(): Rectangle {\n    return {\n      x: this.getLeft(),\n      y: this.getTop(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setHeight(height: number): void {\n    this.height = height;\n  }\n\n  getLeft(): number {\n    return this.x - this.width * qsin(this.anchor);\n  }\n\n  setLeft(left: number): void {\n    this.x = left + this.width * qsin(this.anchor);\n  }\n\n  getCenterX(): number {\n    return this.getLeft() + this.width / 2;\n  }\n\n  getRight(): number {\n    return this.getLeft() + this.width;\n  }\n\n  getTop(): number {\n    return this.y - this.height * qcos(this.anchor);\n  }\n\n  setTop(top: number): void {\n    this.y = top + this.height * qcos(this.anchor);\n  }\n\n  getCenterY(): number {\n    return this.getTop() + this.height / 2;\n  }\n\n  getBottom(): number {\n    return this.getTop() + this.height;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderClassifier(this);\n  }\n}\n\nexport default Classifier;\n","import { Predicate } from \"../utils\";\nimport AbstractElement from \"./AbstractElement\";\nimport Classifier from \"./Classifier\";\nimport Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nclass Diagram extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderDiagram(this);\n  }\n\n  find(predicate: Predicate<Element>): Element | undefined {\n    return this.findElement(this, predicate);\n  }\n\n  private findElement(element: Element, predicate: Predicate<Element>): Element | undefined {\n    const result = predicate(element);\n    if (result) {\n      return element;\n    }\n\n    for (const child of element.getChildren()) {\n      const result = this.findElement(child, predicate);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    return undefined;\n  }\n\n  getWidth(): number {\n    return this.getRight() - this.getLeft();\n  }\n\n  getHeight(): number {\n    return this.getBottom() - this.getTop();\n  }\n\n  getTop(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const top = classifier.getTop();\n      return acc > top ? top : acc;\n    }, Infinity);\n  }\n\n  getBottom(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const bottom = classifier.getBottom();\n      return acc < bottom ? bottom : acc;\n    }, -Infinity);\n  }\n\n  getLeft(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const left = classifier.getLeft();\n      return acc > left ? left : acc;\n    }, Infinity);\n  }\n\n  getRight(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const right = classifier.getRight();\n      return acc < right ? right : acc;\n    }, -Infinity);\n  }\n\n  private reduceClassifiers(\n    reducer: (acc: number, classifier: Classifier) => number,\n    seed: number,\n  ): number {\n    let acc = seed;\n    for (const classifier of this.getChildren()) {\n      if (classifier instanceof Classifier) {\n        acc = reducer(acc, classifier);\n      }\n    }\n\n    if (acc === seed) {\n      return 0;\n    }\n\n    return acc;\n  }\n}\n\nexport default Diagram;\n","enum Tip {\n  NONE,\n  ARROW,\n  TRIANGLE,\n  FILLED_TRIANGLE,\n  DIAMOND,\n  FILLED_DIAMOND,\n  CIRCLE,\n  FILLED_CIRCLE,\n}\n\nexport default Tip;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Classifier from \"./Classifier\";\nimport LinePattern from \"./LinePattern\";\nimport Renderer from \"./Renderer\";\nimport Tip from \"./Tip\";\n\nclass Relationship extends AbstractElement {\n  from: Classifier;\n  fromAnchor: Anchor;\n  fromTip: Tip = Tip.NONE;\n  to: Classifier;\n  toAnchor: Anchor;\n  toTip: Tip = Tip.NONE;\n  linePattern: LinePattern = LinePattern.SOLID;\n\n  constructor(from: Classifier, fromAnchor: Anchor, to: Classifier, toAnchor: Anchor) {\n    super();\n    this.from = from;\n    this.fromAnchor = fromAnchor;\n    this.to = to;\n    this.toAnchor = toAnchor;\n  }\n\n  getX1(): number {\n    return this.from.getLeft() + qsin(this.fromAnchor) * this.from.getWidth();\n  }\n\n  getY1(): number {\n    return this.from.getTop() + qcos(this.fromAnchor) * this.from.getHeight();\n  }\n\n  getX2(): number {\n    return this.to.getLeft() + qsin(this.toAnchor) * this.to.getWidth();\n  }\n\n  getY2(): number {\n    return this.to.getTop() + qcos(this.toAnchor) * this.to.getHeight();\n  }\n\n  getAngle(): number {\n    return Math.atan2(this.getY2() - this.getY1(), this.getX2() - this.getX1());\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderRelationship(this);\n  }\n}\n\nexport default Relationship;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Separator extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderSeparator(this);\n  }\n}\n\nexport default Separator;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Stereotype extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderStereotype(this);\n  }\n}\n\nexport default Stereotype;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Text extends AbstractElement {\n  readonly text: string;\n\n  constructor(text: string) {\n    super();\n    this.text = text;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderText(this);\n  }\n}\n\nexport default Text;\n","import Text from \"./Text\";\nimport Renderer from \"./Renderer\";\n\nclass Title extends Text {\n  render(renderer: Renderer): void {\n    renderer.renderTitle(this);\n  }\n}\n\nexport default Title;\n","import { Classifier } from \"../model\";\nimport * as Model from \"../model\";\n\ninterface Class<T> {\n  new (...args: any[]): T;\n}\n\nclass Serializer {\n  private readonly parser: DOMParser;\n  private readonly serializer: XMLSerializer;\n  private readonly elementMap = new Map<Element, Model.Element>();\n\n  constructor() {\n    this.parser = new DOMParser();\n    this.serializer = new XMLSerializer();\n  }\n\n  deserialize(xml: string): Model.Diagram {\n    this.elementMap.clear();\n    const document = this.parser.parseFromString(xml, \"text/xml\");\n    const diagram = this.parseElement(document.documentElement);\n    if (!(diagram instanceof Model.Diagram)) {\n      return new Model.Diagram();\n    }\n\n    return diagram;\n  }\n\n  serialize(diagram: Model.Diagram): string {\n    if (this.hasElement(diagram)) {\n      const root = this.getElement(diagram)!;\n      return this.serializer.serializeToString(root);\n    }\n\n    return \"\";\n  }\n\n  updateElement(element: Model.Element): void {\n    if (this.hasElement(element)) {\n      const xmlElement = this.getElement(element)!;\n      if (element instanceof Classifier) {\n        this.setClassifier(xmlElement, element);\n      }\n    }\n  }\n\n  private parseElement(element: Element): Model.Element {\n    if (this.elementMap.has(element)) {\n      return this.elementMap.get(element)!;\n    }\n\n    const parsed = this.doParseElement(element);\n    this.elementMap.set(element, parsed);\n    return parsed;\n  }\n\n  protected doParseElement(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Diagram\":\n        return this.parseDiagram(element);\n      case \"Classifier\":\n        return this.parseClassifier(Model.Classifier, element);\n      case \"Relationship\":\n        return this.parseRelationship(Model.Relationship, element);\n      case \"Title\":\n        return this.parseTitle(element);\n      case \"Method\":\n      case \"Text\":\n        return this.parseText(element);\n      case \"Separator\":\n        return new Model.Separator();\n      case \"Stereotype\":\n        return new Model.Stereotype();\n    }\n\n    throw new Error(`Unknown tag: ${element.tagName}`);\n  }\n\n  private parseDiagram(element: Element): Model.Diagram {\n    const diagram = new Model.Diagram();\n    this.parseChildren(element, diagram);\n    return diagram;\n  }\n\n  protected parseClassifier<C extends Model.Classifier>(\n    constructor: Class<C>,\n    element: Element,\n  ): C {\n    const anchor = this.parseAnchorAttribute(element, \"anchor\");\n    const x = this.parseIntAttribute(element, \"x\", 0);\n    const y = this.parseIntAttribute(element, \"y\", 0);\n    const width = this.parseIntAttribute(element, \"width\", 200);\n    const height = this.parseIntAttribute(element, \"height\", 120);\n    const classifier = new constructor(anchor, x, y, width, height);\n    classifier.shape = this.parseEnumAttribute(Model.Shape, element, \"shape\", classifier.shape);\n    this.parseChildren(element, classifier);\n    return classifier;\n  }\n\n  protected setClassifier(element: Element, classifier: Classifier): void {\n    this.setIntAttribute(element, \"x\", 0, classifier.getX());\n    this.setIntAttribute(element, \"y\", 0, classifier.getY());\n    this.setIntAttribute(element, \"width\", 200, classifier.getWidth());\n    this.setIntAttribute(element, \"height\", 120, classifier.getHeight());\n  }\n\n  protected parseRelationship<R extends Model.Relationship>(\n    constructor: Class<R>,\n    element: Element,\n  ): R {\n    const from = this.parseClassifierAttribute(element, \"from\");\n    const fromAnchor = this.parseAnchorAttribute(element, \"fromAnchor\");\n    const to = this.parseClassifierAttribute(element, \"to\");\n    const toAnchor = this.parseAnchorAttribute(element, \"toAnchor\");\n    const relationship = new constructor(from, fromAnchor, to, toAnchor);\n    relationship.fromTip = this.parseTipAttribute(element, \"fromTip\", relationship.fromTip);\n    relationship.toTip = this.parseTipAttribute(element, \"toTip\", relationship.toTip);\n    relationship.linePattern = this.parseLinePatternAttribute(\n      element,\n      \"linePattern\",\n      relationship.linePattern,\n    );\n    return relationship;\n  }\n\n  private parseTitle(element: Element): Model.Title {\n    const text = element.textContent ?? \"\";\n    return new Model.Title(text);\n  }\n\n  private parseText(element: Element): Model.Text {\n    const text = element.textContent ?? \"\";\n    return new Model.Text(text);\n  }\n\n  private parseChildren(element: Element, target: Model.Element) {\n    for (const child of element.children) {\n      try {\n        target.addChild(this.parseElement(child));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  private parseClassifierAttribute(element: Element, attribute: string): Model.Classifier {\n    if (element.hasAttribute(attribute)) {\n      const id = element.getAttribute(attribute)!;\n      const elementById = element.ownerDocument.getElementById(id);\n      if (elementById !== null) {\n        const classifier = this.parseElement(elementById);\n        if (classifier instanceof Model.Classifier) {\n          return classifier;\n        }\n      }\n    }\n\n    throw new Error(\n      `Invalid classifier: <${element.tagName} ${attribute}=\"${element.getAttribute(\n        attribute,\n      )}\" />`,\n    );\n  }\n\n  private parseAnchorAttribute(element: Element, attribute: string): Model.Anchor {\n    return this.parseEnumAttribute(Model.Anchor, element, attribute, Model.Anchor.S);\n  }\n\n  private parseTipAttribute(element: Element, attribute: string, fallback: Model.Tip): Model.Tip {\n    return this.parseEnumAttribute(Model.Tip, element, attribute, fallback);\n  }\n\n  private parseLinePatternAttribute(\n    element: Element,\n    attribute: string,\n    fallback: Model.LinePattern,\n  ): Model.LinePattern {\n    return this.parseEnumAttribute(Model.LinePattern, element, attribute, fallback);\n  }\n\n  private parseEnumAttribute<E>(\n    enumClass: Record<string, unknown>,\n    element: Element,\n    attribute: string,\n    fallback: E,\n  ): E {\n    if (element.hasAttribute(attribute)) {\n      const value = element.getAttribute(attribute)!;\n      const item = Reflect.get(enumClass, value.toUpperCase());\n      if (item !== undefined) {\n        return item;\n      }\n    }\n\n    return fallback;\n  }\n\n  private parseIntAttribute(element: Element, attribute: string, fallback: number): number {\n    if (element.hasAttribute(attribute)) {\n      const value = parseInt(element.getAttribute(attribute)!, 10);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setIntAttribute(\n    element: Element,\n    attribute: string,\n    fallback: number,\n    value: number,\n  ): void {\n    if (value !== fallback) {\n      element.setAttribute(attribute, String(value));\n    } else {\n      element.removeAttribute(attribute);\n    }\n  }\n\n  private hasElement(element: Model.Element): boolean {\n    for (const value of this.elementMap.values()) {\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getElement(element: Model.Element): Element | undefined {\n    for (const [xmlElement, el] of this.elementMap) {\n      if (el === element) {\n        return xmlElement;\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default Serializer;\n","import { Relationship, Tip } from \"../model\";\n\nclass Aggregation extends Relationship {\n  toTip: Tip = Tip.DIAMOND;\n}\n\nexport default Aggregation;\n","import { LinePattern, Relationship } from \"../model\";\n\nclass Anchor extends Relationship {\n  linePattern: LinePattern = LinePattern.DOTS;\n}\n\nexport default Anchor;\n","import { Relationship } from \"../model\";\n\nclass Association extends Relationship {}\n\nexport default Association;\n","import { Classifier } from \"../model\";\n\nclass Class extends Classifier {\n  getTagName(): string {\n    return \"Class\";\n  }\n}\n\nexport default Class;\n","import { Classifier, Shape } from \"../model\";\n\nclass Component extends Classifier {\n  shape: Shape = Shape.COMPONENT;\n\n  getTagName(): string {\n    return \"Component\";\n  }\n}\n\nexport default Component;\n","import { Relationship, Tip } from \"../model\";\n\nclass Composition extends Relationship {\n  toTip: Tip = Tip.FILLED_DIAMOND;\n}\n\nexport default Composition;\n","import { Classifier } from \"../model\";\n\nclass DataType extends Classifier {\n  getTagName(): string {\n    return \"DataType\";\n  }\n}\n\nexport default DataType;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Dependency extends Relationship {\n  toTip: Tip = Tip.ARROW;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n}\n\nexport default Dependency;\n","import { Relationship, Tip } from \"../model\";\n\nclass DirectedAssociation extends Relationship {\n  toTip: Tip = Tip.ARROW;\n}\n\nexport default DirectedAssociation;\n","import { Classifier } from \"../model\";\n\nclass Enumeration extends Classifier {\n  getTagName(): string {\n    return \"Enumeration\";\n  }\n}\n\nexport default Enumeration;\n","import { Relationship, Tip } from \"../model\";\n\nclass Generalization extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n}\n\nexport default Generalization;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Implementation extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n}\n\nexport default Implementation;\n","import { Classifier } from \"../model\";\n\nclass Interface extends Classifier {\n  getTagName(): string {\n    return \"Interface\";\n  }\n}\n\nexport default Interface;\n","import { Classifier, Shape } from \"../model\";\n\nclass Note extends Classifier {\n  shape: Shape = Shape.NOTE;\n\n  getTagName(): string {\n    return \"Note\";\n  }\n}\n\nexport default Note;\n","import { Classifier, Shape } from \"../model\";\n\nclass Package extends Classifier {\n  shape: Shape = Shape.FOLDER;\n\n  getTagName(): string {\n    return \"Package\";\n  }\n}\n\nexport default Package;\n","import { Classifier } from \"../model\";\n\nclass Primitive extends Classifier {\n  getTagName(): string {\n    return \"Primitive\";\n  }\n}\n\nexport default Primitive;\n","import UMLSerializer from \"./UMLSerializer\";\n\nexport const serializer = new UMLSerializer();\n","import Serializer from \"./Serializer\";\nimport * as Model from \"../model\";\nimport * as UML from \"../uml\";\n\nclass UMLSerializer extends Serializer {\n  protected doParseElement(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Aggregation\":\n        return this.parseRelationship(UML.Aggregation, element);\n      case \"Anchor\":\n        return this.parseRelationship(UML.Anchor, element);\n      case \"Association\":\n        return this.parseRelationship(UML.Association, element);\n      case \"Class\":\n        return this.parseClassifier(UML.Class, element);\n      case \"Component\":\n        return this.parseClassifier(UML.Component, element);\n      case \"Composition\":\n        return this.parseRelationship(UML.Composition, element);\n      case \"DataType\":\n        return this.parseClassifier(UML.DataType, element);\n      case \"Dependency\":\n        return this.parseRelationship(UML.Dependency, element);\n      case \"DirectedAssociation\":\n        return this.parseRelationship(UML.DirectedAssociation, element);\n      case \"Enumeration\":\n        return this.parseClassifier(UML.Enumeration, element);\n      case \"Generalization\":\n        return this.parseRelationship(UML.Generalization, element);\n      case \"Implementation\":\n        return this.parseRelationship(UML.Implementation, element);\n      case \"Interface\":\n        return this.parseClassifier(UML.Interface, element);\n      case \"Note\":\n        return this.parseClassifier(UML.Note, element);\n      case \"Package\":\n        return this.parseClassifier(UML.Package, element);\n      case \"Primitive\":\n        return this.parseClassifier(UML.Primitive, element);\n      default:\n        return super.doParseElement(element);\n    }\n  }\n}\n\nexport default UMLSerializer;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction ContainerFluid({ children }: Props) {\n  return <div className=\"container-fluid\">{children}</div>;\n}\n\nexport default ContainerFluid;\n","import classNames from \"classnames\";\nimport { MouseEvent, ReactNode } from \"react\";\n\ninterface Props {\n  onClick?: () => void;\n  children?: ReactNode;\n}\n\nfunction DropdownItem({ onClick, children }: Props) {\n  function handleClick(event: MouseEvent) {\n    event.preventDefault();\n    onClick?.();\n  }\n\n  return (\n    <li>\n      <button onClick={handleClick} className={classNames(\"btn\", \"btn-link\", \"dropdown-item\")}>\n        {children}\n      </button>\n    </li>\n  );\n}\n\nexport default DropdownItem;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  labelledBy: string;\n  children?: ReactNode;\n}\n\nfunction DropdownMenu({ labelledBy, children }: Props) {\n  return (\n    <ul className=\"dropdown-menu\" aria-labelledby={labelledBy}>\n      {children}\n    </ul>\n  );\n}\n\nexport default DropdownMenu;\n","import { Dropdown } from \"bootstrap\";\nimport classNames from \"classnames\";\nimport { ReactNode, useRef } from \"react\";\n\ninterface Props {\n  id?: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownToggle({ id, className, children }: Props) {\n  const dropdown = useRef<Dropdown | null>(null);\n\n  function handleRef(element: HTMLButtonElement | null): void {\n    if (element === null) {\n      dropdown.current?.dispose();\n      dropdown.current = null;\n    } else {\n      dropdown.current = new Dropdown(element);\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      ref={handleRef}\n      aria-expanded=\"false\"\n      data-bs-toggle=\"dropdown\"\n      className={classNames(\"btn\", \"btn-link\", \"dropdown-toggle\", className)}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default DropdownToggle;\n","import CodeMirror from \"codemirror\";\nimport { MutableRefObject, useEffect, useRef } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/xml-hint\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchtags\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/theme/nord.css\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"./Editor.css\";\n\ninterface Props {\n  language: \"css\" | \"xml\";\n  value: string;\n  schema?: any;\n  onChange?: (value: string) => void;\n}\n\nfunction completeAfter(cm: CodeMirror.Editor, pred?: () => boolean) {\n  if (pred?.())\n    setTimeout(() => {\n      if (!cm.state.completionActive) cm.showHint({ completeSingle: false });\n    }, 100);\n  return CodeMirror.Pass;\n}\n\nfunction completeIfAfterLt(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const cur = cm.getCursor();\n    return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === \"<\";\n  });\n}\n\nfunction completeIfInTag(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const tok = cm.getTokenAt(cm.getCursor());\n    if (\n      tok.type === \"string\" &&\n      (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)\n    )\n      return false;\n    const inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n    return inner.tagName;\n  });\n}\n\nfunction Editor({ language, value, schema, onChange }: Props) {\n  const onChangeRef = useRef(onChange);\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const editor = useRef<CodeMirror.Editor>(null) as MutableRefObject<CodeMirror.Editor>;\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    const mode = language === \"xml\" ? \"xml\" : \"text/x-scss\";\n    const hintOptions = { schemaInfo: schema } as any;\n    const codeMirror = CodeMirror.fromTextArea(ref.current!, {\n      mode,\n      lineNumbers: true,\n      theme: \"nord\",\n      matchTags: true,\n      autocorrect: true,\n      extraKeys: {\n        \"'<'\": completeAfter,\n        \"'/'\": completeIfAfterLt,\n        \"' '\": completeIfInTag,\n        \"'='\": completeIfInTag,\n        \"Ctrl-Space\": \"autocomplete\",\n        \"Ctrl-/\": \"toggleComment\",\n      },\n      hintOptions,\n    });\n    editor.current = codeMirror;\n\n    return () => {\n      codeMirror.toTextArea();\n    };\n  }, [language, schema]);\n\n  useEffect(() => {\n    editor.current!.setValue(value);\n\n    function handleChange() {\n      const newValue = editor.current!.getValue();\n      if (newValue !== value) {\n        onChangeRef.current?.(newValue);\n      }\n    }\n\n    editor.current!.on(\"change\", handleChange);\n    return () => {\n      editor.current!.off(\"change\", handleChange);\n    };\n  }, [value]);\n\n  return <textarea ref={ref} defaultValue={value} />;\n}\n\nexport default Editor;\n","export default __webpack_public_path__ + \"static/media/logo.4da087a9.png\";","import { ReactNode } from \"react\";\nimport ContainerFluid from \"./ContainerFluid\";\nimport logo from \"./logo.png\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction MenuBar({ children }: Props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ gridArea: \"menu\" }}>\n      <ContainerFluid>\n        <span className=\"navbar-brand\">\n          <img alt=\"Logo\" src={logo} height={32} width={32} className=\"d-inline-block align-top\" />{\" \"}\n          UML Editor\n        </span>\n        <ul className=\"navbar-nav me-auto\">{children}</ul>\n      </ContainerFluid>\n    </nav>\n  );\n}\n\nexport default MenuBar;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { useId } from \"../../hooks\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport DropdownToggle from \"./DropdownToggle\";\n\ninterface Props {\n  active?: boolean;\n  title: string;\n  children?: ReactNode;\n}\n\nfunction Menu({ active = false, title, children }: Props) {\n  const id = useId(\"Menu\");\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <DropdownToggle id={id} className={classNames(\"nav-link\", { active })}>\n        {title}\n      </DropdownToggle>\n      <DropdownMenu labelledBy={id}>{children}</DropdownMenu>\n    </li>\n  );\n}\n\nexport default Menu;\n","import { Dispatch } from \"react\";\nimport { DropdownItem } from \"../blocks\";\n\ninterface Props {\n  title: string;\n  onTitleChange: Dispatch<string>;\n}\n\nfunction FileRename({ title, onTitleChange }: Props) {\n  function handleClick(): void {\n    const newTitle = window.prompt(\"New document title\", title);\n    if (newTitle !== null) {\n      onTitleChange(newTitle);\n    }\n  }\n\n  return <DropdownItem onClick={handleClick}>Rename \"{title}\" ...</DropdownItem>;\n}\n\nexport default FileRename;\n","export const PADDING = 10;\nexport const HANDLE_RADIUS = 4.5;\n","import { Color } from \"../css\";\nimport { Classifier, ClassifierRenderer, Renderer, Shape } from \"../model\";\nimport { PADDING } from \"./constants\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasClassifierRenderer implements ClassifierRenderer {\n  private readonly renderer: Renderer;\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n\n  constructor(renderer: Renderer, context: RenderContext, canvas: CanvasRenderingContext2D) {\n    this.renderer = renderer;\n    this.context = context;\n    this.canvas = canvas;\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.context.push(\n      classifier.getTagName(),\n      classifier.getWidth() - 2 * PADDING,\n      classifier.getHeight() - 2 * PADDING,\n    );\n\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.applyStyle(classifier);\n    this.drawShape(classifier);\n    this.canvas.fill();\n    this.canvas.stroke();\n    this.canvas.clip();\n\n    this.canvas.translate(PADDING, PADDING);\n    for (const child of classifier.getChildren()) {\n      child.render(this.renderer);\n    }\n\n    this.canvas.restore();\n\n    this.context.pop();\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.drawShape(classifier);\n    const result = this.canvas.isPointInPath(x, y);\n    this.canvas.restore();\n\n    return result;\n  }\n\n  private applyStyle(classifier: Classifier): void {\n    const properties = this.context.getStyleProperties();\n    this.canvas.lineWidth = properties.getFloat(\"line-width\", 1.5);\n    this.canvas.strokeStyle = properties.getColor(\"stroke\", Color.DARK).toHexString();\n    let fill = properties.getColor(\"fill\", Color.WHITE);\n    if (classifier.isHovered()) {\n      fill = fill.mix(Color.CYAN, 0.25);\n    }\n    this.canvas.fillStyle = fill.toHexString();\n  }\n\n  private drawShape(classifier: Classifier): void {\n    this.canvas.beginPath();\n    switch (classifier.shape) {\n      case Shape.RECTANGLE:\n        this.drawRectangleShape(classifier);\n        return;\n      case Shape.ELLIPSE:\n        this.drawEllipseShape(classifier);\n        return;\n      case Shape.FOLDER:\n        this.drawFolderShape(classifier);\n        return;\n      case Shape.NOTE:\n        this.drawNoteShape(classifier);\n        return;\n      case Shape.BOX:\n        this.drawBoxShape(classifier);\n        return;\n      case Shape.FILE:\n        this.drawFileShape(classifier);\n        return;\n      case Shape.COMPONENT:\n        this.drawComponentShape(classifier);\n        return;\n    }\n  }\n\n  private drawBoxShape(classifier: Classifier) {\n    const BOX_DEPTH = 20;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.rect(0, 0, w, h);\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(w, 0);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.lineTo(BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w, 0);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w + BOX_DEPTH, h - BOX_DEPTH);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n  }\n\n  private drawRectangleShape(classifier: Classifier) {\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawEllipseShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.ellipse(w / 2, h / 2, w / 2, h / 2, 0, 0, 2 * Math.PI);\n  }\n\n  private drawFolderShape(classifier: Classifier) {\n    const FOLDER_WIDTH = 80;\n    const FOLDER_HEIGHT = 20;\n    this.canvas.rect(0, -FOLDER_HEIGHT, FOLDER_WIDTH, FOLDER_HEIGHT);\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawNoteShape(classifier: Classifier) {\n    const NOTE_SIZE = 30;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w - NOTE_SIZE, h - NOTE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawFileShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const FILE_SIZE = 30;\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(FILE_SIZE, FILE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawComponentShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const COMPONENT_WIDTH = 40;\n    const COMPONENT_HEIGHT = 20;\n    const COMPONENT_Y = (h - COMPONENT_HEIGHT * 3) / 2;\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.rect(COMPONENT_WIDTH / -2, COMPONENT_Y, COMPONENT_WIDTH, COMPONENT_HEIGHT);\n    this.canvas.rect(\n      COMPONENT_WIDTH / -2,\n      COMPONENT_Y + 2 * COMPONENT_HEIGHT,\n      COMPONENT_WIDTH,\n      COMPONENT_HEIGHT,\n    );\n  }\n}\n\nexport default CanvasClassifierRenderer;\n","import { Anchor } from \"../model\";\n\nclass Handle {\n  readonly x: number;\n  readonly y: number;\n  readonly anchor: Anchor;\n\n  constructor(x: number, y: number, anchor: Anchor) {\n    this.x = x;\n    this.y = y;\n    this.anchor = anchor;\n  }\n}\n\nexport default Handle;\n","import { PropertyMap, Style } from \"../css\";\n\nclass RenderContext {\n  private readonly width: number[];\n  private readonly height: number[];\n  private readonly context: string[];\n  private readonly style: Style;\n\n  constructor(canvasWidth: number, canvasHeight: number, style: Style) {\n    this.width = [canvasWidth];\n    this.height = [canvasHeight];\n    this.context = [];\n    this.style = style;\n  }\n\n  push(name: string, width?: number, height?: number): void {\n    this.context.unshift(name);\n    this.width.unshift(width ?? this.getWidth());\n    this.height.unshift(height ?? this.getHeight());\n  }\n\n  pop(): void {\n    this.context.shift();\n    this.width.shift();\n    this.height.shift();\n  }\n\n  getName(): string {\n    return this.context[0];\n  }\n\n  getWidth(): number {\n    return this.width[0];\n  }\n\n  getHeight(): number {\n    return this.height[0];\n  }\n\n  getStyleProperties(): PropertyMap {\n    return this.style.getProperties([...this.context].reverse());\n  }\n}\n\nexport default RenderContext;\n","import { Color, Style } from \"../css\";\nimport {\n  Anchor,\n  Classifier,\n  Diagram,\n  LinePattern,\n  Relationship,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Tip,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasOptions from \"./CanvasOptions\";\nimport { HANDLE_RADIUS, PADDING } from \"./constants\";\nimport Handle from \"./Handle\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n  private readonly classifierRenderer: CanvasClassifierRenderer;\n  private readonly translateX: number;\n  private readonly translateY: number;\n\n  constructor(canvas: HTMLCanvasElement, style: Style, options: CanvasOptions) {\n    this.context = new RenderContext(canvas.width, canvas.height, style);\n    this.translateX = options.translateX;\n    this.translateY = options.translateY;\n    this.canvas = canvas.getContext(\"2d\")!;\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, this.canvas);\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    this.canvas.clearRect(0, 0, this.context.getWidth(), this.context.getHeight());\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n    this.renderHandles(diagram);\n    this.canvas.restore();\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(relationship.getX1(), relationship.getY1());\n    this.canvas.lineTo(relationship.getX2(), relationship.getY2());\n    this.applyRelationshipStyle(relationship);\n    this.canvas.stroke();\n    this.drawFromTip(relationship);\n    this.drawToTip(relationship);\n    this.canvas.restore();\n  }\n\n  private applyRelationshipStyle(relationship: Relationship): void {\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.fillStyle = \"white\";\n    switch (relationship.linePattern) {\n      case LinePattern.SOLID:\n        this.canvas.setLineDash([]);\n        break;\n      case LinePattern.DOTS:\n        this.canvas.setLineDash([2, 2]);\n        break;\n      case LinePattern.SMALL_DASHES:\n        this.canvas.setLineDash([5, 5]);\n        break;\n      case LinePattern.LARGE_DASHES:\n        this.canvas.setLineDash([10, 10]);\n        break;\n      case LinePattern.TIGHT_DASHES:\n        this.canvas.setLineDash([15, 5]);\n        break;\n    }\n  }\n\n  private drawFromTip(relationship: Relationship): void {\n    if (relationship.fromTip !== Tip.NONE) {\n      this.canvas.save();\n      this.canvas.setLineDash([]);\n      this.canvas.translate(relationship.getX1(), relationship.getY1());\n      this.canvas.rotate(relationship.getAngle() + Math.PI);\n      this.drawTip(relationship.fromTip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawToTip(relationship: Relationship): void {\n    if (relationship.toTip !== Tip.NONE) {\n      this.canvas.save();\n      this.canvas.setLineDash([]);\n      this.canvas.translate(relationship.getX2(), relationship.getY2());\n      this.canvas.rotate(relationship.getAngle());\n      this.drawTip(relationship.toTip);\n      this.canvas.restore();\n    }\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"1.25rem\", \"left\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"1.25rem\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.stroke();\n    this.canvas.restore();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"1rem\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  private drawText(text: string, size: string, align: \"left\" | \"center\") {\n    const properties = this.context.getStyleProperties();\n    const weight = properties.getString(\"font-weight\", \"normal\");\n    const style = properties.getString(\"font-style\", \"normal\");\n\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.font = `${style} ${weight} ${size} system-ui`;\n    this.canvas.fillStyle = properties.getColor(\"color\", Color.DARK).toHexString();\n    const metrics = this.canvas.measureText(text);\n    const x = align === \"center\" ? (this.context.getWidth() - metrics.width) / 2 : 0;\n    this.canvas.fillText(text, x, metrics.fontBoundingBoxAscent - 3);\n    this.canvas.restore();\n  }\n\n  private drawTip(tip: Tip): void {\n    switch (tip) {\n      case Tip.ARROW:\n        this.drawArrow();\n        break;\n      case Tip.TRIANGLE:\n        this.drawTriangle();\n        break;\n      case Tip.FILLED_TRIANGLE:\n        this.canvas.fillStyle = this.canvas.strokeStyle;\n        this.drawTriangle();\n        break;\n      case Tip.DIAMOND:\n        this.drawDiamond();\n        break;\n      case Tip.FILLED_DIAMOND:\n        this.canvas.fillStyle = this.canvas.strokeStyle;\n        this.drawDiamond();\n        break;\n      case Tip.CIRCLE:\n        this.drawCircle();\n        break;\n      case Tip.FILLED_CIRCLE:\n        this.canvas.fillStyle = this.canvas.strokeStyle;\n        this.drawCircle();\n        break;\n    }\n  }\n\n  private drawArrow() {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 8);\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, -8);\n    this.canvas.closePath();\n    this.canvas.stroke();\n  }\n\n  private drawTriangle(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 10);\n    this.canvas.lineTo(-20, -10);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawDiamond(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-15, 8);\n    this.canvas.lineTo(-30, 0);\n    this.canvas.lineTo(-15, -8);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawCircle(): void {\n    this.canvas.beginPath();\n    this.canvas.ellipse(-10, 0, 10, 10, 0, 0, 2 * Math.PI);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private renderHandles(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.fillStyle = \"white\";\n    this.canvas.strokeStyle = \"black\";\n    this.canvas.lineWidth = 1;\n\n    for (const { x, y } of this.getHandles(diagram)) {\n      this.renderHandleAtPoint(x, y);\n    }\n\n    this.canvas.restore();\n  }\n\n  private *getHandles(diagram: Diagram): Generator<Handle> {\n    for (const child of diagram.getChildren()) {\n      if (child instanceof Classifier && child.isSelected()) {\n        yield* this.getClassifierHandles(child);\n      }\n    }\n  }\n\n  private renderHandleAtPoint(x: number, y: number): void {\n    this.canvas.beginPath();\n    this.canvas.rect(x - HANDLE_RADIUS, y - HANDLE_RADIUS, HANDLE_RADIUS * 2, HANDLE_RADIUS * 2);\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  findHandleForPoint(diagram: Diagram, x: number, y: number): Handle | undefined {\n    for (const handle of this.getHandles(diagram)) {\n      if (this.isPointInHandle(handle, x, y)) {\n        return handle;\n      }\n    }\n    return undefined;\n  }\n\n  private isPointInHandle(handle: Handle, x: number, y: number): boolean {\n    return Math.abs(x - handle.x) <= HANDLE_RADIUS && Math.abs(y - handle.y) <= HANDLE_RADIUS;\n  }\n\n  private *getClassifierHandles(classifier: Classifier): Generator<Handle> {\n    const x1 = classifier.getLeft();\n    const x2 = classifier.getRight();\n    const y1 = classifier.getTop();\n    const y2 = classifier.getBottom();\n\n    yield new Handle(x1, y1, Anchor.NW);\n    yield new Handle(classifier.getCenterX(), y1, Anchor.N);\n    yield new Handle(x2, y1, Anchor.NE);\n    yield new Handle(x1, classifier.getCenterY(), Anchor.W);\n    yield new Handle(x2, classifier.getCenterY(), Anchor.E);\n    yield new Handle(x1, y2, Anchor.SW);\n    yield new Handle(classifier.getCenterX(), y2, Anchor.S);\n    yield new Handle(x2, y2, Anchor.SE);\n  }\n}\n\nexport default CanvasRenderer;\n","import { MouseEvent } from \"react\";\n\nexport interface Coordinates {\n  readonly x: number;\n  readonly y: number;\n}\n\nexport interface Consumer<T> {\n  (item: T): void;\n}\n\nexport interface Predicate<T> {\n  (item: T): boolean;\n}\n\nexport function getMouseCoordinates(event: MouseEvent<HTMLCanvasElement>): Coordinates {\n  const { clientX, clientY } = event;\n  const boundingClientRect = event.currentTarget.getBoundingClientRect();\n\n  const x = clientX - boundingClientRect.x - boundingClientRect.width / 2;\n  const y = clientY - boundingClientRect.y - boundingClientRect.height / 2;\n\n  return { x, y };\n}\n\nexport function subtractCoords(vec1: Coordinates, vec2: Coordinates): Coordinates {\n  const x = vec1.x - vec2.x;\n  const y = vec1.y - vec2.y;\n  return { x, y };\n}\n\nexport function roundCoordsBy(coord: Coordinates, by: number): Coordinates {\n  return {\n    x: Math.round(coord.x / by) * by,\n    y: Math.round(coord.y / by) * by,\n  };\n}\n\nexport function sanitizeFilename(element: string): string {\n  return element.replace(/[^a-zA-Z_-]+/g, \"-\");\n}\n","import { Style } from \"../../css\";\nimport { Diagram } from \"../../model\";\nimport { CanvasRenderer } from \"../../renderer\";\nimport { sanitizeFilename } from \"../../utils\";\nimport { DropdownItem } from \"../blocks\";\n\ninterface Props {\n  title: string;\n  diagram: Diagram;\n  style: Style;\n}\n\nconst MARGIN = 10;\n\nfunction PNGExport({ title, diagram, style }: Props) {\n  function handleClick() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = diagram.getWidth() + 2 * MARGIN;\n    canvas.height = diagram.getHeight() + 2 * MARGIN;\n\n    const renderer = new CanvasRenderer(canvas, style, {\n      translateX: MARGIN - diagram.getLeft(),\n      translateY: MARGIN - diagram.getTop(),\n    });\n    renderer.renderDiagram(diagram);\n\n    const dataURL = canvas.toDataURL(\"image/png\");\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.download = `${sanitizeFilename(title)}.png`;\n    downloadLink.href = dataURL;\n    downloadLink.click();\n  }\n\n  return <DropdownItem onClick={handleClick}>As PNG</DropdownItem>;\n}\n\nexport default PNGExport;\n","import { Dispatch } from \"react\";\nimport { Style } from \"../../css\";\nimport { Diagram } from \"../../model\";\nimport { MenuBar, Menu } from \"../blocks\";\nimport FileRename from \"./FileRename\";\nimport PNGExport from \"./PNGExport\";\n\ninterface Props {\n  title: string;\n  diagram: Diagram;\n  style: Style;\n  onTitleChange: Dispatch<string>;\n}\n\nfunction AppMenu({ title, diagram, style, onTitleChange }: Props) {\n  return (\n    <MenuBar>\n      <Menu title=\"File\">\n        <FileRename title={title} onTitleChange={onTitleChange} />\n      </Menu>\n      <Menu title=\"Export\">\n        <PNGExport title={title} diagram={diagram} style={style} />\n      </Menu>\n    </MenuBar>\n  );\n}\n\nexport default AppMenu;\n","import { MouseEvent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { Style } from \"../../css\";\nimport { Anchor, Classifier, Diagram, Element, Rectangle } from \"../../model\";\nimport { CanvasRenderer, Handle } from \"../../renderer\";\nimport { Coordinates, getMouseCoordinates, roundCoordsBy, subtractCoords } from \"../../utils\";\n\ninterface Props {\n  diagram: Diagram;\n  style: Style;\n  onChange?: (element: Element) => void;\n}\n\nfunction createRenderer(canvas: HTMLCanvasElement, style: Style): CanvasRenderer {\n  return new CanvasRenderer(canvas, style, {\n    translateX: canvas.width / 2,\n    translateY: canvas.height / 2,\n  });\n}\n\nfunction Canvas({ diagram, style, onChange }: Props) {\n  const div = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const mouseDownCoords = useRef<Coordinates>(null) as MutableRefObject<Coordinates | null>;\n  const mouseDownRectangle = useRef<Rectangle>(null) as MutableRefObject<Rectangle | null>;\n  const mouseDownObject = useRef<Handle | Element>(null) as MutableRefObject<\n    Handle | Element | null\n  >;\n\n  useEffect(() => {\n    function onResize() {\n      const rect = div.current!.getBoundingClientRect();\n      canvas.current!.width = Math.trunc(rect.width);\n      canvas.current!.height = Math.trunc(rect.height);\n\n      const renderer = createRenderer(canvas.current!, style);\n      renderer.renderDiagram(diagram);\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [diagram, style]);\n\n  function setCursor(cursor: string): void {\n    canvas.current!.style.cursor = cursor;\n  }\n\n  function handleHandleUpdate(target: Classifier, handle: Handle, deltaX: number, deltaY: number) {\n    if (handle.anchor === Anchor.W || handle.anchor === Anchor.NW || handle.anchor === Anchor.SW) {\n      target.setWidth(mouseDownRectangle.current!.width - deltaX);\n      target.setLeft(mouseDownRectangle.current!.x + deltaX);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.E || handle.anchor === Anchor.NE || handle.anchor === Anchor.SE) {\n      target.setWidth(mouseDownRectangle.current!.width + deltaX);\n      target.setLeft(mouseDownRectangle.current!.x);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.N || handle.anchor === Anchor.NW || handle.anchor === Anchor.NE) {\n      target.setHeight(mouseDownRectangle.current!.height - deltaY);\n      target.setTop(mouseDownRectangle.current!.y + deltaY);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.S || handle.anchor === Anchor.SW || handle.anchor === Anchor.SE) {\n      target.setHeight(mouseDownRectangle.current!.height + deltaY);\n      target.setTop(mouseDownRectangle.current!.y);\n      onChange?.(target);\n    }\n  }\n\n  function handleLeftMouseButtonMove(x: number, y: number) {\n    const target = diagram.find((el) => el.isSelected());\n    if (target instanceof Classifier) {\n      const { x: deltaX, y: deltaY } = roundCoordsBy(\n        subtractCoords({ x, y }, mouseDownCoords.current!),\n        20,\n      );\n      if (mouseDownObject.current === target) {\n        target.setLeft(mouseDownRectangle.current!.x + deltaX);\n        target.setTop(mouseDownRectangle.current!.y + deltaY);\n        onChange?.(target);\n        return;\n      }\n      if (mouseDownObject.current instanceof Handle) {\n        handleHandleUpdate(target, mouseDownObject.current, deltaX, deltaY);\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    if (event.buttons & 1) {\n      handleLeftMouseButtonMove(x, y);\n      renderer.renderDiagram(diagram);\n      return;\n    }\n\n    for (const element of diagram) {\n      element.setHovered(false);\n    }\n\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined) {\n      setCursor(`${Anchor[handle.anchor].toLowerCase()}-resize`);\n    } else {\n      setCursor(\"default\");\n\n      for (const classifier of diagram) {\n        if (classifier instanceof Classifier) {\n          const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n          if (isInClassifier) {\n            classifier.setHovered(true);\n            break;\n          }\n        }\n      }\n    }\n\n    renderer.renderDiagram(diagram);\n  }\n\n  function renderMouseDown(renderer: CanvasRenderer, x: number, y: number) {\n    const selectedElement = diagram.find((el) => el.isSelected());\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined && selectedElement instanceof Classifier) {\n      mouseDownRectangle.current = selectedElement.getRectangle();\n      mouseDownCoords.current = { x, y };\n      mouseDownObject.current = handle;\n      return;\n    }\n\n    selectedElement?.setSelected(false);\n    for (const classifier of diagram) {\n      if (classifier instanceof Classifier) {\n        const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n        if (isInClassifier) {\n          classifier.setSelected(true);\n          mouseDownRectangle.current = classifier.getRectangle();\n          mouseDownCoords.current = { x, y };\n          mouseDownObject.current = classifier;\n          return;\n        }\n      }\n    }\n  }\n\n  function handleMouseDown(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    renderMouseDown(renderer, x, y);\n    renderer.renderDiagram(diagram);\n  }\n\n  function handleMouseUp() {\n    mouseDownRectangle.current = null;\n    mouseDownCoords.current = null;\n    mouseDownObject.current = null;\n  }\n\n  return (\n    <div\n      ref={div}\n      className=\"Canvas\"\n      style={{\n        backgroundColor: \"hsl(220 9% 92% / 1)\",\n        gridArea: \"canvas\",\n      }}\n    >\n      <canvas\n        ref={canvas}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </div>\n  );\n}\n\nexport default Canvas;\n","import { Editor } from \"../blocks\";\n\ninterface Props {\n  css: string;\n  onChange?: (css: string) => void;\n}\n\nfunction CSSEditor({ css, onChange }: Props) {\n  return (\n    <div className=\"CSSEditor\" style={{ gridArea: \"css\", position: \"relative\" }}>\n      <Editor language=\"css\" value={css} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default CSSEditor;\n","import { Anchor, LinePattern, Shape, Tip } from \"../../model\";\n\nconst anchorSchema = Object.keys(Anchor)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst shapeSchema = Object.keys(Shape)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst tipSchema = Object.keys(Tip)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst linePatternSchema = Object.keys(LinePattern)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst classifierSchema = {\n  children: [\"Title\", \"Separator\", \"Method\", \"Stereotype\"],\n  attrs: {\n    x: null,\n    y: null,\n    width: null,\n    height: null,\n    anchor: anchorSchema,\n    shape: shapeSchema,\n  },\n};\n\nconst relationshipSchema = {\n  attrs: {\n    from: null,\n    fromTip: tipSchema,\n    to: null,\n    toTip: tipSchema,\n    linePattern: linePatternSchema,\n  },\n};\n\nconst classifiers = {\n  Class: classifierSchema,\n  Classifier: classifierSchema,\n  Component: classifierSchema,\n  DataType: classifierSchema,\n  Enumeration: classifierSchema,\n  Interface: classifierSchema,\n  Note: classifierSchema,\n  Object: classifierSchema,\n  Package: classifierSchema,\n  Primitive: classifierSchema,\n};\n\nconst relationships = {\n  Aggregation: relationshipSchema,\n  Anchor: relationshipSchema,\n  Association: relationshipSchema,\n  Composition: relationshipSchema,\n  Dependency: relationshipSchema,\n  DirectedAssociation: relationshipSchema,\n  Generalization: relationshipSchema,\n  Implementation: relationshipSchema,\n  Relationship: relationshipSchema,\n};\n\nconst schema = {\n  \"!top\": [\"Diagram\"],\n  \"!attrs\": {\n    id: null,\n    class: null,\n  },\n  Diagram: {\n    children: [...Object.keys(classifiers), ...Object.keys(relationships)],\n  },\n  ...classifiers,\n  ...relationships,\n};\n\nexport default schema;\n","import { Editor } from \"../blocks\";\nimport { xmlSchema } from \"../schemas\";\n\ninterface Props {\n  xml: string;\n  onChange: (xml: string) => void;\n}\n\nfunction XMLEditor({ xml, onChange }: Props) {\n  return (\n    <div className=\"XMLEditor\" style={{ gridArea: \"xml\", position: \"relative\" }}>\n      <Editor language=\"xml\" value={xml} schema={xmlSchema} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default XMLEditor;\n","import { useEffect, useState } from \"react\";\nimport { parser, Style } from \"../css\";\nimport { useDocumentTitle } from \"../hooks\";\nimport { Diagram, Element } from \"../model\";\nimport { serializer } from \"../serializer\";\nimport \"./App.css\";\nimport { AppMenu, Canvas, CSSEditor, XMLEditor } from \"./widgets\";\n\nfunction App() {\n  const [diagram, setDiagram] = useState(() => new Diagram());\n  const [style, setStyle] = useState(() => new Style());\n  const [title, setTitle] = useState(\"Untitled\");\n  const [xml, setXml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n\n  useDocumentTitle(`${title} - UML Editor`);\n\n  function handleXmlChange(xml: string): void {\n    const diagram = serializer.deserialize(xml);\n    setDiagram(diagram);\n  }\n\n  function handleCssChange(css: string): void {\n    const style = parser.parseFromString(css);\n    setStyle(style);\n  }\n\n  function handleCanvasChange(element: Element): void {\n    serializer.updateElement(element);\n    const xml = serializer.serialize(diagram);\n    setXml(xml);\n  }\n\n  useEffect(() => {\n    const initialXml = `\\\n<Diagram>\n  <Interface id=\"i1\" anchor=\"s\" x=\"0\" y=\"-50\">\n    <Stereotype/>\n    <Title>Visitor</Title>\n  </Interface>\n\n  <Class id=\"c1\" anchor=\"n\" x=\"0\" y=\"50\" width=\"400\">\n    <Stereotype/>\n    <Title>Concrete Visitor</Title>\n    <Separator/>\n    <Method>visitSomething(something: Something)</Method>\n  </Class>\n\n  <Implementation from=\"c1\" to=\"i1\" fromAnchor=\"n\" toAnchor=\"s\"/>\n</Diagram>\n`;\n    const initialCss = `\\\nInterface {\n  Title {\n    font-style: italic;\n  }\n}\n\nClass {\n  Title {\n    font-weight: bold;\n  }\n}\n`;\n\n    const diagram = serializer.deserialize(initialXml);\n    const style = parser.parseFromString(initialCss);\n    setDiagram(diagram);\n    setStyle(style);\n    setXml(initialXml);\n    setCss(initialCss);\n  }, []);\n\n  return (\n    <div className=\"App bg-secondary\">\n      <AppMenu title={title} diagram={diagram} style={style} onTitleChange={setTitle} />\n      <XMLEditor xml={xml} onChange={handleXmlChange} />\n      <CSSEditor css={css} onChange={handleCssChange} />\n      <Canvas diagram={diagram} style={style} onChange={handleCanvasChange} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}