{"version":3,"sources":["constants.ts","css/Color.ts","css/CSSToken.ts","parsing/Parser.ts","parsing/Tokenizer.ts","css/CSSTokenizer.ts","css/Property.ts","css/PropertyMap.ts","css/Style.ts","css/Rule.ts","css/Selector.ts","css/index.ts","css/CSSParser.ts","hooks/useDocumentTitle.ts","hooks/useId.ts","hooks/useShortcut.ts","model/Anchor.ts","renderer/anchors.ts","model/AbstractElement.ts","model/Shape.ts","model/LinePattern.ts","model/Classifier.ts","model/Diagram.ts","model/Tip.ts","model/Relationship.ts","model/Separator.ts","model/Stereotype.ts","model/Text.ts","model/Title.ts","serializer/FileSerializer.ts","serializer/Serializer.ts","uml/Aggregation.ts","uml/Anchor.ts","uml/Association.ts","uml/Class.ts","uml/Component.ts","uml/Composition.ts","uml/DataType.ts","uml/Dependency.ts","uml/DirectedAssociation.ts","uml/Enumeration.ts","uml/Generalization.ts","uml/Implementation.ts","uml/Interface.ts","uml/Note.ts","uml/Package.ts","uml/Primitive.ts","serializer/index.ts","serializer/UMLSerializer.ts","components/blocks/ContainerFluid.tsx","components/blocks/DropdownDivider.tsx","components/blocks/DropdownItem.tsx","components/blocks/DropdownMenu.tsx","components/blocks/DropdownToggle.tsx","components/blocks/Editor.tsx","components/blocks/Icon.tsx","components/blocks/logo.png","components/blocks/MenuBar.tsx","components/blocks/Menu.tsx","components/widgets/FileNew.tsx","utils.ts","components/widgets/FileOpen.tsx","components/widgets/FileRename.tsx","components/widgets/FileSave.tsx","components/widgets/Grid.tsx","renderer/CanvasClassifierRenderer.ts","renderer/Handle.ts","renderer/RenderContext.ts","renderer/CanvasRenderer.ts","components/widgets/PNGExport.tsx","components/widgets/AppMenu.tsx","components/widgets/Canvas.tsx","components/widgets/CSSEditor.tsx","components/schemas/xmlSchema.ts","components/widgets/XMLEditor.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GRID","PADDING","HANDLE_RADIUS","INITIAL_XML","INITIAL_CSS","Color","red","green","blue","this","sanitizeComponent","intToHex","other","percentage","otherFactor","clamp","thisFactor","hexString","parseInt","slice","min","max","value","clamped","Math","round","toString","padStart","BLUE","fromHexString","INDIGO","PURPLE","PINK","RED","ORANGE","YELLOW","GREEN","TEAL","CYAN","WHITE","GRAY","GRAY_DARK","PRIMARY","SECONDARY","SUCCESS","INFO","WARNING","DANGER","LIGHT","DARK","CSSToken","Parser","tokenizer","tokens","index","string","tokenize","parse","kind","token","Error","parsers","parser","parseOptional","undefined","result","Set","oldIndex","add","call","err","Tokenizer","subject","length","next","newIndex","push","search","match","startsWith","CSSTokenizer","matches","COLOR","NUMBER","LBRACE","RBRACE","COLON","SEMI","DOT","HASH","IDENTIFIER","ERROR","Property","key","Symbol","iterator","PropertyMap","properties","map","Map","property","entries","set","fallback","get","Style","rules","context","head","tail","hasTail","rule","selector","tag","addAll","getProperties","Rule","Selector","classes","id","parseRuleSet","parseSet","parseRule","parseSelector","consume","parsePropertySet","parseClassSet","parseOptionalId","parseProperty","parseIdentifier","parseOneOf","parseColor","parseNumber","parseIdentifierValue","parseClass","parseId","color","number","parseFloat","identifier","useDocumentTitle","title","useEffect","document","useId","prefix","useRef","random","substring","current","useShortcut","Anchor","shortcut","handler","ref","keypressHandler","event","elements","split","element","ctrlKey","shiftKey","altKey","toLowerCase","matchesShortcut","preventDefault","addEventListener","removeEventListener","qsin","anchor","NNW","SSW","N","S","NNE","SSE","qcos","ENE","WNW","E","W","ESE","WSW","Shape","AbstractElement","children","hovered","selected","child","delete","reverse","LinePattern","Classifier","x","y","width","height","shape","RECTANGLE","getLeft","getTop","left","top","renderer","renderClassifier","Diagram","renderDiagram","predicate","findElement","getChildren","getRight","getBottom","reduceClassifiers","acc","classifier","Infinity","bottom","right","reducer","seed","Tip","Relationship","from","fromAnchor","to","toAnchor","fromTip","NONE","toTip","linePattern","SOLID","getWidth","getHeight","atan2","getY2","getY1","getX2","getX1","renderRelationship","Separator","renderSeparator","Stereotype","renderStereotype","Text","text","renderText","Title","renderTitle","FileSerializer","file","header","model","xml","style","css","joinSections","content","splitSections","headerString","parseHeader","sections","str","trim","join","expectedNumber","Serializer","serializer","elementMap","DOMParser","XMLSerializer","clear","parseFromString","diagram","parseElement","documentElement","Model","hasElement","root","getElement","serializeToString","xmlElement","setClassifier","has","parsed","doParseElement","tagName","parseDiagram","parseClassifier","parseRelationship","parseTitle","parseText","parseChildren","constructor","parseAnchorAttribute","parseIntAttribute","parseEnumAttribute","setIntAttribute","getX","getY","relationship","parseClassifierAttribute","parseTipAttribute","parseLinePatternAttribute","textContent","target","addChild","console","error","attribute","hasAttribute","getAttribute","elementById","ownerDocument","getElementById","enumClass","item","Reflect","toUpperCase","Number","isNaN","setAttribute","String","removeAttribute","values","Aggregation","DIAMOND","DOTS","Association","Class","Component","COMPONENT","Composition","FILLED_DIAMOND","DataType","Dependency","ARROW","TIGHT_DASHES","DirectedAssociation","Enumeration","Generalization","TRIANGLE","Implementation","Interface","Note","NOTE","Package","FOLDER","Primitive","UML","fileSerializer","ContainerFluid","className","DropdownDivider","DropdownItem","onClick","classNames","replace","DropdownMenu","labelledBy","aria-labelledby","DropdownToggle","dropdown","dispose","Dropdown","aria-expanded","data-bs-toggle","completeAfter","cm","pred","setTimeout","state","completionActive","showHint","completeSingle","CodeMirror","Pass","completeIfAfterLt","cur","getCursor","getRange","Pos","line","ch","completeIfInTag","tok","getTokenAt","type","test","charAt","innerMode","getMode","Editor","language","schema","onChange","onChangeRef","editor","mode","hintOptions","schemaInfo","codeMirror","fromTextArea","lineNumbers","theme","matchTags","autocorrect","extraKeys","toTextArea","handleChange","newValue","getValue","setValue","on","off","defaultValue","Icon","name","size","fill","toHexString","xlinkHref","iconUrl","MenuBar","gridArea","alt","src","logo","Menu","active","FileNew","onFileChange","window","prompt","getMouseCoordinates","clientX","clientY","boundingClientRect","currentTarget","getBoundingClientRect","sanitizeFilename","downloadFile","filename","dataURL","downloadLink","createElement","download","href","click","FileOpen","pattern","Promise","resolve","uploadInput","files","once","accept","multiple","then","loadFromString","FileRename","onTitleChange","newTitle","FileSave","btoa","saveToString","url","URL","Grid","viewOptions","onViewOptionsChange","grid","icon","CanvasClassifierRenderer","canvas","getTagName","save","translate","applyStyle","drawShape","stroke","clip","render","restore","pop","isPointInPath","getStyleProperties","lineWidth","getFloat","strokeStyle","getColor","isHovered","mix","fillStyle","beginPath","drawRectangleShape","ELLIPSE","drawEllipseShape","drawFolderShape","drawNoteShape","BOX","drawBoxShape","FILE","drawFileShape","drawComponentShape","BOX_DEPTH","w","h","rect","moveTo","lineTo","closePath","ellipse","PI","NOTE_SIZE","FILE_SIZE","COMPONENT_WIDTH","COMPONENT_HEIGHT","COMPONENT_Y","Handle","RenderContext","canvasWidth","canvasHeight","unshift","shift","CanvasRenderer","options","classifierRenderer","translateX","translateY","getContext","clearRect","minX","floor","maxX","minY","maxY","renderHandles","isPointInClassifier","applyRelationshipStyle","drawFromTip","drawToTip","setLineDash","SMALL_DASHES","LARGE_DASHES","rotate","getAngle","drawTip","drawText","separator","stereotype","contextName","getName","align","weight","getString","font","metrics","measureText","fillText","fontBoundingBoxAscent","tip","drawArrow","drawTriangle","FILLED_TRIANGLE","drawDiamond","CIRCLE","drawCircle","FILLED_CIRCLE","getHandles","renderHandleAtPoint","isSelected","getClassifierHandles","handle","isPointInHandle","abs","x1","x2","y1","y2","NW","getCenterX","NE","getCenterY","SW","SE","PNGExport","toDataURL","AppMenu","createRenderer","Canvas","div","mouseDownCoords","mouseDownRectangle","mouseDownObject","setCursor","cursor","handleLeftMouseButtonMove","coord","by","vec1","vec2","find","el","deltaX","deltaY","setLeft","setTop","setWidth","setHeight","handleHandleUpdate","onResize","trunc","renderGrid","backgroundColor","onMouseMove","buttons","setHovered","findHandleForPoint","onMouseDown","selectedElement","getRectangle","setSelected","renderMouseDown","onMouseUp","CSSEditor","position","anchorSchema","Object","keys","filter","it","shapeSchema","tipSchema","classifierSchema","attrs","relationshipSchema","classifiers","relationships","class","XMLEditor","xmlSchema","App","useState","setViewOptions","setDiagram","setStyle","setTitle","setXml","setCss","deserialize","updateElement","serialize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.06211745.chunk.js","sourcesContent":["export const GRID = 20;\nexport const PADDING = 10;\nexport const HANDLE_RADIUS = 4.5;\nexport const INITIAL_XML = `\\\n<Diagram>\n  <Interface id=\"i1\" anchor=\"s\" y=\"-60\">\n    <Stereotype/>\n    <Title>Visitor</Title>\n  </Interface>\n\n  <Class id=\"c1\" anchor=\"n\" y=\"60\" width=\"400\">\n    <Stereotype/>\n    <Title>Concrete Visitor</Title>\n    <Separator/>\n    <Method>visitSomething(something: Something)</Method>\n  </Class>\n\n  <Implementation from=\"c1\" to=\"i1\" fromAnchor=\"n\" toAnchor=\"s\"/>\n</Diagram>\n`;\nexport const INITIAL_CSS = `\\\nInterface {\n  Title {\n    font-style: italic;\n  }\n}\n\nClass {\n  Title {\n    font-weight: bold;\n  }\n}\n`;\n","class Color {\n  readonly red: number;\n  readonly green: number;\n  readonly blue: number;\n\n  static readonly BLUE = Color.fromHexString(\"#0d6efd\");\n  static readonly INDIGO = Color.fromHexString(\"#6610f2\");\n  static readonly PURPLE = Color.fromHexString(\"#6f42c1\");\n  static readonly PINK = Color.fromHexString(\"#d63384\");\n  static readonly RED = Color.fromHexString(\"#dc3545\");\n  static readonly ORANGE = Color.fromHexString(\"#fd7e14\");\n  static readonly YELLOW = Color.fromHexString(\"#ffc107\");\n  static readonly GREEN = Color.fromHexString(\"#198754\");\n  static readonly TEAL = Color.fromHexString(\"#20c997\");\n  static readonly CYAN = Color.fromHexString(\"#0dcaf0\");\n  static readonly WHITE = Color.fromHexString(\"#ffffff\");\n  static readonly GRAY = Color.fromHexString(\"#6c757d\");\n  static readonly GRAY_DARK = Color.fromHexString(\"#343a40\");\n  static readonly PRIMARY = Color.fromHexString(\"#0d6efd\");\n  static readonly SECONDARY = Color.fromHexString(\"#6c757d\");\n  static readonly SUCCESS = Color.fromHexString(\"#198754\");\n  static readonly INFO = Color.CYAN;\n  static readonly WARNING = Color.YELLOW;\n  static readonly DANGER = Color.RED;\n  static readonly LIGHT = Color.fromHexString(\"#f8f9fa\");\n  static readonly DARK = Color.fromHexString(\"#212529\");\n\n  constructor(red: number, green: number, blue: number) {\n    this.red = Color.sanitizeComponent(red);\n    this.green = Color.sanitizeComponent(green);\n    this.blue = Color.sanitizeComponent(blue);\n  }\n\n  static fromHexString(hexString: string): Color {\n    const red = parseInt(hexString.slice(1, 3), 16);\n    const green = parseInt(hexString.slice(3, 5), 16);\n    const blue = parseInt(hexString.slice(5, 7), 16);\n    return new Color(red, green, blue);\n  }\n\n  private static clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n  }\n\n  private static sanitizeComponent(value: number): number {\n    const clamped = Color.clamp(0, 255, value);\n    return Math.round(clamped);\n  }\n\n  private static intToHex(value: number): string {\n    return value.toString(16).padStart(2, \"0\");\n  }\n\n  toHexString(): string {\n    return `#${Color.intToHex(this.red)}${Color.intToHex(this.green)}${Color.intToHex(this.blue)}`;\n  }\n\n  mix(other: Color, percentage: number): Color {\n    const otherFactor = Color.clamp(0, 1, percentage);\n    const thisFactor = 1 - otherFactor;\n    const red = thisFactor * this.red + otherFactor * other.red;\n    const green = thisFactor * this.green + otherFactor * other.green;\n    const blue = thisFactor * this.blue + otherFactor * other.blue;\n    return new Color(red, green, blue);\n  }\n}\n\nexport default Color;\n","enum CSSToken {\n  LBRACE,\n  RBRACE,\n  COLON,\n  SEMI,\n  DOT,\n  HASH,\n  COLOR,\n  NUMBER,\n  IDENTIFIER,\n  ERROR,\n}\n\nexport default CSSToken;\n","import Token from \"./Token\";\nimport Tokenizer from \"./Tokenizer\";\n\nabstract class Parser<T, D> {\n  private readonly tokenizer: Tokenizer<T>;\n  private tokens: Token<T>[] = [];\n  private index = 0;\n\n  constructor(tokenizer: Tokenizer<T>) {\n    this.tokenizer = tokenizer;\n  }\n\n  parseFromString(string: string): D {\n    this.index = 0;\n    this.tokens = this.tokenizer.tokenize(string);\n    return this.parse();\n  }\n\n  protected abstract parse(): D;\n\n  protected consume(kind: T): Token<T> {\n    const token = this.tokens[this.index];\n    if (token.kind === kind) {\n      this.index += 1;\n      return token;\n    } else {\n      throw new Error(`Expected ${kind}, but was ${token.kind}`);\n    }\n  }\n\n  protected parseOneOf<U1, U2, U3>(\n    parser1: () => U1,\n    parser2: () => U2,\n    parser3: () => U3,\n  ): U1 | U2 | U3;\n  protected parseOneOf<U1, U2>(parser1: () => U1, parser2: () => U2): U1 | U2;\n  protected parseOneOf<U1>(parser1: () => U1): U1;\n  protected parseOneOf(...parsers: Array<() => unknown>): unknown {\n    for (const parser of parsers) {\n      const value = this.parseOptional(parser);\n      if (value !== undefined) {\n        return value;\n      }\n    }\n\n    throw new Error(\"None of the one ofs matched\");\n  }\n\n  protected parseSet<U>(parser: () => U): Set<U> {\n    const result = new Set<U>();\n    while (true) {\n      const oldIndex = this.index;\n      try {\n        result.add(parser.call(this));\n      } catch (err) {\n        this.index = oldIndex;\n        return result;\n      }\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any tokens\");\n      }\n    }\n  }\n\n  protected parseOptional<U>(parser: () => U): U | undefined {\n    const oldIndex = this.index;\n    let result;\n    try {\n      result = parser.call(this);\n    } catch (err) {\n      this.index = oldIndex;\n      return undefined;\n    }\n\n    const newIndex = this.index;\n    if (newIndex <= oldIndex) {\n      throw new Error(\"Did not consume any tokens\");\n    }\n\n    return result;\n  }\n}\n\nexport default Parser;\n","import Token from \"./Token\";\n\nabstract class Tokenizer<T> {\n  private subject = \"\";\n  private index = 0;\n\n  tokenize(subject: string): Token<T>[] {\n    this.subject = subject;\n    this.index = 0;\n    const tokens = [];\n    while (this.index < this.subject.length) {\n      const oldIndex = this.index;\n      const kind = this.next();\n      const newIndex = this.index;\n      if (newIndex <= oldIndex) {\n        throw new Error(\"Did not consume any characters\");\n      }\n\n      if (kind === null) {\n        continue;\n      }\n\n      const value = this.subject.slice(oldIndex, newIndex);\n      tokens.push({ kind, value });\n    }\n\n    return tokens;\n  }\n\n  protected abstract next(): T | null;\n\n  protected matches(search: RegExp): boolean {\n    const match = this.subject.slice(this.index).match(search);\n    if (match === null) {\n      return false;\n    }\n\n    this.index += match[0].length;\n    return true;\n  }\n\n  protected startsWith(search: string): boolean {\n    if (this.subject.startsWith(search, this.index)) {\n      this.index += search.length;\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default Tokenizer;\n","import { Tokenizer } from \"../parsing\";\nimport CSSToken from \"./CSSToken\";\n\nclass CSSTokenizer extends Tokenizer<CSSToken> {\n  protected next(): CSSToken | null {\n    // Whitespace\n    if (this.matches(/^\\s+/)) return null;\n\n    // Comments\n    if (this.matches(/^\\/\\/[^\\r\\n]*/)) return null;\n    if (this.matches(/^\\/\\*.*?\\*\\//)) return null;\n\n    // Literals\n    if (this.matches(/^#[0-9a-fA-F]{6}|^#[0-9a-fA-F]{3}/)) return CSSToken.COLOR;\n    if (this.matches(/^\\d+(\\.\\d*)?|^\\.\\d+/)) return CSSToken.NUMBER;\n\n    // Operators\n    if (this.startsWith(\"{\")) return CSSToken.LBRACE;\n    if (this.startsWith(\"}\")) return CSSToken.RBRACE;\n    if (this.startsWith(\":\")) return CSSToken.COLON;\n    if (this.startsWith(\";\")) return CSSToken.SEMI;\n    if (this.startsWith(\".\")) return CSSToken.DOT;\n    if (this.startsWith(\"#\")) return CSSToken.HASH;\n\n    if (this.matches(/^[a-zA-Z]+(-[a-zA-Z]+)*/)) return CSSToken.IDENTIFIER;\n\n    // Fallback\n    this.matches(/^./);\n    return CSSToken.ERROR;\n  }\n}\n\nexport default CSSTokenizer;\n","class Property {\n  readonly key: string;\n  readonly value: unknown;\n\n  constructor(key: string, value: unknown) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport default Property;\n","import Color from \"./Color\";\nimport Property from \"./Property\";\n\nclass PropertyMap implements Iterable<[string, unknown]> {\n  protected readonly map: Map<string, unknown>;\n\n  constructor(properties = new Set<Property>()) {\n    this.map = new Map<string, unknown>(\n      [...properties].map((property) => [property.key, property.value] as const),\n    );\n  }\n\n  [Symbol.iterator](): Iterator<[string, unknown]> {\n    return this.map.entries();\n  }\n\n  addAll(map: PropertyMap): this {\n    for (const [key, value] of map) {\n      this.map.set(key, value);\n    }\n    return this;\n  }\n\n  getString(key: string, fallback: string): string {\n    const value = this.map.get(key);\n    if (typeof value === \"string\") {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getColor(key: string, fallback: Color): Color {\n    const value = this.map.get(key);\n    if (value instanceof Color) {\n      return value;\n    }\n\n    return fallback;\n  }\n\n  getFloat(key: string, fallback: number): number {\n    const value = this.map.get(key);\n    if (typeof value === \"number\") {\n      return value;\n    }\n\n    return fallback;\n  }\n}\n\nexport default PropertyMap;\n","import PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\n\nclass Style {\n  readonly rules: Set<Rule>;\n\n  constructor(rules = new Set<Rule>()) {\n    this.rules = rules;\n  }\n\n  getProperties(context: string[]): PropertyMap {\n    const result = new PropertyMap();\n    const [head, ...tail] = context;\n    const hasTail = tail.length > 0;\n    for (const rule of this.rules) {\n      if (rule.selector.tag === head) {\n        const properties = new PropertyMap(rule.properties);\n        if (hasTail) {\n          properties.addAll(this.getProperties(tail));\n          properties.addAll(rule.getProperties(tail));\n        }\n        result.addAll(properties);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default Style;\n","import Style from \"./Style\";\nimport Property from \"./Property\";\nimport Selector from \"./Selector\";\n\nclass Rule extends Style {\n  readonly selector: Selector;\n  readonly properties: Set<Property>;\n\n  constructor(selector: Selector, properties: Set<Property>, rules: Set<Rule>) {\n    super(rules);\n    this.selector = selector;\n    this.properties = properties;\n  }\n}\n\nexport default Rule;\n","class Selector {\n  readonly tag: string;\n  readonly classes: Set<string>;\n  readonly id?: string;\n\n  constructor(tag: string, classes: Set<string>, id?: string) {\n    this.tag = tag;\n    this.classes = classes;\n    this.id = id;\n  }\n}\n\nexport default Selector;\n","import Color from \"./Color\";\nimport CSSParser from \"./CSSParser\";\nimport Property from \"./Property\";\nimport PropertyMap from \"./PropertyMap\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nexport { Color, CSSParser, Property, PropertyMap, Rule, Selector, Style };\n\nexport const parser = new CSSParser();\n","import { Parser } from \"../parsing\";\nimport Color from \"./Color\";\nimport CSSToken from \"./CSSToken\";\nimport CSSTokenizer from \"./CSSTokenizer\";\nimport Property from \"./Property\";\nimport Rule from \"./Rule\";\nimport Selector from \"./Selector\";\nimport Style from \"./Style\";\n\nclass CSSParser extends Parser<CSSToken, Style> {\n  constructor() {\n    super(new CSSTokenizer());\n  }\n\n  protected parse(): Style {\n    return new Style(this.parseRuleSet());\n  }\n\n  private parseRuleSet(): Set<Rule> {\n    return this.parseSet(this.parseRule);\n  }\n\n  protected parseRule(): Rule {\n    const selector = this.parseSelector();\n    this.consume(CSSToken.LBRACE);\n    const properties = this.parsePropertySet();\n    const rules = this.parseRuleSet();\n    this.consume(CSSToken.RBRACE);\n\n    return new Rule(selector, properties, rules);\n  }\n\n  private parseSelector(): Selector {\n    const tag = this.consume(CSSToken.IDENTIFIER);\n    const classes = this.parseClassSet();\n    const id = this.parseOptionalId();\n\n    return new Selector(tag.value, classes, id);\n  }\n\n  private parsePropertySet(): Set<Property> {\n    return this.parseSet(this.parseProperty);\n  }\n\n  private parseProperty(): Property {\n    const key = this.parseIdentifier();\n    this.consume(CSSToken.COLON);\n\n    const value = this.parseOneOf(this.parseColor, this.parseNumber, this.parseIdentifierValue);\n    this.consume(CSSToken.SEMI);\n\n    return new Property(key, value);\n  }\n\n  private parseClassSet(): Set<string> {\n    return this.parseSet(this.parseClass);\n  }\n\n  private parseClass(): string {\n    this.consume(CSSToken.DOT);\n    const className = this.consume(CSSToken.IDENTIFIER);\n    return className.value;\n  }\n\n  private parseOptionalId(): string | undefined {\n    return this.parseOptional(this.parseId);\n  }\n\n  private parseId(): string {\n    this.consume(CSSToken.HASH);\n    const id = this.consume(CSSToken.IDENTIFIER);\n    return id.value;\n  }\n\n  private parseColor(): Color {\n    const color = this.consume(CSSToken.COLOR);\n    return Color.fromHexString(color.value);\n  }\n\n  private parseNumber(): number {\n    const number = this.consume(CSSToken.NUMBER);\n    return parseFloat(number.value);\n  }\n\n  private parseIdentifierValue(): string | Color {\n    const identifier = this.parseIdentifier();\n    switch (identifier) {\n      case \"blue\":\n        return Color.BLUE;\n      case \"indigo\":\n        return Color.INDIGO;\n      case \"purple\":\n        return Color.PURPLE;\n      case \"pink\":\n        return Color.PINK;\n      case \"red\":\n        return Color.RED;\n      case \"orange\":\n        return Color.ORANGE;\n      case \"yellow\":\n        return Color.YELLOW;\n      case \"green\":\n        return Color.GREEN;\n      case \"teal\":\n        return Color.TEAL;\n      case \"cyan\":\n        return Color.CYAN;\n      case \"white\":\n        return Color.WHITE;\n      case \"gray\":\n        return Color.GRAY;\n      case \"gray-dark\":\n        return Color.GRAY_DARK;\n      case \"primary\":\n        return Color.PRIMARY;\n      case \"secondary\":\n        return Color.SECONDARY;\n      case \"success\":\n        return Color.SUCCESS;\n      case \"info\":\n        return Color.INFO;\n      case \"warning\":\n        return Color.WARNING;\n      case \"danger\":\n        return Color.DANGER;\n      case \"light\":\n        return Color.LIGHT;\n      case \"dark\":\n        return Color.DARK;\n      default:\n        return identifier;\n    }\n  }\n\n  private parseIdentifier(): string {\n    const identifier = this.consume(CSSToken.IDENTIFIER);\n    return identifier.value;\n  }\n}\n\nexport default CSSParser;\n","import { useEffect } from \"react\";\n\nfunction useDocumentTitle(title: string): void {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import { useRef } from \"react\";\n\nfunction useId(prefix: string): string {\n  const ref = useRef(`${prefix}-${Math.random().toString(36).substring(2)}`);\n\n  return ref.current!;\n}\n\nexport default useId;\n","import { useEffect, useRef } from \"react\";\n\nfunction useShortcut(shortcut: string | undefined, handler: () => void): void {\n  const ref = useRef(handler);\n\n  useEffect(() => {\n    function keypressHandler(event: KeyboardEvent) {\n      if (shortcut !== undefined && matchesShortcut(shortcut, event)) {\n        event.preventDefault();\n        ref.current();\n      }\n    }\n\n    document.addEventListener(\"keydown\", keypressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keypressHandler);\n    };\n  }, [shortcut]);\n\n  useEffect(() => {\n    ref.current = handler;\n  });\n}\n\nfunction matchesShortcut(shortcut: string, event: KeyboardEvent) {\n  let result = true;\n\n  const elements = shortcut.split(\"-\");\n  for (const element of elements) {\n    if (element === \"Ctrl\") {\n      result = result && event.ctrlKey;\n    } else if (element === \"Shift\") {\n      result = result && event.shiftKey;\n    } else if (element === \"Alt\") {\n      result = result && event.altKey;\n    } else {\n      result = result && event.key.toLowerCase() === element.toLowerCase();\n    }\n  }\n\n  return result;\n}\n\nexport default useShortcut;\n","enum Anchor {\n  N,\n  NNE,\n  NE,\n  ENE,\n  E,\n  ESE,\n  SE,\n  SSE,\n  S,\n  SSW,\n  SW,\n  WSW,\n  W,\n  WNW,\n  NW,\n  NNW,\n}\n\nexport default Anchor;\n","import { Anchor } from \"../model\";\n\nexport function qsin(anchor: Anchor): number {\n  if ((anchor + 6) % 16 < 5) {\n    return 0;\n  }\n\n  if ((anchor + 14) % 16 < 5) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.NNW:\n    case Anchor.SSW:\n      return 1 / 4;\n    case Anchor.N:\n    case Anchor.S:\n      return 1 / 2;\n    case Anchor.NNE:\n    case Anchor.SSE:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n\nexport function qcos(anchor: Anchor): number {\n  if ((anchor + 2) % 16 < 5) {\n    return 0;\n  }\n\n  if ((anchor + 10) % 16 < 5) {\n    return 1;\n  }\n\n  switch (anchor) {\n    case Anchor.ENE:\n    case Anchor.WNW:\n      return 1 / 4;\n    case Anchor.E:\n    case Anchor.W:\n      return 1 / 2;\n    case Anchor.ESE:\n    case Anchor.WSW:\n      return 3 / 4;\n  }\n\n  throw new Error();\n}\n","import Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nabstract class AbstractElement implements Element {\n  private readonly children = new Set<Element>();\n  private hovered = false;\n  private selected = false;\n\n  abstract render(renderer: Renderer): void;\n\n  getChildren(): readonly Element[] {\n    return [...this.children];\n  }\n\n  addChild(child: Element): this {\n    this.children.add(child);\n    return this;\n  }\n\n  deleteChild(child: Element): boolean {\n    return this.children.delete(child);\n  }\n\n  *[Symbol.iterator](): Iterator<Element> {\n    for (const child of [...this.children].reverse()) {\n      yield* child;\n    }\n    yield this;\n  }\n\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.hovered = hovered;\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n\n  setSelected(selected: boolean): void {\n    this.selected = selected;\n  }\n}\n\nexport default AbstractElement;\n","enum Shape {\n  RECTANGLE,\n  ELLIPSE,\n  NOTE,\n  FOLDER,\n  BOX,\n  FILE,\n  COMPONENT,\n}\n\nexport default Shape;\n","enum LinePattern {\n  SOLID,\n  DOTS,\n  SMALL_DASHES,\n  LARGE_DASHES,\n  TIGHT_DASHES,\n}\n\nexport default LinePattern;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Rectangle from \"./Rectangle\";\nimport Renderer from \"./Renderer\";\nimport Shape from \"./Shape\";\n\nclass Classifier extends AbstractElement {\n  private readonly anchor: Anchor;\n  x: number;\n  y: number;\n  private width: number;\n  private height: number;\n  shape: Shape = Shape.RECTANGLE;\n\n  constructor(anchor: Anchor, x: number, y: number, width: number, height: number) {\n    super();\n    this.anchor = anchor;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getTagName(): string {\n    return \"Classifier\";\n  }\n\n  getRectangle(): Rectangle {\n    return {\n      x: this.getLeft(),\n      y: this.getTop(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setHeight(height: number): void {\n    this.height = height;\n  }\n\n  getLeft(): number {\n    return this.x - this.width * qsin(this.anchor);\n  }\n\n  setLeft(left: number): void {\n    this.x = left + this.width * qsin(this.anchor);\n  }\n\n  getCenterX(): number {\n    return this.getLeft() + this.width / 2;\n  }\n\n  getRight(): number {\n    return this.getLeft() + this.width;\n  }\n\n  getTop(): number {\n    return this.y - this.height * qcos(this.anchor);\n  }\n\n  setTop(top: number): void {\n    this.y = top + this.height * qcos(this.anchor);\n  }\n\n  getCenterY(): number {\n    return this.getTop() + this.height / 2;\n  }\n\n  getBottom(): number {\n    return this.getTop() + this.height;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderClassifier(this);\n  }\n}\n\nexport default Classifier;\n","import { Predicate } from \"../utils\";\nimport AbstractElement from \"./AbstractElement\";\nimport Classifier from \"./Classifier\";\nimport Element from \"./Element\";\nimport Renderer from \"./Renderer\";\n\nclass Diagram extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderDiagram(this);\n  }\n\n  find(predicate: Predicate<Element>): Element | undefined {\n    return this.findElement(this, predicate);\n  }\n\n  private findElement(element: Element, predicate: Predicate<Element>): Element | undefined {\n    const result = predicate(element);\n    if (result) {\n      return element;\n    }\n\n    for (const child of element.getChildren()) {\n      const result = this.findElement(child, predicate);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    return undefined;\n  }\n\n  getWidth(): number {\n    return this.getRight() - this.getLeft();\n  }\n\n  getHeight(): number {\n    return this.getBottom() - this.getTop();\n  }\n\n  getTop(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const top = classifier.getTop();\n      return acc > top ? top : acc;\n    }, Infinity);\n  }\n\n  getBottom(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const bottom = classifier.getBottom();\n      return acc < bottom ? bottom : acc;\n    }, -Infinity);\n  }\n\n  getLeft(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const left = classifier.getLeft();\n      return acc > left ? left : acc;\n    }, Infinity);\n  }\n\n  getRight(): number {\n    return this.reduceClassifiers((acc, classifier) => {\n      const right = classifier.getRight();\n      return acc < right ? right : acc;\n    }, -Infinity);\n  }\n\n  private reduceClassifiers(\n    reducer: (acc: number, classifier: Classifier) => number,\n    seed: number,\n  ): number {\n    let acc = seed;\n    for (const classifier of this.getChildren()) {\n      if (classifier instanceof Classifier) {\n        acc = reducer(acc, classifier);\n      }\n    }\n\n    if (acc === seed) {\n      return 0;\n    }\n\n    return acc;\n  }\n}\n\nexport default Diagram;\n","enum Tip {\n  NONE,\n  ARROW,\n  TRIANGLE,\n  FILLED_TRIANGLE,\n  DIAMOND,\n  FILLED_DIAMOND,\n  CIRCLE,\n  FILLED_CIRCLE,\n}\n\nexport default Tip;\n","import { qcos, qsin } from \"../renderer/anchors\";\nimport AbstractElement from \"./AbstractElement\";\nimport Anchor from \"./Anchor\";\nimport Classifier from \"./Classifier\";\nimport LinePattern from \"./LinePattern\";\nimport Renderer from \"./Renderer\";\nimport Tip from \"./Tip\";\n\nclass Relationship extends AbstractElement {\n  from: Classifier;\n  fromAnchor: Anchor;\n  fromTip: Tip = Tip.NONE;\n  to: Classifier;\n  toAnchor: Anchor;\n  toTip: Tip = Tip.NONE;\n  linePattern: LinePattern = LinePattern.SOLID;\n\n  constructor(from: Classifier, fromAnchor: Anchor, to: Classifier, toAnchor: Anchor) {\n    super();\n    this.from = from;\n    this.fromAnchor = fromAnchor;\n    this.to = to;\n    this.toAnchor = toAnchor;\n  }\n\n  getX1(): number {\n    return this.from.getLeft() + qsin(this.fromAnchor) * this.from.getWidth();\n  }\n\n  getY1(): number {\n    return this.from.getTop() + qcos(this.fromAnchor) * this.from.getHeight();\n  }\n\n  getX2(): number {\n    return this.to.getLeft() + qsin(this.toAnchor) * this.to.getWidth();\n  }\n\n  getY2(): number {\n    return this.to.getTop() + qcos(this.toAnchor) * this.to.getHeight();\n  }\n\n  getAngle(): number {\n    return Math.atan2(this.getY2() - this.getY1(), this.getX2() - this.getX1());\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderRelationship(this);\n  }\n}\n\nexport default Relationship;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Separator extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderSeparator(this);\n  }\n}\n\nexport default Separator;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Stereotype extends AbstractElement {\n  render(renderer: Renderer): void {\n    renderer.renderStereotype(this);\n  }\n}\n\nexport default Stereotype;\n","import AbstractElement from \"./AbstractElement\";\nimport Renderer from \"./Renderer\";\n\nclass Text extends AbstractElement {\n  readonly text: string;\n\n  constructor(text: string) {\n    super();\n    this.text = text;\n  }\n\n  render(renderer: Renderer): void {\n    renderer.renderText(this);\n  }\n}\n\nexport default Text;\n","import Text from \"./Text\";\nimport Renderer from \"./Renderer\";\n\nclass Title extends Text {\n  render(renderer: Renderer): void {\n    renderer.renderTitle(this);\n  }\n}\n\nexport default Title;\n","import { SerializableFile } from \"../utils\";\n\nclass FileSerializer {\n  saveToString(file: SerializableFile): string {\n    const header = `title: ${file.title}`;\n    const model = file.xml;\n    const style = file.css;\n    return this.joinSections(header, model, style);\n  }\n\n  loadFromString(content: string): SerializableFile {\n    const [headerString, model, style] = this.splitSections(content, 3);\n    const header = this.parseHeader(headerString);\n    return {\n      title: header.title ?? \"Untitled\",\n      xml: model,\n      css: style,\n    };\n  }\n\n  private joinSections(...sections: string[]): string {\n    return sections.map((str) => str.trim()).join(\"\\n---\\n\") + \"\\n\";\n  }\n\n  private splitSections(content: string, expectedNumber: number): string[] {\n    const sections = content.split(\"\\n---\\n\");\n    if (sections.length !== expectedNumber) {\n      throw new Error(`Expected ${expectedNumber} sections`);\n    }\n\n    return sections;\n  }\n\n  private parseHeader(headerString: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    for (const line of headerString.split(/\\r\\n|[\\r\\n]/)) {\n      const [key, value] = line.split(/:\\s*/, 2);\n      result[key] = value;\n    }\n\n    return result;\n  }\n}\n\nexport default FileSerializer;\n","import { Classifier } from \"../model\";\nimport * as Model from \"../model\";\n\ninterface Class<T> {\n  new (...args: any[]): T;\n}\n\nclass Serializer {\n  private readonly parser: DOMParser;\n  private readonly serializer: XMLSerializer;\n  private readonly elementMap = new Map<Element, Model.Element>();\n\n  constructor() {\n    this.parser = new DOMParser();\n    this.serializer = new XMLSerializer();\n  }\n\n  deserialize(xml: string): Model.Diagram {\n    this.elementMap.clear();\n    const document = this.parser.parseFromString(xml, \"text/xml\");\n    const diagram = this.parseElement(document.documentElement);\n    if (!(diagram instanceof Model.Diagram)) {\n      return new Model.Diagram();\n    }\n\n    return diagram;\n  }\n\n  serialize(diagram: Model.Diagram): string {\n    if (this.hasElement(diagram)) {\n      const root = this.getElement(diagram)!;\n      return this.serializer.serializeToString(root);\n    }\n\n    return \"\";\n  }\n\n  updateElement(element: Model.Element): void {\n    if (this.hasElement(element)) {\n      const xmlElement = this.getElement(element)!;\n      if (element instanceof Classifier) {\n        this.setClassifier(xmlElement, element);\n      }\n    }\n  }\n\n  private parseElement(element: Element): Model.Element {\n    if (this.elementMap.has(element)) {\n      return this.elementMap.get(element)!;\n    }\n\n    const parsed = this.doParseElement(element);\n    this.elementMap.set(element, parsed);\n    return parsed;\n  }\n\n  protected doParseElement(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Diagram\":\n        return this.parseDiagram(element);\n      case \"Classifier\":\n        return this.parseClassifier(Model.Classifier, element);\n      case \"Relationship\":\n        return this.parseRelationship(Model.Relationship, element);\n      case \"Title\":\n        return this.parseTitle(element);\n      case \"Method\":\n      case \"Text\":\n        return this.parseText(element);\n      case \"Separator\":\n        return new Model.Separator();\n      case \"Stereotype\":\n        return new Model.Stereotype();\n    }\n\n    throw new Error(`Unknown tag: ${element.tagName}`);\n  }\n\n  private parseDiagram(element: Element): Model.Diagram {\n    const diagram = new Model.Diagram();\n    this.parseChildren(element, diagram);\n    return diagram;\n  }\n\n  protected parseClassifier<C extends Model.Classifier>(\n    constructor: Class<C>,\n    element: Element,\n  ): C {\n    const anchor = this.parseAnchorAttribute(element, \"anchor\");\n    const x = this.parseIntAttribute(element, \"x\", 0);\n    const y = this.parseIntAttribute(element, \"y\", 0);\n    const width = this.parseIntAttribute(element, \"width\", 200);\n    const height = this.parseIntAttribute(element, \"height\", 120);\n    const classifier = new constructor(anchor, x, y, width, height);\n    classifier.shape = this.parseEnumAttribute(Model.Shape, element, \"shape\", classifier.shape);\n    this.parseChildren(element, classifier);\n    return classifier;\n  }\n\n  protected setClassifier(element: Element, classifier: Classifier): void {\n    this.setIntAttribute(element, \"x\", 0, classifier.getX());\n    this.setIntAttribute(element, \"y\", 0, classifier.getY());\n    this.setIntAttribute(element, \"width\", 200, classifier.getWidth());\n    this.setIntAttribute(element, \"height\", 120, classifier.getHeight());\n  }\n\n  protected parseRelationship<R extends Model.Relationship>(\n    constructor: Class<R>,\n    element: Element,\n  ): R {\n    const from = this.parseClassifierAttribute(element, \"from\");\n    const fromAnchor = this.parseAnchorAttribute(element, \"fromAnchor\");\n    const to = this.parseClassifierAttribute(element, \"to\");\n    const toAnchor = this.parseAnchorAttribute(element, \"toAnchor\");\n    const relationship = new constructor(from, fromAnchor, to, toAnchor);\n    relationship.fromTip = this.parseTipAttribute(element, \"fromTip\", relationship.fromTip);\n    relationship.toTip = this.parseTipAttribute(element, \"toTip\", relationship.toTip);\n    relationship.linePattern = this.parseLinePatternAttribute(\n      element,\n      \"linePattern\",\n      relationship.linePattern,\n    );\n    return relationship;\n  }\n\n  private parseTitle(element: Element): Model.Title {\n    const text = element.textContent ?? \"\";\n    return new Model.Title(text);\n  }\n\n  private parseText(element: Element): Model.Text {\n    const text = element.textContent ?? \"\";\n    return new Model.Text(text);\n  }\n\n  private parseChildren(element: Element, target: Model.Element) {\n    for (const child of element.children) {\n      try {\n        target.addChild(this.parseElement(child));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  private parseClassifierAttribute(element: Element, attribute: string): Model.Classifier {\n    if (element.hasAttribute(attribute)) {\n      const id = element.getAttribute(attribute)!;\n      const elementById = element.ownerDocument.getElementById(id);\n      if (elementById !== null) {\n        const classifier = this.parseElement(elementById);\n        if (classifier instanceof Model.Classifier) {\n          return classifier;\n        }\n      }\n    }\n\n    throw new Error(\n      `Invalid classifier: <${element.tagName} ${attribute}=\"${element.getAttribute(\n        attribute,\n      )}\" />`,\n    );\n  }\n\n  private parseAnchorAttribute(element: Element, attribute: string): Model.Anchor {\n    return this.parseEnumAttribute(Model.Anchor, element, attribute, Model.Anchor.S);\n  }\n\n  private parseTipAttribute(element: Element, attribute: string, fallback: Model.Tip): Model.Tip {\n    return this.parseEnumAttribute(Model.Tip, element, attribute, fallback);\n  }\n\n  private parseLinePatternAttribute(\n    element: Element,\n    attribute: string,\n    fallback: Model.LinePattern,\n  ): Model.LinePattern {\n    return this.parseEnumAttribute(Model.LinePattern, element, attribute, fallback);\n  }\n\n  private parseEnumAttribute<E>(\n    enumClass: Record<string, unknown>,\n    element: Element,\n    attribute: string,\n    fallback: E,\n  ): E {\n    if (element.hasAttribute(attribute)) {\n      const value = element.getAttribute(attribute)!;\n      const item = Reflect.get(enumClass, value.toUpperCase());\n      if (item !== undefined) {\n        return item;\n      }\n    }\n\n    return fallback;\n  }\n\n  private parseIntAttribute(element: Element, attribute: string, fallback: number): number {\n    if (element.hasAttribute(attribute)) {\n      const value = parseInt(element.getAttribute(attribute)!, 10);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n    }\n\n    return fallback;\n  }\n\n  private setIntAttribute(\n    element: Element,\n    attribute: string,\n    fallback: number,\n    value: number,\n  ): void {\n    if (value !== fallback) {\n      element.setAttribute(attribute, String(value));\n    } else {\n      element.removeAttribute(attribute);\n    }\n  }\n\n  private hasElement(element: Model.Element): boolean {\n    for (const value of this.elementMap.values()) {\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getElement(element: Model.Element): Element | undefined {\n    for (const [xmlElement, el] of this.elementMap) {\n      if (el === element) {\n        return xmlElement;\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default Serializer;\n","import { Relationship, Tip } from \"../model\";\n\nclass Aggregation extends Relationship {\n  toTip: Tip = Tip.DIAMOND;\n}\n\nexport default Aggregation;\n","import { LinePattern, Relationship } from \"../model\";\n\nclass Anchor extends Relationship {\n  linePattern: LinePattern = LinePattern.DOTS;\n}\n\nexport default Anchor;\n","import { Relationship } from \"../model\";\n\nclass Association extends Relationship {}\n\nexport default Association;\n","import { Classifier } from \"../model\";\n\nclass Class extends Classifier {\n  getTagName(): string {\n    return \"Class\";\n  }\n}\n\nexport default Class;\n","import { Classifier, Shape } from \"../model\";\n\nclass Component extends Classifier {\n  shape: Shape = Shape.COMPONENT;\n\n  getTagName(): string {\n    return \"Component\";\n  }\n}\n\nexport default Component;\n","import { Relationship, Tip } from \"../model\";\n\nclass Composition extends Relationship {\n  toTip: Tip = Tip.FILLED_DIAMOND;\n}\n\nexport default Composition;\n","import { Classifier } from \"../model\";\n\nclass DataType extends Classifier {\n  getTagName(): string {\n    return \"DataType\";\n  }\n}\n\nexport default DataType;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Dependency extends Relationship {\n  toTip: Tip = Tip.ARROW;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n}\n\nexport default Dependency;\n","import { Relationship, Tip } from \"../model\";\n\nclass DirectedAssociation extends Relationship {\n  toTip: Tip = Tip.ARROW;\n}\n\nexport default DirectedAssociation;\n","import { Classifier } from \"../model\";\n\nclass Enumeration extends Classifier {\n  getTagName(): string {\n    return \"Enumeration\";\n  }\n}\n\nexport default Enumeration;\n","import { Relationship, Tip } from \"../model\";\n\nclass Generalization extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n}\n\nexport default Generalization;\n","import { LinePattern, Relationship, Tip } from \"../model\";\n\nclass Implementation extends Relationship {\n  toTip: Tip = Tip.TRIANGLE;\n  linePattern: LinePattern = LinePattern.TIGHT_DASHES;\n}\n\nexport default Implementation;\n","import { Classifier } from \"../model\";\n\nclass Interface extends Classifier {\n  getTagName(): string {\n    return \"Interface\";\n  }\n}\n\nexport default Interface;\n","import { Classifier, Shape } from \"../model\";\n\nclass Note extends Classifier {\n  shape: Shape = Shape.NOTE;\n\n  getTagName(): string {\n    return \"Note\";\n  }\n}\n\nexport default Note;\n","import { Classifier, Shape } from \"../model\";\n\nclass Package extends Classifier {\n  shape: Shape = Shape.FOLDER;\n\n  getTagName(): string {\n    return \"Package\";\n  }\n}\n\nexport default Package;\n","import { Classifier } from \"../model\";\n\nclass Primitive extends Classifier {\n  getTagName(): string {\n    return \"Primitive\";\n  }\n}\n\nexport default Primitive;\n","import FileSerializer from \"./FileSerializer\";\nimport UMLSerializer from \"./UMLSerializer\";\n\nexport const serializer = new UMLSerializer();\nexport const fileSerializer = new FileSerializer();\n","import Serializer from \"./Serializer\";\nimport * as Model from \"../model\";\nimport * as UML from \"../uml\";\n\nclass UMLSerializer extends Serializer {\n  protected doParseElement(element: Element): Model.Element {\n    switch (element.tagName) {\n      case \"Aggregation\":\n        return this.parseRelationship(UML.Aggregation, element);\n      case \"Anchor\":\n        return this.parseRelationship(UML.Anchor, element);\n      case \"Association\":\n        return this.parseRelationship(UML.Association, element);\n      case \"Class\":\n        return this.parseClassifier(UML.Class, element);\n      case \"Component\":\n        return this.parseClassifier(UML.Component, element);\n      case \"Composition\":\n        return this.parseRelationship(UML.Composition, element);\n      case \"DataType\":\n        return this.parseClassifier(UML.DataType, element);\n      case \"Dependency\":\n        return this.parseRelationship(UML.Dependency, element);\n      case \"DirectedAssociation\":\n        return this.parseRelationship(UML.DirectedAssociation, element);\n      case \"Enumeration\":\n        return this.parseClassifier(UML.Enumeration, element);\n      case \"Generalization\":\n        return this.parseRelationship(UML.Generalization, element);\n      case \"Implementation\":\n        return this.parseRelationship(UML.Implementation, element);\n      case \"Interface\":\n        return this.parseClassifier(UML.Interface, element);\n      case \"Note\":\n        return this.parseClassifier(UML.Note, element);\n      case \"Package\":\n        return this.parseClassifier(UML.Package, element);\n      case \"Primitive\":\n        return this.parseClassifier(UML.Primitive, element);\n      default:\n        return super.doParseElement(element);\n    }\n  }\n}\n\nexport default UMLSerializer;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction ContainerFluid({ children }: Props) {\n  return <div className=\"container-fluid\">{children}</div>;\n}\n\nexport default ContainerFluid;\n","function DropdownDivider() {\n  return (\n    <li>\n      <hr className=\"dropdown-divider\" />\n    </li>\n  );\n}\n\nexport default DropdownDivider;\n","import classNames from \"classnames\";\nimport { MouseEvent, ReactNode } from \"react\";\nimport { useShortcut } from \"../../hooks\";\n\ninterface Props {\n  onClick?: () => void;\n  shortcut?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownItem({ onClick, shortcut, children }: Props) {\n  function handleClick(event: MouseEvent) {\n    event.preventDefault();\n    onClick?.();\n  }\n\n  useShortcut(shortcut, () => {\n    onClick?.();\n  });\n\n  return (\n    <li>\n      <button onClick={handleClick} className={classNames(\"btn\", \"btn-link\", \"dropdown-item\")}>\n        {children}\n        {shortcut && <span className=\"text-muted float-end\">{shortcut.replace(\"-\", \" \")}</span>}\n      </button>\n    </li>\n  );\n}\n\nexport default DropdownItem;\n","import { ReactNode } from \"react\";\n\ninterface Props {\n  labelledBy: string;\n  children?: ReactNode;\n}\n\nfunction DropdownMenu({ labelledBy, children }: Props) {\n  return (\n    <ul className=\"dropdown-menu\" aria-labelledby={labelledBy}>\n      {children}\n    </ul>\n  );\n}\n\nexport default DropdownMenu;\n","import { Dropdown } from \"bootstrap\";\nimport classNames from \"classnames\";\nimport { ReactNode, useRef } from \"react\";\n\ninterface Props {\n  id?: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownToggle({ id, className, children }: Props) {\n  const dropdown = useRef<Dropdown | null>(null);\n\n  function handleRef(element: HTMLButtonElement | null): void {\n    if (element === null) {\n      dropdown.current?.dispose();\n      dropdown.current = null;\n    } else {\n      dropdown.current = new Dropdown(element);\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      ref={handleRef}\n      aria-expanded=\"false\"\n      data-bs-toggle=\"dropdown\"\n      className={classNames(\"btn\", \"btn-link\", \"dropdown-toggle\", className)}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default DropdownToggle;\n","import CodeMirror from \"codemirror\";\nimport { MutableRefObject, useEffect, useRef } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/xml-hint\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchtags\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/theme/nord.css\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"./Editor.css\";\n\ninterface Props {\n  language: \"css\" | \"xml\";\n  value: string;\n  schema?: any;\n  onChange?: (value: string) => void;\n}\n\nfunction completeAfter(cm: CodeMirror.Editor, pred?: () => boolean) {\n  if (pred?.())\n    setTimeout(() => {\n      if (!cm.state.completionActive) cm.showHint({ completeSingle: false });\n    }, 100);\n  return CodeMirror.Pass;\n}\n\nfunction completeIfAfterLt(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const cur = cm.getCursor();\n    return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === \"<\";\n  });\n}\n\nfunction completeIfInTag(cm: CodeMirror.Editor) {\n  return completeAfter(cm, () => {\n    const tok = cm.getTokenAt(cm.getCursor());\n    if (\n      tok.type === \"string\" &&\n      (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)\n    )\n      return false;\n    const inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n    return inner.tagName;\n  });\n}\n\nfunction Editor({ language, value, schema, onChange }: Props) {\n  const onChangeRef = useRef(onChange);\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const editor = useRef<CodeMirror.Editor>(null) as MutableRefObject<CodeMirror.Editor>;\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    const mode = language === \"xml\" ? \"xml\" : \"text/x-scss\";\n    const hintOptions = { schemaInfo: schema } as any;\n    const codeMirror = CodeMirror.fromTextArea(ref.current!, {\n      mode,\n      lineNumbers: true,\n      theme: \"nord\",\n      matchTags: true,\n      autocorrect: true,\n      extraKeys: {\n        \"'<'\": completeAfter,\n        \"'/'\": completeIfAfterLt,\n        \"' '\": completeIfInTag,\n        \"'='\": completeIfInTag,\n        \"Ctrl-Space\": \"autocomplete\",\n        \"Ctrl-/\": \"toggleComment\",\n      },\n      hintOptions,\n    });\n    editor.current = codeMirror;\n\n    return () => {\n      codeMirror.toTextArea();\n    };\n  }, [language, schema]);\n\n  useEffect(() => {\n    if (editor.current!.getValue() !== value) {\n      editor.current!.setValue(value);\n    }\n\n    function handleChange() {\n      const newValue = editor.current!.getValue();\n      if (newValue !== value) {\n        onChangeRef.current?.(newValue);\n      }\n    }\n\n    editor.current!.on(\"change\", handleChange);\n    return () => {\n      editor.current!.off(\"change\", handleChange);\n    };\n  }, [value]);\n\n  return <textarea ref={ref} defaultValue={value} />;\n}\n\nexport default Editor;\n","import iconUrl from \"bootstrap-icons/bootstrap-icons.svg\";\nimport { Color } from \"../../css\";\nimport \"./Icon.css\";\n\ninterface Props {\n  name: string;\n  color?: Color;\n  size?: number;\n}\n\nfunction Icon({ name, color = Color.DARK, size = 20 }: Props) {\n  return (\n    <svg className=\"Icon me-2\" width={size} height={size} fill={color.toHexString()}>\n      <use xlinkHref={`${iconUrl}#${name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/logo.4da087a9.png\";","import { ReactNode } from \"react\";\nimport ContainerFluid from \"./ContainerFluid\";\nimport logo from \"./logo.png\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nfunction MenuBar({ children }: Props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ gridArea: \"menu\" }}>\n      <ContainerFluid>\n        <span className=\"navbar-brand\">\n          <img alt=\"Logo\" src={logo} height={32} width={32} className=\"d-inline-block align-top\" />{\" \"}\n          UML Editor\n        </span>\n        <ul className=\"navbar-nav me-auto\">{children}</ul>\n      </ContainerFluid>\n    </nav>\n  );\n}\n\nexport default MenuBar;\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\nimport { useId } from \"../../hooks\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport DropdownToggle from \"./DropdownToggle\";\n\ninterface Props {\n  active?: boolean;\n  title: string;\n  children?: ReactNode;\n}\n\nfunction Menu({ active = false, title, children }: Props) {\n  const id = useId(\"Menu\");\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <DropdownToggle id={id} className={classNames(\"nav-link\", { active })}>\n        {title}\n      </DropdownToggle>\n      <DropdownMenu labelledBy={id}>{children}</DropdownMenu>\n    </li>\n  );\n}\n\nexport default Menu;\n","import { Dispatch } from \"react\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../../constants\";\nimport { SerializableFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileNew({ onFileChange }: Props) {\n  function handleClick() {\n    onFileChange({\n      title: window.prompt(\"Choose a title for the new document:\", \"Untitled\") ?? \"Untitled\",\n      css: INITIAL_CSS,\n      xml: INITIAL_XML,\n    });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"file-earmark-plus\" /> New ...\n    </DropdownItem>\n  );\n}\n\nexport default FileNew;\n","import { MouseEvent } from \"react\";\nimport { Style } from \"./css\";\nimport { Diagram } from \"./model\";\n\nexport interface Coordinates {\n  readonly x: number;\n  readonly y: number;\n}\n\nexport interface Consumer<T> {\n  (item: T): void;\n}\n\nexport interface Predicate<T> {\n  (item: T): boolean;\n}\n\nexport interface SerializableFile {\n  title: string;\n  xml: string;\n  css: string;\n}\n\nexport interface File extends SerializableFile {\n  model: Diagram;\n  style: Style;\n}\n\nexport interface ViewOptions {\n  grid: boolean;\n}\n\nexport function getMouseCoordinates(event: MouseEvent<HTMLCanvasElement>): Coordinates {\n  const { clientX, clientY } = event;\n  const boundingClientRect = event.currentTarget.getBoundingClientRect();\n\n  const x = clientX - boundingClientRect.x - boundingClientRect.width / 2;\n  const y = clientY - boundingClientRect.y - boundingClientRect.height / 2;\n\n  return { x, y };\n}\n\nexport function subtractCoords(vec1: Coordinates, vec2: Coordinates): Coordinates {\n  const x = vec1.x - vec2.x;\n  const y = vec1.y - vec2.y;\n  return { x, y };\n}\n\nexport function roundCoordsBy(coord: Coordinates, by: number): Coordinates {\n  return {\n    x: Math.round(coord.x / by) * by,\n    y: Math.round(coord.y / by) * by,\n  };\n}\n\nexport function sanitizeFilename(element: string): string {\n  return element.replace(/[^a-zA-Z_-]+/g, \"-\");\n}\n\nexport function downloadFile(filename: string, dataURL: string): void {\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.download = filename;\n  downloadLink.href = dataURL;\n  downloadLink.click();\n}\n\nexport function uploadFile(pattern: string): Promise<string> {\n  return new Promise<string>((resolve) => {\n    const uploadInput = document.createElement(\"input\");\n\n    uploadInput.addEventListener(\n      \"change\",\n      () => {\n        if (uploadInput.files!.length > 0) {\n          resolve(uploadInput.files!.item(0)!.text());\n        }\n      },\n      { once: true },\n    );\n\n    uploadInput.type = \"file\";\n    uploadInput.accept = pattern;\n    uploadInput.multiple = false;\n    uploadInput.click();\n  });\n}\n","import { Dispatch } from \"react\";\nimport { fileSerializer } from \"../../serializer\";\nimport { SerializableFile, uploadFile } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  onFileChange: Dispatch<SerializableFile>;\n}\n\nfunction FileOpen({ onFileChange }: Props) {\n  function handleClick() {\n    uploadFile(\".uml\").then((content) => {\n      const file = fileSerializer.loadFromString(content);\n      onFileChange(file);\n    });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-O\">\n      <Icon name=\"folder\" /> Open\n    </DropdownItem>\n  );\n}\n\nexport default FileOpen;\n","import { Dispatch } from \"react\";\nimport { File } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n  onTitleChange: Dispatch<string>;\n}\n\nfunction FileRename({ file, onTitleChange }: Props) {\n  function handleClick(): void {\n    const newTitle = window.prompt(\"New document title\", file.title);\n    if (newTitle !== null) {\n      onTitleChange(newTitle);\n    }\n  }\n\n  return (\n    <DropdownItem onClick={handleClick}>\n      <Icon name=\"pencil\" /> Rename \"{file.title}\" ...\n    </DropdownItem>\n  );\n}\n\nexport default FileRename;\n","import { fileSerializer } from \"../../serializer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nfunction FileSave({ file }: Props) {\n  function handleClick() {\n    const content = btoa(fileSerializer.saveToString(file));\n    const url = new URL(`data:text/x-uml;base64,${content}`);\n\n    downloadFile(`${sanitizeFilename(file.title)}.uml`, url.toString());\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-S\">\n      <Icon name=\"cloud-download\" /> Save\n    </DropdownItem>\n  );\n}\n\nexport default FileSave;\n","import { Dispatch } from \"react\";\nimport { ViewOptions } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n}\n\nfunction Grid({ viewOptions, onViewOptionsChange }: Props) {\n  const { grid } = viewOptions;\n  const icon = grid ? \"grid-3x3-gap-fill\" : \"grid-3x3-gap\";\n\n  function handleClick() {\n    onViewOptionsChange({ ...viewOptions, grid: !grid });\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Alt-G\">\n      <Icon name={icon} /> Toggle Grid\n    </DropdownItem>\n  );\n}\n\nexport default Grid;\n","import { Color } from \"../css\";\nimport { Classifier, ClassifierRenderer, Renderer, Shape } from \"../model\";\nimport { PADDING } from \"../constants\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasClassifierRenderer implements ClassifierRenderer {\n  private readonly renderer: Renderer;\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n\n  constructor(renderer: Renderer, context: RenderContext, canvas: CanvasRenderingContext2D) {\n    this.renderer = renderer;\n    this.context = context;\n    this.canvas = canvas;\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.context.push(\n      classifier.getTagName(),\n      classifier.getWidth() - 2 * PADDING,\n      classifier.getHeight() - 2 * PADDING,\n    );\n\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.applyStyle(classifier);\n    this.drawShape(classifier);\n    this.canvas.fill();\n    this.canvas.stroke();\n    this.canvas.clip();\n\n    this.canvas.translate(PADDING, PADDING);\n    for (const child of classifier.getChildren()) {\n      child.render(this.renderer);\n    }\n\n    this.canvas.restore();\n\n    this.context.pop();\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    this.canvas.save();\n    this.canvas.translate(classifier.getLeft(), classifier.getTop());\n    this.drawShape(classifier);\n    const result = this.canvas.isPointInPath(x, y);\n    this.canvas.restore();\n\n    return result;\n  }\n\n  private applyStyle(classifier: Classifier): void {\n    const properties = this.context.getStyleProperties();\n    this.canvas.lineWidth = properties.getFloat(\"line-width\", 1.5);\n    this.canvas.strokeStyle = properties.getColor(\"stroke\", Color.DARK).toHexString();\n    let fill = properties.getColor(\"fill\", Color.WHITE);\n    if (classifier.isHovered()) {\n      fill = fill.mix(Color.INFO, 0.25);\n    }\n    this.canvas.fillStyle = fill.toHexString();\n  }\n\n  private drawShape(classifier: Classifier): void {\n    this.canvas.beginPath();\n    switch (classifier.shape) {\n      case Shape.RECTANGLE:\n        this.drawRectangleShape(classifier);\n        return;\n      case Shape.ELLIPSE:\n        this.drawEllipseShape(classifier);\n        return;\n      case Shape.FOLDER:\n        this.drawFolderShape(classifier);\n        return;\n      case Shape.NOTE:\n        this.drawNoteShape(classifier);\n        return;\n      case Shape.BOX:\n        this.drawBoxShape(classifier);\n        return;\n      case Shape.FILE:\n        this.drawFileShape(classifier);\n        return;\n      case Shape.COMPONENT:\n        this.drawComponentShape(classifier);\n        return;\n    }\n  }\n\n  private drawBoxShape(classifier: Classifier) {\n    const BOX_DEPTH = 20;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.rect(0, 0, w, h);\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(w, 0);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.lineTo(BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w, 0);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w + BOX_DEPTH, h - BOX_DEPTH);\n    this.canvas.lineTo(w + BOX_DEPTH, -BOX_DEPTH);\n    this.canvas.closePath();\n  }\n\n  private drawRectangleShape(classifier: Classifier) {\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawEllipseShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.ellipse(w / 2, h / 2, w / 2, h / 2, 0, 0, 2 * Math.PI);\n  }\n\n  private drawFolderShape(classifier: Classifier) {\n    const FOLDER_WIDTH = 80;\n    const FOLDER_HEIGHT = 20;\n    this.canvas.rect(0, -FOLDER_HEIGHT, FOLDER_WIDTH, FOLDER_HEIGHT);\n    this.canvas.rect(0, 0, classifier.getWidth(), classifier.getHeight());\n  }\n\n  private drawNoteShape(classifier: Classifier) {\n    const NOTE_SIZE = 30;\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(w - NOTE_SIZE, h);\n    this.canvas.lineTo(w, h - NOTE_SIZE);\n    this.canvas.lineTo(w - NOTE_SIZE, h - NOTE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawFileShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const FILE_SIZE = 30;\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.moveTo(FILE_SIZE, 0);\n    this.canvas.lineTo(0, FILE_SIZE);\n    this.canvas.lineTo(FILE_SIZE, FILE_SIZE);\n    this.canvas.closePath();\n  }\n\n  private drawComponentShape(classifier: Classifier) {\n    const w = classifier.getWidth();\n    const h = classifier.getHeight();\n    const COMPONENT_WIDTH = 40;\n    const COMPONENT_HEIGHT = 20;\n    const COMPONENT_Y = (h - COMPONENT_HEIGHT * 3) / 2;\n\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(0, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 2);\n    this.canvas.lineTo(COMPONENT_WIDTH / 2, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, COMPONENT_Y + COMPONENT_HEIGHT * 3);\n    this.canvas.lineTo(0, h);\n    this.canvas.lineTo(w, h);\n    this.canvas.lineTo(w, 0);\n    this.canvas.closePath();\n\n    this.canvas.rect(COMPONENT_WIDTH / -2, COMPONENT_Y, COMPONENT_WIDTH, COMPONENT_HEIGHT);\n    this.canvas.rect(\n      COMPONENT_WIDTH / -2,\n      COMPONENT_Y + 2 * COMPONENT_HEIGHT,\n      COMPONENT_WIDTH,\n      COMPONENT_HEIGHT,\n    );\n  }\n}\n\nexport default CanvasClassifierRenderer;\n","import { Anchor } from \"../model\";\n\nclass Handle {\n  readonly x: number;\n  readonly y: number;\n  readonly anchor: Anchor;\n\n  constructor(x: number, y: number, anchor: Anchor) {\n    this.x = x;\n    this.y = y;\n    this.anchor = anchor;\n  }\n}\n\nexport default Handle;\n","import { PropertyMap, Style } from \"../css\";\n\nclass RenderContext {\n  private readonly width: number[];\n  private readonly height: number[];\n  private readonly context: string[];\n  private readonly style: Style;\n\n  constructor(canvasWidth: number, canvasHeight: number, style: Style) {\n    this.width = [canvasWidth];\n    this.height = [canvasHeight];\n    this.context = [];\n    this.style = style;\n  }\n\n  push(name: string, width?: number, height?: number): void {\n    this.context.unshift(name);\n    this.width.unshift(width ?? this.getWidth());\n    this.height.unshift(height ?? this.getHeight());\n  }\n\n  pop(): void {\n    this.context.shift();\n    this.width.shift();\n    this.height.shift();\n  }\n\n  getName(): string {\n    return this.context[0];\n  }\n\n  getWidth(): number {\n    return this.width[0];\n  }\n\n  getHeight(): number {\n    return this.height[0];\n  }\n\n  getStyleProperties(): PropertyMap {\n    return this.style.getProperties([...this.context].reverse());\n  }\n}\n\nexport default RenderContext;\n","import { Color, Style } from \"../css\";\nimport {\n  Anchor,\n  Classifier,\n  Diagram,\n  LinePattern,\n  Relationship,\n  Renderer,\n  Separator,\n  Stereotype,\n  Text,\n  Tip,\n  Title,\n} from \"../model\";\nimport CanvasClassifierRenderer from \"./CanvasClassifierRenderer\";\nimport CanvasOptions from \"./CanvasOptions\";\nimport { GRID, HANDLE_RADIUS, PADDING } from \"../constants\";\nimport Handle from \"./Handle\";\nimport RenderContext from \"./RenderContext\";\n\nclass CanvasRenderer implements Renderer {\n  private readonly context: RenderContext;\n  private readonly canvas: CanvasRenderingContext2D;\n  private readonly classifierRenderer: CanvasClassifierRenderer;\n  private readonly translateX: number;\n  private readonly translateY: number;\n\n  constructor(canvas: HTMLCanvasElement, style: Style, options: CanvasOptions) {\n    this.context = new RenderContext(canvas.width, canvas.height, style);\n    this.translateX = options.translateX;\n    this.translateY = options.translateY;\n    this.canvas = canvas.getContext(\"2d\")!;\n    this.classifierRenderer = new CanvasClassifierRenderer(this, this.context, this.canvas);\n  }\n\n  clear(): void {\n    this.canvas.clearRect(0, 0, this.context.getWidth(), this.context.getHeight());\n  }\n\n  renderGrid(): void {\n    const minX = -Math.floor(this.translateX / GRID) * GRID;\n    const maxX = Math.floor(this.context.getWidth() - this.translateX / GRID) * GRID;\n    const minY = -Math.floor(this.translateY / GRID) * GRID;\n    const maxY = Math.floor(this.context.getHeight() - this.translateY / GRID) * GRID;\n\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    this.canvas.beginPath();\n    this.canvas.strokeStyle = \"#00000033\";\n    for (let x = minX; x < maxX; x += GRID) {\n      this.canvas.moveTo(x, -this.translateY);\n      this.canvas.lineTo(x, this.context.getHeight() - this.translateY);\n    }\n    for (let y = minY; y < maxY; y += GRID) {\n      this.canvas.moveTo(-this.translateX, y);\n      this.canvas.lineTo(this.context.getWidth() - this.translateX, y);\n    }\n    this.canvas.stroke();\n    this.canvas.restore();\n  }\n\n  renderDiagram(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.translate(this.translateX, this.translateY);\n    for (const child of diagram.getChildren()) {\n      child.render(this);\n    }\n    this.renderHandles(diagram);\n    this.canvas.restore();\n  }\n\n  renderClassifier(classifier: Classifier): void {\n    this.classifierRenderer.renderClassifier(classifier);\n  }\n\n  isPointInClassifier(classifier: Classifier, x: number, y: number): boolean {\n    return this.classifierRenderer.isPointInClassifier(classifier, x, y);\n  }\n\n  renderRelationship(relationship: Relationship): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(relationship.getX1(), relationship.getY1());\n    this.canvas.lineTo(relationship.getX2(), relationship.getY2());\n    this.applyRelationshipStyle(relationship);\n    this.canvas.stroke();\n    this.drawFromTip(relationship);\n    this.drawToTip(relationship);\n    this.canvas.restore();\n  }\n\n  private applyRelationshipStyle(relationship: Relationship): void {\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.fillStyle = \"white\";\n    switch (relationship.linePattern) {\n      case LinePattern.SOLID:\n        this.canvas.setLineDash([]);\n        break;\n      case LinePattern.DOTS:\n        this.canvas.setLineDash([2, 2]);\n        break;\n      case LinePattern.SMALL_DASHES:\n        this.canvas.setLineDash([5, 5]);\n        break;\n      case LinePattern.LARGE_DASHES:\n        this.canvas.setLineDash([10, 10]);\n        break;\n      case LinePattern.TIGHT_DASHES:\n        this.canvas.setLineDash([15, 5]);\n        break;\n    }\n  }\n\n  private drawFromTip(relationship: Relationship): void {\n    if (relationship.fromTip !== Tip.NONE) {\n      this.canvas.save();\n      this.canvas.setLineDash([]);\n      this.canvas.translate(relationship.getX1(), relationship.getY1());\n      this.canvas.rotate(relationship.getAngle() + Math.PI);\n      this.drawTip(relationship.fromTip);\n      this.canvas.restore();\n    }\n  }\n\n  private drawToTip(relationship: Relationship): void {\n    if (relationship.toTip !== Tip.NONE) {\n      this.canvas.save();\n      this.canvas.setLineDash([]);\n      this.canvas.translate(relationship.getX2(), relationship.getY2());\n      this.canvas.rotate(relationship.getAngle());\n      this.drawTip(relationship.toTip);\n      this.canvas.restore();\n    }\n  }\n\n  renderText(text: Text) {\n    this.context.push(\"Text\");\n    this.drawText(text.text, \"1.25rem\", \"left\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderTitle(title: Title): void {\n    this.context.push(\"Title\");\n    this.drawText(title.text, \"1.25rem\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  renderSeparator(separator: Separator): void {\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.moveTo(-PADDING, PADDING);\n    this.canvas.lineTo(this.context.getWidth() + PADDING, PADDING);\n    this.canvas.lineWidth = 1.5;\n    this.canvas.strokeStyle = \"#212529\";\n    this.canvas.stroke();\n    this.canvas.restore();\n    this.canvas.translate(0, 2 * PADDING);\n  }\n\n  renderStereotype(stereotype: Stereotype): void {\n    const contextName = this.context.getName();\n    this.context.push(\"Stereotype\");\n    this.drawText(`«${contextName}»`, \"1rem\", \"center\");\n    this.canvas.translate(0, 20);\n    this.context.pop();\n  }\n\n  private drawText(text: string, size: string, align: \"left\" | \"center\") {\n    const properties = this.context.getStyleProperties();\n    const weight = properties.getString(\"font-weight\", \"normal\");\n    const style = properties.getString(\"font-style\", \"normal\");\n\n    this.canvas.save();\n    this.canvas.beginPath();\n    this.canvas.font = `${style} ${weight} ${size} system-ui`;\n    this.canvas.fillStyle = properties.getColor(\"color\", Color.DARK).toHexString();\n    const metrics = this.canvas.measureText(text);\n    const x = align === \"center\" ? (this.context.getWidth() - metrics.width) / 2 : 0;\n    this.canvas.fillText(text, x, metrics.fontBoundingBoxAscent - 3);\n    this.canvas.restore();\n  }\n\n  private drawTip(tip: Tip): void {\n    switch (tip) {\n      case Tip.ARROW:\n        this.drawArrow();\n        break;\n      case Tip.TRIANGLE:\n        this.drawTriangle();\n        break;\n      case Tip.FILLED_TRIANGLE:\n        this.canvas.fillStyle = this.canvas.strokeStyle;\n        this.drawTriangle();\n        break;\n      case Tip.DIAMOND:\n        this.drawDiamond();\n        break;\n      case Tip.FILLED_DIAMOND:\n        this.canvas.fillStyle = this.canvas.strokeStyle;\n        this.drawDiamond();\n        break;\n      case Tip.CIRCLE:\n        this.drawCircle();\n        break;\n      case Tip.FILLED_CIRCLE:\n        this.canvas.fillStyle = this.canvas.strokeStyle;\n        this.drawCircle();\n        break;\n    }\n  }\n\n  private drawArrow() {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 8);\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, -8);\n    this.canvas.closePath();\n    this.canvas.stroke();\n  }\n\n  private drawTriangle(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-20, 10);\n    this.canvas.lineTo(-20, -10);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawDiamond(): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(0, 0);\n    this.canvas.lineTo(-15, 8);\n    this.canvas.lineTo(-30, 0);\n    this.canvas.lineTo(-15, -8);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private drawCircle(): void {\n    this.canvas.beginPath();\n    this.canvas.ellipse(-10, 0, 10, 10, 0, 0, 2 * Math.PI);\n    this.canvas.closePath();\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  private renderHandles(diagram: Diagram): void {\n    this.canvas.save();\n    this.canvas.fillStyle = \"white\";\n    this.canvas.strokeStyle = \"black\";\n    this.canvas.lineWidth = 1;\n\n    for (const { x, y } of this.getHandles(diagram)) {\n      this.renderHandleAtPoint(x, y);\n    }\n\n    this.canvas.restore();\n  }\n\n  private *getHandles(diagram: Diagram): Generator<Handle> {\n    for (const child of diagram.getChildren()) {\n      if (child instanceof Classifier && child.isSelected()) {\n        yield* this.getClassifierHandles(child);\n      }\n    }\n  }\n\n  private renderHandleAtPoint(x: number, y: number): void {\n    this.canvas.beginPath();\n    this.canvas.rect(x - HANDLE_RADIUS, y - HANDLE_RADIUS, HANDLE_RADIUS * 2, HANDLE_RADIUS * 2);\n    this.canvas.fill();\n    this.canvas.stroke();\n  }\n\n  findHandleForPoint(diagram: Diagram, x: number, y: number): Handle | undefined {\n    for (const handle of this.getHandles(diagram)) {\n      if (this.isPointInHandle(handle, x, y)) {\n        return handle;\n      }\n    }\n    return undefined;\n  }\n\n  private isPointInHandle(handle: Handle, x: number, y: number): boolean {\n    return Math.abs(x - handle.x) <= HANDLE_RADIUS && Math.abs(y - handle.y) <= HANDLE_RADIUS;\n  }\n\n  private *getClassifierHandles(classifier: Classifier): Generator<Handle> {\n    const x1 = classifier.getLeft();\n    const x2 = classifier.getRight();\n    const y1 = classifier.getTop();\n    const y2 = classifier.getBottom();\n\n    yield new Handle(x1, y1, Anchor.NW);\n    yield new Handle(classifier.getCenterX(), y1, Anchor.N);\n    yield new Handle(x2, y1, Anchor.NE);\n    yield new Handle(x1, classifier.getCenterY(), Anchor.W);\n    yield new Handle(x2, classifier.getCenterY(), Anchor.E);\n    yield new Handle(x1, y2, Anchor.SW);\n    yield new Handle(classifier.getCenterX(), y2, Anchor.S);\n    yield new Handle(x2, y2, Anchor.SE);\n  }\n}\n\nexport default CanvasRenderer;\n","import { CanvasRenderer } from \"../../renderer\";\nimport { downloadFile, File, sanitizeFilename } from \"../../utils\";\nimport { DropdownItem, Icon } from \"../blocks\";\n\ninterface Props {\n  file: File;\n}\n\nconst MARGIN = 10;\n\nfunction PNGExport({ file }: Props) {\n  function handleClick() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = file.model.getWidth() + 2 * MARGIN;\n    canvas.height = file.model.getHeight() + 2 * MARGIN;\n\n    const renderer = new CanvasRenderer(canvas, file.style, {\n      translateX: MARGIN - file.model.getLeft(),\n      translateY: MARGIN - file.model.getTop(),\n    });\n    renderer.renderDiagram(file.model);\n\n    const dataURL = canvas.toDataURL(\"image/png\");\n    downloadFile(`${sanitizeFilename(file.title)}.png`, dataURL);\n  }\n\n  return (\n    <DropdownItem onClick={handleClick} shortcut=\"Ctrl-E\">\n      <Icon name=\"image\" /> As PNG\n    </DropdownItem>\n  );\n}\n\nexport default PNGExport;\n","import { Dispatch } from \"react\";\nimport { ViewOptions, File, SerializableFile } from \"../../utils\";\nimport { DropdownDivider, Menu, MenuBar } from \"../blocks\";\nimport FileNew from \"./FileNew\";\nimport FileOpen from \"./FileOpen\";\nimport FileRename from \"./FileRename\";\nimport FileSave from \"./FileSave\";\nimport Grid from \"./Grid\";\nimport PNGExport from \"./PNGExport\";\n\ninterface Props {\n  file: File;\n  viewOptions: ViewOptions;\n  onFileChange: Dispatch<SerializableFile>;\n  onViewOptionsChange: Dispatch<ViewOptions>;\n}\n\nfunction AppMenu({ file, viewOptions, onFileChange, onViewOptionsChange }: Props) {\n  return (\n    <MenuBar>\n      <Menu title=\"File\">\n        <FileNew onFileChange={onFileChange} />\n        <DropdownDivider />\n        <FileOpen onFileChange={onFileChange} />\n        <FileSave file={file} />\n        <DropdownDivider />\n        <FileRename file={file} onTitleChange={(title) => onFileChange({ ...file, title })} />\n      </Menu>\n\n      <Menu title=\"View\">\n        <Grid viewOptions={viewOptions} onViewOptionsChange={onViewOptionsChange} />\n      </Menu>\n\n      <Menu title=\"Export\">\n        <PNGExport file={file} />\n      </Menu>\n    </MenuBar>\n  );\n}\n\nexport default AppMenu;\n","import { MouseEvent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { GRID } from \"../../constants\";\nimport { Style } from \"../../css\";\nimport { Anchor, Classifier, Diagram, Element, Rectangle } from \"../../model\";\nimport { CanvasRenderer, Handle } from \"../../renderer\";\nimport {\n  Coordinates,\n  getMouseCoordinates,\n  roundCoordsBy,\n  subtractCoords,\n  ViewOptions,\n} from \"../../utils\";\n\ninterface Props {\n  viewOptions: ViewOptions;\n  diagram: Diagram;\n  style: Style;\n  onChange?: (element: Element) => void;\n}\n\nfunction createRenderer(canvas: HTMLCanvasElement, style: Style): CanvasRenderer {\n  return new CanvasRenderer(canvas, style, {\n    translateX: canvas.width / 2,\n    translateY: canvas.height / 2,\n  });\n}\n\nfunction Canvas({ viewOptions, diagram, style, onChange }: Props) {\n  const options = useRef(viewOptions);\n  const div = useRef<HTMLDivElement>(null);\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const mouseDownCoords = useRef<Coordinates>(null) as MutableRefObject<Coordinates | null>;\n  const mouseDownRectangle = useRef<Rectangle>(null) as MutableRefObject<Rectangle | null>;\n  const mouseDownObject = useRef<Handle | Element>(null) as MutableRefObject<\n    Handle | Element | null\n  >;\n\n  useEffect(() => {\n    options.current = viewOptions;\n  });\n\n  useEffect(() => {\n    function onResize() {\n      const rect = div.current!.getBoundingClientRect();\n      canvas.current!.width = Math.trunc(rect.width);\n      canvas.current!.height = Math.trunc(rect.height);\n\n      const renderer = createRenderer(canvas.current!, style);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [viewOptions, diagram, style]);\n\n  function setCursor(cursor: string): void {\n    canvas.current!.style.cursor = cursor;\n  }\n\n  function handleHandleUpdate(target: Classifier, handle: Handle, deltaX: number, deltaY: number) {\n    if (handle.anchor === Anchor.W || handle.anchor === Anchor.NW || handle.anchor === Anchor.SW) {\n      target.setWidth(mouseDownRectangle.current!.width - deltaX);\n      target.setLeft(mouseDownRectangle.current!.x + deltaX);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.E || handle.anchor === Anchor.NE || handle.anchor === Anchor.SE) {\n      target.setWidth(mouseDownRectangle.current!.width + deltaX);\n      target.setLeft(mouseDownRectangle.current!.x);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.N || handle.anchor === Anchor.NW || handle.anchor === Anchor.NE) {\n      target.setHeight(mouseDownRectangle.current!.height - deltaY);\n      target.setTop(mouseDownRectangle.current!.y + deltaY);\n      onChange?.(target);\n    }\n    if (handle.anchor === Anchor.S || handle.anchor === Anchor.SW || handle.anchor === Anchor.SE) {\n      target.setHeight(mouseDownRectangle.current!.height + deltaY);\n      target.setTop(mouseDownRectangle.current!.y);\n      onChange?.(target);\n    }\n  }\n\n  function handleLeftMouseButtonMove(x: number, y: number) {\n    const target = diagram.find((el) => el.isSelected());\n    if (target instanceof Classifier) {\n      const { x: deltaX, y: deltaY } = roundCoordsBy(\n        subtractCoords({ x, y }, mouseDownCoords.current!),\n        GRID,\n      );\n      if (mouseDownObject.current === target) {\n        target.setLeft(mouseDownRectangle.current!.x + deltaX);\n        target.setTop(mouseDownRectangle.current!.y + deltaY);\n        onChange?.(target);\n        return;\n      }\n      if (mouseDownObject.current instanceof Handle) {\n        handleHandleUpdate(target, mouseDownObject.current, deltaX, deltaY);\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    if (event.buttons & 1) {\n      handleLeftMouseButtonMove(x, y);\n      renderer.clear();\n      if (options.current.grid) {\n        renderer.renderGrid();\n      }\n      renderer.renderDiagram(diagram);\n      return;\n    }\n\n    for (const element of diagram) {\n      element.setHovered(false);\n    }\n\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined) {\n      setCursor(`${Anchor[handle.anchor].toLowerCase()}-resize`);\n    } else {\n      setCursor(\"default\");\n\n      for (const classifier of diagram) {\n        if (classifier instanceof Classifier) {\n          const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n          if (isInClassifier) {\n            classifier.setHovered(true);\n            break;\n          }\n        }\n      }\n    }\n\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function renderMouseDown(renderer: CanvasRenderer, x: number, y: number) {\n    const selectedElement = diagram.find((el) => el.isSelected());\n    const handle = renderer.findHandleForPoint(diagram, x, y);\n    if (handle !== undefined && selectedElement instanceof Classifier) {\n      mouseDownRectangle.current = selectedElement.getRectangle();\n      mouseDownCoords.current = { x, y };\n      mouseDownObject.current = handle;\n      return;\n    }\n\n    selectedElement?.setSelected(false);\n    for (const classifier of diagram) {\n      if (classifier instanceof Classifier) {\n        const isInClassifier = renderer.isPointInClassifier(classifier, x, y);\n        if (isInClassifier) {\n          classifier.setSelected(true);\n          mouseDownRectangle.current = classifier.getRectangle();\n          mouseDownCoords.current = { x, y };\n          mouseDownObject.current = classifier;\n          return;\n        }\n      }\n    }\n  }\n\n  function handleMouseDown(event: MouseEvent<HTMLCanvasElement>) {\n    const renderer = createRenderer(canvas.current!, style);\n    const { x, y } = getMouseCoordinates(event);\n\n    renderMouseDown(renderer, x, y);\n    renderer.clear();\n    if (options.current.grid) {\n      renderer.renderGrid();\n    }\n    renderer.renderDiagram(diagram);\n  }\n\n  function handleMouseUp() {\n    mouseDownRectangle.current = null;\n    mouseDownCoords.current = null;\n    mouseDownObject.current = null;\n  }\n\n  return (\n    <div\n      ref={div}\n      className=\"Canvas\"\n      style={{\n        backgroundColor: \"hsl(220 9% 92% / 1)\",\n        gridArea: \"canvas\",\n      }}\n    >\n      <canvas\n        ref={canvas}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </div>\n  );\n}\n\nexport default Canvas;\n","import { Editor } from \"../blocks\";\n\ninterface Props {\n  css: string;\n  onChange?: (css: string) => void;\n}\n\nfunction CSSEditor({ css, onChange }: Props) {\n  return (\n    <div className=\"CSSEditor\" style={{ gridArea: \"css\", position: \"relative\" }}>\n      <Editor language=\"css\" value={css} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default CSSEditor;\n","import { Anchor, LinePattern, Shape, Tip } from \"../../model\";\n\nconst anchorSchema = Object.keys(Anchor)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst shapeSchema = Object.keys(Shape)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst tipSchema = Object.keys(Tip)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst linePatternSchema = Object.keys(LinePattern)\n  .filter((it) => it.match(/^\\D+$/))\n  .map((it) => it.toLowerCase());\n\nconst classifierSchema = {\n  children: [\"Title\", \"Separator\", \"Method\", \"Stereotype\"],\n  attrs: {\n    x: null,\n    y: null,\n    width: null,\n    height: null,\n    anchor: anchorSchema,\n    shape: shapeSchema,\n  },\n};\n\nconst relationshipSchema = {\n  attrs: {\n    from: null,\n    fromTip: tipSchema,\n    to: null,\n    toTip: tipSchema,\n    linePattern: linePatternSchema,\n  },\n};\n\nconst classifiers = {\n  Class: classifierSchema,\n  Classifier: classifierSchema,\n  Component: classifierSchema,\n  DataType: classifierSchema,\n  Enumeration: classifierSchema,\n  Interface: classifierSchema,\n  Note: classifierSchema,\n  Object: classifierSchema,\n  Package: classifierSchema,\n  Primitive: classifierSchema,\n};\n\nconst relationships = {\n  Aggregation: relationshipSchema,\n  Anchor: relationshipSchema,\n  Association: relationshipSchema,\n  Composition: relationshipSchema,\n  Dependency: relationshipSchema,\n  DirectedAssociation: relationshipSchema,\n  Generalization: relationshipSchema,\n  Implementation: relationshipSchema,\n  Relationship: relationshipSchema,\n};\n\nconst schema = {\n  \"!top\": [\"Diagram\"],\n  \"!attrs\": {\n    id: null,\n    class: null,\n  },\n  Diagram: {\n    children: [...Object.keys(classifiers), ...Object.keys(relationships)],\n  },\n  ...classifiers,\n  ...relationships,\n};\n\nexport default schema;\n","import { Editor } from \"../blocks\";\nimport { xmlSchema } from \"../schemas\";\n\ninterface Props {\n  xml: string;\n  onChange: (xml: string) => void;\n}\n\nfunction XMLEditor({ xml, onChange }: Props) {\n  return (\n    <div className=\"XMLEditor\" style={{ gridArea: \"xml\", position: \"relative\" }}>\n      <Editor language=\"xml\" value={xml} schema={xmlSchema} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default XMLEditor;\n","import { useEffect, useState } from \"react\";\nimport { INITIAL_CSS, INITIAL_XML } from \"../constants\";\nimport { parser, Style } from \"../css\";\nimport { useDocumentTitle } from \"../hooks\";\nimport { Diagram, Element } from \"../model\";\nimport { serializer } from \"../serializer\";\nimport { ViewOptions, SerializableFile } from \"../utils\";\nimport { AppMenu, Canvas, CSSEditor, XMLEditor } from \"./widgets\";\nimport \"./App.css\";\n\nfunction App() {\n  const [viewOptions, setViewOptions] = useState<ViewOptions>({ grid: false });\n  const [diagram, setDiagram] = useState(() => new Diagram());\n  const [style, setStyle] = useState(() => new Style());\n  const [title, setTitle] = useState(\"Untitled\");\n  const [xml, setXml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n\n  useDocumentTitle(`${title} - UML Editor`);\n\n  function handleXmlChange(xml: string): void {\n    const diagram = serializer.deserialize(xml);\n    setDiagram(diagram);\n    setXml(xml);\n  }\n\n  function handleCssChange(css: string): void {\n    const style = parser.parseFromString(css);\n    setStyle(style);\n    setCss(css);\n  }\n\n  function handleCanvasChange(element: Element): void {\n    serializer.updateElement(element);\n    const xml = serializer.serialize(diagram);\n    setXml(xml);\n  }\n\n  function handleFileChange(file: SerializableFile): void {\n    const diagram = serializer.deserialize(file.xml);\n    const style = parser.parseFromString(file.css);\n    setTitle(file.title);\n    setCss(file.css);\n    setXml(file.xml);\n    setDiagram(diagram);\n    setStyle(style);\n  }\n\n  useEffect(() => {\n    const diagram = serializer.deserialize(INITIAL_XML);\n    const style = parser.parseFromString(INITIAL_CSS);\n    setDiagram(diagram);\n    setStyle(style);\n    setXml(INITIAL_XML);\n    setCss(INITIAL_CSS);\n  }, []);\n\n  return (\n    <div className=\"App bg-secondary\">\n      <AppMenu\n        file={{ title, model: diagram, style, xml, css }}\n        viewOptions={viewOptions}\n        onFileChange={handleFileChange}\n        onViewOptionsChange={setViewOptions}\n      />\n      <XMLEditor xml={xml} onChange={handleXmlChange} />\n      <CSSEditor css={css} onChange={handleCssChange} />\n      <Canvas\n        viewOptions={viewOptions}\n        diagram={diagram}\n        style={style}\n        onChange={handleCanvasChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}